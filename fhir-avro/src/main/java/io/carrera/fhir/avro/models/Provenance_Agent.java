/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Provenance_Agent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5490350042972038598L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Provenance_Agent\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"who\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"onBehalfOf\",\"type\":[\"null\",\"Reference\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Provenance_Agent> ENCODER =
      new BinaryMessageEncoder<Provenance_Agent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Provenance_Agent> DECODER =
      new BinaryMessageDecoder<Provenance_Agent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Provenance_Agent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Provenance_Agent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Provenance_Agent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Provenance_Agent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Provenance_Agent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Provenance_Agent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Provenance_Agent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Provenance_Agent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private io.carrera.fhir.avro.models.CodeableConcept type;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> role;
   private io.carrera.fhir.avro.models.Reference who;
   private io.carrera.fhir.avro.models.Reference onBehalfOf;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Provenance_Agent() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param role The new value for role
   * @param who The new value for who
   * @param onBehalfOf The new value for onBehalfOf
   */
  public Provenance_Agent(io.carrera.fhir.avro.models.CodeableConcept type, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> role, io.carrera.fhir.avro.models.Reference who, io.carrera.fhir.avro.models.Reference onBehalfOf) {
    this.type = type;
    this.role = role;
    this.who = who;
    this.onBehalfOf = onBehalfOf;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return role;
    case 2: return who;
    case 3: return onBehalfOf;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 1: role = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 2: who = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 3: onBehalfOf = (io.carrera.fhir.avro.models.Reference)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getRole() {
    return role;
  }


  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'who' field.
   * @return The value of the 'who' field.
   */
  public io.carrera.fhir.avro.models.Reference getWho() {
    return who;
  }


  /**
   * Sets the value of the 'who' field.
   * @param value the value to set.
   */
  public void setWho(io.carrera.fhir.avro.models.Reference value) {
    this.who = value;
  }

  /**
   * Gets the value of the 'onBehalfOf' field.
   * @return The value of the 'onBehalfOf' field.
   */
  public io.carrera.fhir.avro.models.Reference getOnBehalfOf() {
    return onBehalfOf;
  }


  /**
   * Sets the value of the 'onBehalfOf' field.
   * @param value the value to set.
   */
  public void setOnBehalfOf(io.carrera.fhir.avro.models.Reference value) {
    this.onBehalfOf = value;
  }

  /**
   * Creates a new Provenance_Agent RecordBuilder.
   * @return A new Provenance_Agent RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Provenance_Agent.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Provenance_Agent.Builder();
  }

  /**
   * Creates a new Provenance_Agent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Provenance_Agent RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Provenance_Agent.Builder newBuilder(io.carrera.fhir.avro.models.Provenance_Agent.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Provenance_Agent.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Provenance_Agent.Builder(other);
    }
  }

  /**
   * Creates a new Provenance_Agent RecordBuilder by copying an existing Provenance_Agent instance.
   * @param other The existing instance to copy.
   * @return A new Provenance_Agent RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Provenance_Agent.Builder newBuilder(io.carrera.fhir.avro.models.Provenance_Agent other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Provenance_Agent.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Provenance_Agent.Builder(other);
    }
  }

  /**
   * RecordBuilder for Provenance_Agent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Provenance_Agent>
    implements org.apache.avro.data.RecordBuilder<Provenance_Agent> {

    private io.carrera.fhir.avro.models.CodeableConcept type;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder typeBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> role;
    private io.carrera.fhir.avro.models.Reference who;
    private io.carrera.fhir.avro.models.Reference.Builder whoBuilder;
    private io.carrera.fhir.avro.models.Reference onBehalfOf;
    private io.carrera.fhir.avro.models.Reference.Builder onBehalfOfBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Provenance_Agent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[1], other.role)) {
        this.role = data().deepCopy(fields()[1].schema(), other.role);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.who)) {
        this.who = data().deepCopy(fields()[2].schema(), other.who);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasWhoBuilder()) {
        this.whoBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getWhoBuilder());
      }
      if (isValidValue(fields()[3], other.onBehalfOf)) {
        this.onBehalfOf = data().deepCopy(fields()[3].schema(), other.onBehalfOf);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasOnBehalfOfBuilder()) {
        this.onBehalfOfBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getOnBehalfOfBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Provenance_Agent instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Provenance_Agent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[1], other.role)) {
        this.role = data().deepCopy(fields()[1].schema(), other.role);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.who)) {
        this.who = data().deepCopy(fields()[2].schema(), other.who);
        fieldSetFlags()[2] = true;
      }
      this.whoBuilder = null;
      if (isValidValue(fields()[3], other.onBehalfOf)) {
        this.onBehalfOf = data().deepCopy(fields()[3].schema(), other.onBehalfOf);
        fieldSetFlags()[3] = true;
      }
      this.onBehalfOfBuilder = null;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setType(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[0], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(type));
        } else {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getRole() {
      return role;
    }


    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setRole(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[1], value);
      this.role = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder clearRole() {
      role = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'who' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getWho() {
      return who;
    }


    /**
      * Sets the value of the 'who' field.
      * @param value The value of 'who'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setWho(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[2], value);
      this.whoBuilder = null;
      this.who = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'who' field has been set.
      * @return True if the 'who' field has been set, false otherwise.
      */
    public boolean hasWho() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'who' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getWhoBuilder() {
      if (whoBuilder == null) {
        if (hasWho()) {
          setWhoBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(who));
        } else {
          setWhoBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return whoBuilder;
    }

    /**
     * Sets the Builder instance for the 'who' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setWhoBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearWho();
      whoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'who' field has an active Builder instance
     * @return True if the 'who' field has an active Builder instance
     */
    public boolean hasWhoBuilder() {
      return whoBuilder != null;
    }

    /**
      * Clears the value of the 'who' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder clearWho() {
      who = null;
      whoBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'onBehalfOf' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getOnBehalfOf() {
      return onBehalfOf;
    }


    /**
      * Sets the value of the 'onBehalfOf' field.
      * @param value The value of 'onBehalfOf'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setOnBehalfOf(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[3], value);
      this.onBehalfOfBuilder = null;
      this.onBehalfOf = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'onBehalfOf' field has been set.
      * @return True if the 'onBehalfOf' field has been set, false otherwise.
      */
    public boolean hasOnBehalfOf() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'onBehalfOf' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getOnBehalfOfBuilder() {
      if (onBehalfOfBuilder == null) {
        if (hasOnBehalfOf()) {
          setOnBehalfOfBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(onBehalfOf));
        } else {
          setOnBehalfOfBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return onBehalfOfBuilder;
    }

    /**
     * Sets the Builder instance for the 'onBehalfOf' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Provenance_Agent.Builder setOnBehalfOfBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearOnBehalfOf();
      onBehalfOfBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'onBehalfOf' field has an active Builder instance
     * @return True if the 'onBehalfOf' field has an active Builder instance
     */
    public boolean hasOnBehalfOfBuilder() {
      return onBehalfOfBuilder != null;
    }

    /**
      * Clears the value of the 'onBehalfOf' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance_Agent.Builder clearOnBehalfOf() {
      onBehalfOf = null;
      onBehalfOfBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Provenance_Agent build() {
      try {
        Provenance_Agent record = new Provenance_Agent();
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[0] ? this.type : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[0]);
        }
        record.role = fieldSetFlags()[1] ? this.role : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[1]);
        if (whoBuilder != null) {
          try {
            record.who = this.whoBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("who"));
            throw e;
          }
        } else {
          record.who = fieldSetFlags()[2] ? this.who : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[2]);
        }
        if (onBehalfOfBuilder != null) {
          try {
            record.onBehalfOf = this.onBehalfOfBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("onBehalfOf"));
            throw e;
          }
        } else {
          record.onBehalfOf = fieldSetFlags()[3] ? this.onBehalfOf : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[3]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Provenance_Agent>
    WRITER$ = (org.apache.avro.io.DatumWriter<Provenance_Agent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Provenance_Agent>
    READER$ = (org.apache.avro.io.DatumReader<Provenance_Agent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.type.customEncode(out);
    }

    if (this.role == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.role.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (io.carrera.fhir.avro.models.CodeableConcept e0: this.role) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    this.who.customEncode(out);

    if (this.onBehalfOf == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.onBehalfOf.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        if (this.type == null) {
          this.type = new io.carrera.fhir.avro.models.CodeableConcept();
        }
        this.type.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.role = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<io.carrera.fhir.avro.models.CodeableConcept> a0 = this.role;
        if (a0 == null) {
          a0 = new SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>((int)size0, SCHEMA$.getField("role").schema().getTypes().get(1));
          this.role = a0;
        } else a0.clear();
        SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            io.carrera.fhir.avro.models.CodeableConcept e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (this.who == null) {
        this.who = new io.carrera.fhir.avro.models.Reference();
      }
      this.who.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.onBehalfOf = null;
      } else {
        if (this.onBehalfOf == null) {
          this.onBehalfOf = new io.carrera.fhir.avro.models.Reference();
        }
        this.onBehalfOf.customDecode(in);
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            if (this.type == null) {
              this.type = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            this.type.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.role = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<io.carrera.fhir.avro.models.CodeableConcept> a0 = this.role;
            if (a0 == null) {
              a0 = new SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>((int)size0, SCHEMA$.getField("role").schema().getTypes().get(1));
              this.role = a0;
            } else a0.clear();
            SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                io.carrera.fhir.avro.models.CodeableConcept e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new io.carrera.fhir.avro.models.CodeableConcept();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 2:
          if (this.who == null) {
            this.who = new io.carrera.fhir.avro.models.Reference();
          }
          this.who.customDecode(in);
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.onBehalfOf = null;
          } else {
            if (this.onBehalfOf == null) {
              this.onBehalfOf = new io.carrera.fhir.avro.models.Reference();
            }
            this.onBehalfOf.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










