/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Coverage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3940272197779415616L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Coverage\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"identifier_record\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"policyHolder\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"subscriber\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"subscriberId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"beneficiary\",\"type\":\"Reference\"},{\"name\":\"dependent\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"relationship\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"period\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"},{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"localDateTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"},\"DateTime\"],\"default\":null}]}],\"default\":null},{\"name\":\"payor\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"order\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"network\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subrogation\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMicrosConversion());
  }

  private static final BinaryMessageEncoder<Coverage> ENCODER =
      new BinaryMessageEncoder<Coverage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Coverage> DECODER =
      new BinaryMessageDecoder<Coverage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Coverage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Coverage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Coverage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Coverage>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Coverage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Coverage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Coverage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Coverage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
   private java.lang.CharSequence status;
   private io.carrera.fhir.avro.models.CodeableConcept type;
   private io.carrera.fhir.avro.models.Reference policyHolder;
   private io.carrera.fhir.avro.models.Reference subscriber;
   private java.lang.CharSequence subscriberId;
   private io.carrera.fhir.avro.models.Reference beneficiary;
   private java.lang.CharSequence dependent;
   private io.carrera.fhir.avro.models.CodeableConcept relationship;
   private io.carrera.fhir.avro.models.Period period;
   private java.util.List<io.carrera.fhir.avro.models.Reference> payor;
   private java.lang.Integer order;
   private java.lang.CharSequence network;
   private java.lang.Boolean subrogation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Coverage() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param identifier The new value for identifier
   * @param status The new value for status
   * @param type The new value for type
   * @param policyHolder The new value for policyHolder
   * @param subscriber The new value for subscriber
   * @param subscriberId The new value for subscriberId
   * @param beneficiary The new value for beneficiary
   * @param dependent The new value for dependent
   * @param relationship The new value for relationship
   * @param period The new value for period
   * @param payor The new value for payor
   * @param order The new value for order
   * @param network The new value for network
   * @param subrogation The new value for subrogation
   */
  public Coverage(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier, java.lang.CharSequence status, io.carrera.fhir.avro.models.CodeableConcept type, io.carrera.fhir.avro.models.Reference policyHolder, io.carrera.fhir.avro.models.Reference subscriber, java.lang.CharSequence subscriberId, io.carrera.fhir.avro.models.Reference beneficiary, java.lang.CharSequence dependent, io.carrera.fhir.avro.models.CodeableConcept relationship, io.carrera.fhir.avro.models.Period period, java.util.List<io.carrera.fhir.avro.models.Reference> payor, java.lang.Integer order, java.lang.CharSequence network, java.lang.Boolean subrogation) {
    this.resourceType = resourceType;
    this.id = id;
    this.identifier = identifier;
    this.status = status;
    this.type = type;
    this.policyHolder = policyHolder;
    this.subscriber = subscriber;
    this.subscriberId = subscriberId;
    this.beneficiary = beneficiary;
    this.dependent = dependent;
    this.relationship = relationship;
    this.period = period;
    this.payor = payor;
    this.order = order;
    this.network = network;
    this.subrogation = subrogation;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return identifier;
    case 3: return status;
    case 4: return type;
    case 5: return policyHolder;
    case 6: return subscriber;
    case 7: return subscriberId;
    case 8: return beneficiary;
    case 9: return dependent;
    case 10: return relationship;
    case 11: return period;
    case 12: return payor;
    case 13: return order;
    case 14: return network;
    case 15: return subrogation;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: identifier = (java.util.List<io.carrera.fhir.avro.models.identifier_record>)value$; break;
    case 3: status = (java.lang.CharSequence)value$; break;
    case 4: type = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: policyHolder = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 6: subscriber = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 7: subscriberId = (java.lang.CharSequence)value$; break;
    case 8: beneficiary = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 9: dependent = (java.lang.CharSequence)value$; break;
    case 10: relationship = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 11: period = (io.carrera.fhir.avro.models.Period)value$; break;
    case 12: payor = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 13: order = (java.lang.Integer)value$; break;
    case 14: network = (java.lang.CharSequence)value$; break;
    case 15: subrogation = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'policyHolder' field.
   * @return The value of the 'policyHolder' field.
   */
  public io.carrera.fhir.avro.models.Reference getPolicyHolder() {
    return policyHolder;
  }


  /**
   * Sets the value of the 'policyHolder' field.
   * @param value the value to set.
   */
  public void setPolicyHolder(io.carrera.fhir.avro.models.Reference value) {
    this.policyHolder = value;
  }

  /**
   * Gets the value of the 'subscriber' field.
   * @return The value of the 'subscriber' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubscriber() {
    return subscriber;
  }


  /**
   * Sets the value of the 'subscriber' field.
   * @param value the value to set.
   */
  public void setSubscriber(io.carrera.fhir.avro.models.Reference value) {
    this.subscriber = value;
  }

  /**
   * Gets the value of the 'subscriberId' field.
   * @return The value of the 'subscriberId' field.
   */
  public java.lang.CharSequence getSubscriberId() {
    return subscriberId;
  }


  /**
   * Sets the value of the 'subscriberId' field.
   * @param value the value to set.
   */
  public void setSubscriberId(java.lang.CharSequence value) {
    this.subscriberId = value;
  }

  /**
   * Gets the value of the 'beneficiary' field.
   * @return The value of the 'beneficiary' field.
   */
  public io.carrera.fhir.avro.models.Reference getBeneficiary() {
    return beneficiary;
  }


  /**
   * Sets the value of the 'beneficiary' field.
   * @param value the value to set.
   */
  public void setBeneficiary(io.carrera.fhir.avro.models.Reference value) {
    this.beneficiary = value;
  }

  /**
   * Gets the value of the 'dependent' field.
   * @return The value of the 'dependent' field.
   */
  public java.lang.CharSequence getDependent() {
    return dependent;
  }


  /**
   * Sets the value of the 'dependent' field.
   * @param value the value to set.
   */
  public void setDependent(java.lang.CharSequence value) {
    this.dependent = value;
  }

  /**
   * Gets the value of the 'relationship' field.
   * @return The value of the 'relationship' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getRelationship() {
    return relationship;
  }


  /**
   * Sets the value of the 'relationship' field.
   * @param value the value to set.
   */
  public void setRelationship(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.relationship = value;
  }

  /**
   * Gets the value of the 'period' field.
   * @return The value of the 'period' field.
   */
  public io.carrera.fhir.avro.models.Period getPeriod() {
    return period;
  }


  /**
   * Sets the value of the 'period' field.
   * @param value the value to set.
   */
  public void setPeriod(io.carrera.fhir.avro.models.Period value) {
    this.period = value;
  }

  /**
   * Gets the value of the 'payor' field.
   * @return The value of the 'payor' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getPayor() {
    return payor;
  }


  /**
   * Sets the value of the 'payor' field.
   * @param value the value to set.
   */
  public void setPayor(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.payor = value;
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public java.lang.Integer getOrder() {
    return order;
  }


  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(java.lang.Integer value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'network' field.
   * @return The value of the 'network' field.
   */
  public java.lang.CharSequence getNetwork() {
    return network;
  }


  /**
   * Sets the value of the 'network' field.
   * @param value the value to set.
   */
  public void setNetwork(java.lang.CharSequence value) {
    this.network = value;
  }

  /**
   * Gets the value of the 'subrogation' field.
   * @return The value of the 'subrogation' field.
   */
  public java.lang.Boolean getSubrogation() {
    return subrogation;
  }


  /**
   * Sets the value of the 'subrogation' field.
   * @param value the value to set.
   */
  public void setSubrogation(java.lang.Boolean value) {
    this.subrogation = value;
  }

  /**
   * Creates a new Coverage RecordBuilder.
   * @return A new Coverage RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Coverage.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Coverage.Builder();
  }

  /**
   * Creates a new Coverage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Coverage RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Coverage.Builder newBuilder(io.carrera.fhir.avro.models.Coverage.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Coverage.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Coverage.Builder(other);
    }
  }

  /**
   * Creates a new Coverage RecordBuilder by copying an existing Coverage instance.
   * @param other The existing instance to copy.
   * @return A new Coverage RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Coverage.Builder newBuilder(io.carrera.fhir.avro.models.Coverage other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Coverage.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Coverage.Builder(other);
    }
  }

  /**
   * RecordBuilder for Coverage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Coverage>
    implements org.apache.avro.data.RecordBuilder<Coverage> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
    private java.lang.CharSequence status;
    private io.carrera.fhir.avro.models.CodeableConcept type;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder typeBuilder;
    private io.carrera.fhir.avro.models.Reference policyHolder;
    private io.carrera.fhir.avro.models.Reference.Builder policyHolderBuilder;
    private io.carrera.fhir.avro.models.Reference subscriber;
    private io.carrera.fhir.avro.models.Reference.Builder subscriberBuilder;
    private java.lang.CharSequence subscriberId;
    private io.carrera.fhir.avro.models.Reference beneficiary;
    private io.carrera.fhir.avro.models.Reference.Builder beneficiaryBuilder;
    private java.lang.CharSequence dependent;
    private io.carrera.fhir.avro.models.CodeableConcept relationship;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder relationshipBuilder;
    private io.carrera.fhir.avro.models.Period period;
    private io.carrera.fhir.avro.models.Period.Builder periodBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Reference> payor;
    private java.lang.Integer order;
    private java.lang.CharSequence network;
    private java.lang.Boolean subrogation;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Coverage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[5], other.policyHolder)) {
        this.policyHolder = data().deepCopy(fields()[5].schema(), other.policyHolder);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasPolicyHolderBuilder()) {
        this.policyHolderBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getPolicyHolderBuilder());
      }
      if (isValidValue(fields()[6], other.subscriber)) {
        this.subscriber = data().deepCopy(fields()[6].schema(), other.subscriber);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasSubscriberBuilder()) {
        this.subscriberBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubscriberBuilder());
      }
      if (isValidValue(fields()[7], other.subscriberId)) {
        this.subscriberId = data().deepCopy(fields()[7].schema(), other.subscriberId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.beneficiary)) {
        this.beneficiary = data().deepCopy(fields()[8].schema(), other.beneficiary);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasBeneficiaryBuilder()) {
        this.beneficiaryBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getBeneficiaryBuilder());
      }
      if (isValidValue(fields()[9], other.dependent)) {
        this.dependent = data().deepCopy(fields()[9].schema(), other.dependent);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.relationship)) {
        this.relationship = data().deepCopy(fields()[10].schema(), other.relationship);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasRelationshipBuilder()) {
        this.relationshipBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getRelationshipBuilder());
      }
      if (isValidValue(fields()[11], other.period)) {
        this.period = data().deepCopy(fields()[11].schema(), other.period);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasPeriodBuilder()) {
        this.periodBuilder = io.carrera.fhir.avro.models.Period.newBuilder(other.getPeriodBuilder());
      }
      if (isValidValue(fields()[12], other.payor)) {
        this.payor = data().deepCopy(fields()[12].schema(), other.payor);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.order)) {
        this.order = data().deepCopy(fields()[13].schema(), other.order);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.network)) {
        this.network = data().deepCopy(fields()[14].schema(), other.network);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.subrogation)) {
        this.subrogation = data().deepCopy(fields()[15].schema(), other.subrogation);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
    }

    /**
     * Creates a Builder by copying an existing Coverage instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Coverage other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[5], other.policyHolder)) {
        this.policyHolder = data().deepCopy(fields()[5].schema(), other.policyHolder);
        fieldSetFlags()[5] = true;
      }
      this.policyHolderBuilder = null;
      if (isValidValue(fields()[6], other.subscriber)) {
        this.subscriber = data().deepCopy(fields()[6].schema(), other.subscriber);
        fieldSetFlags()[6] = true;
      }
      this.subscriberBuilder = null;
      if (isValidValue(fields()[7], other.subscriberId)) {
        this.subscriberId = data().deepCopy(fields()[7].schema(), other.subscriberId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.beneficiary)) {
        this.beneficiary = data().deepCopy(fields()[8].schema(), other.beneficiary);
        fieldSetFlags()[8] = true;
      }
      this.beneficiaryBuilder = null;
      if (isValidValue(fields()[9], other.dependent)) {
        this.dependent = data().deepCopy(fields()[9].schema(), other.dependent);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.relationship)) {
        this.relationship = data().deepCopy(fields()[10].schema(), other.relationship);
        fieldSetFlags()[10] = true;
      }
      this.relationshipBuilder = null;
      if (isValidValue(fields()[11], other.period)) {
        this.period = data().deepCopy(fields()[11].schema(), other.period);
        fieldSetFlags()[11] = true;
      }
      this.periodBuilder = null;
      if (isValidValue(fields()[12], other.payor)) {
        this.payor = data().deepCopy(fields()[12].schema(), other.payor);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.order)) {
        this.order = data().deepCopy(fields()[13].schema(), other.order);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.network)) {
        this.network = data().deepCopy(fields()[14].schema(), other.network);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.subrogation)) {
        this.subrogation = data().deepCopy(fields()[15].schema(), other.subrogation);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
      validate(fields()[2], value);
      this.identifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setType(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(type));
        } else {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Coverage.Builder setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'policyHolder' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getPolicyHolder() {
      return policyHolder;
    }


    /**
      * Sets the value of the 'policyHolder' field.
      * @param value The value of 'policyHolder'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setPolicyHolder(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[5], value);
      this.policyHolderBuilder = null;
      this.policyHolder = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'policyHolder' field has been set.
      * @return True if the 'policyHolder' field has been set, false otherwise.
      */
    public boolean hasPolicyHolder() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'policyHolder' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getPolicyHolderBuilder() {
      if (policyHolderBuilder == null) {
        if (hasPolicyHolder()) {
          setPolicyHolderBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(policyHolder));
        } else {
          setPolicyHolderBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return policyHolderBuilder;
    }

    /**
     * Sets the Builder instance for the 'policyHolder' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Coverage.Builder setPolicyHolderBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearPolicyHolder();
      policyHolderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'policyHolder' field has an active Builder instance
     * @return True if the 'policyHolder' field has an active Builder instance
     */
    public boolean hasPolicyHolderBuilder() {
      return policyHolderBuilder != null;
    }

    /**
      * Clears the value of the 'policyHolder' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearPolicyHolder() {
      policyHolder = null;
      policyHolderBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriber' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubscriber() {
      return subscriber;
    }


    /**
      * Sets the value of the 'subscriber' field.
      * @param value The value of 'subscriber'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setSubscriber(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[6], value);
      this.subscriberBuilder = null;
      this.subscriber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriber' field has been set.
      * @return True if the 'subscriber' field has been set, false otherwise.
      */
    public boolean hasSubscriber() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'subscriber' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubscriberBuilder() {
      if (subscriberBuilder == null) {
        if (hasSubscriber()) {
          setSubscriberBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subscriber));
        } else {
          setSubscriberBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subscriberBuilder;
    }

    /**
     * Sets the Builder instance for the 'subscriber' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Coverage.Builder setSubscriberBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubscriber();
      subscriberBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subscriber' field has an active Builder instance
     * @return True if the 'subscriber' field has an active Builder instance
     */
    public boolean hasSubscriberBuilder() {
      return subscriberBuilder != null;
    }

    /**
      * Clears the value of the 'subscriber' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearSubscriber() {
      subscriber = null;
      subscriberBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscriberId' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubscriberId() {
      return subscriberId;
    }


    /**
      * Sets the value of the 'subscriberId' field.
      * @param value The value of 'subscriberId'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setSubscriberId(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.subscriberId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'subscriberId' field has been set.
      * @return True if the 'subscriberId' field has been set, false otherwise.
      */
    public boolean hasSubscriberId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'subscriberId' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearSubscriberId() {
      subscriberId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'beneficiary' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getBeneficiary() {
      return beneficiary;
    }


    /**
      * Sets the value of the 'beneficiary' field.
      * @param value The value of 'beneficiary'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setBeneficiary(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[8], value);
      this.beneficiaryBuilder = null;
      this.beneficiary = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'beneficiary' field has been set.
      * @return True if the 'beneficiary' field has been set, false otherwise.
      */
    public boolean hasBeneficiary() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'beneficiary' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getBeneficiaryBuilder() {
      if (beneficiaryBuilder == null) {
        if (hasBeneficiary()) {
          setBeneficiaryBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(beneficiary));
        } else {
          setBeneficiaryBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return beneficiaryBuilder;
    }

    /**
     * Sets the Builder instance for the 'beneficiary' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Coverage.Builder setBeneficiaryBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearBeneficiary();
      beneficiaryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'beneficiary' field has an active Builder instance
     * @return True if the 'beneficiary' field has an active Builder instance
     */
    public boolean hasBeneficiaryBuilder() {
      return beneficiaryBuilder != null;
    }

    /**
      * Clears the value of the 'beneficiary' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearBeneficiary() {
      beneficiary = null;
      beneficiaryBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'dependent' field.
      * @return The value.
      */
    public java.lang.CharSequence getDependent() {
      return dependent;
    }


    /**
      * Sets the value of the 'dependent' field.
      * @param value The value of 'dependent'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setDependent(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.dependent = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'dependent' field has been set.
      * @return True if the 'dependent' field has been set, false otherwise.
      */
    public boolean hasDependent() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'dependent' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearDependent() {
      dependent = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'relationship' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getRelationship() {
      return relationship;
    }


    /**
      * Sets the value of the 'relationship' field.
      * @param value The value of 'relationship'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setRelationship(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[10], value);
      this.relationshipBuilder = null;
      this.relationship = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'relationship' field has been set.
      * @return True if the 'relationship' field has been set, false otherwise.
      */
    public boolean hasRelationship() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'relationship' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getRelationshipBuilder() {
      if (relationshipBuilder == null) {
        if (hasRelationship()) {
          setRelationshipBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(relationship));
        } else {
          setRelationshipBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return relationshipBuilder;
    }

    /**
     * Sets the Builder instance for the 'relationship' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Coverage.Builder setRelationshipBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearRelationship();
      relationshipBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'relationship' field has an active Builder instance
     * @return True if the 'relationship' field has an active Builder instance
     */
    public boolean hasRelationshipBuilder() {
      return relationshipBuilder != null;
    }

    /**
      * Clears the value of the 'relationship' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearRelationship() {
      relationship = null;
      relationshipBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'period' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Period getPeriod() {
      return period;
    }


    /**
      * Sets the value of the 'period' field.
      * @param value The value of 'period'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setPeriod(io.carrera.fhir.avro.models.Period value) {
      validate(fields()[11], value);
      this.periodBuilder = null;
      this.period = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'period' field has been set.
      * @return True if the 'period' field has been set, false otherwise.
      */
    public boolean hasPeriod() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'period' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Period.Builder getPeriodBuilder() {
      if (periodBuilder == null) {
        if (hasPeriod()) {
          setPeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder(period));
        } else {
          setPeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder());
        }
      }
      return periodBuilder;
    }

    /**
     * Sets the Builder instance for the 'period' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Coverage.Builder setPeriodBuilder(io.carrera.fhir.avro.models.Period.Builder value) {
      clearPeriod();
      periodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'period' field has an active Builder instance
     * @return True if the 'period' field has an active Builder instance
     */
    public boolean hasPeriodBuilder() {
      return periodBuilder != null;
    }

    /**
      * Clears the value of the 'period' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearPeriod() {
      period = null;
      periodBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'payor' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getPayor() {
      return payor;
    }


    /**
      * Sets the value of the 'payor' field.
      * @param value The value of 'payor'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setPayor(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[12], value);
      this.payor = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'payor' field has been set.
      * @return True if the 'payor' field has been set, false otherwise.
      */
    public boolean hasPayor() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'payor' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearPayor() {
      payor = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public java.lang.Integer getOrder() {
      return order;
    }


    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setOrder(java.lang.Integer value) {
      validate(fields()[13], value);
      this.order = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearOrder() {
      order = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'network' field.
      * @return The value.
      */
    public java.lang.CharSequence getNetwork() {
      return network;
    }


    /**
      * Sets the value of the 'network' field.
      * @param value The value of 'network'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setNetwork(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.network = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'network' field has been set.
      * @return True if the 'network' field has been set, false otherwise.
      */
    public boolean hasNetwork() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'network' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearNetwork() {
      network = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'subrogation' field.
      * @return The value.
      */
    public java.lang.Boolean getSubrogation() {
      return subrogation;
    }


    /**
      * Sets the value of the 'subrogation' field.
      * @param value The value of 'subrogation'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder setSubrogation(java.lang.Boolean value) {
      validate(fields()[15], value);
      this.subrogation = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'subrogation' field has been set.
      * @return True if the 'subrogation' field has been set, false otherwise.
      */
    public boolean hasSubrogation() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'subrogation' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Coverage.Builder clearSubrogation() {
      subrogation = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Coverage build() {
      try {
        Coverage record = new Coverage();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.identifier = fieldSetFlags()[2] ? this.identifier : (java.util.List<io.carrera.fhir.avro.models.identifier_record>) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[4] ? this.type : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        if (policyHolderBuilder != null) {
          try {
            record.policyHolder = this.policyHolderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("policyHolder"));
            throw e;
          }
        } else {
          record.policyHolder = fieldSetFlags()[5] ? this.policyHolder : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[5]);
        }
        if (subscriberBuilder != null) {
          try {
            record.subscriber = this.subscriberBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subscriber"));
            throw e;
          }
        } else {
          record.subscriber = fieldSetFlags()[6] ? this.subscriber : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[6]);
        }
        record.subscriberId = fieldSetFlags()[7] ? this.subscriberId : (java.lang.CharSequence) defaultValue(fields()[7]);
        if (beneficiaryBuilder != null) {
          try {
            record.beneficiary = this.beneficiaryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("beneficiary"));
            throw e;
          }
        } else {
          record.beneficiary = fieldSetFlags()[8] ? this.beneficiary : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[8]);
        }
        record.dependent = fieldSetFlags()[9] ? this.dependent : (java.lang.CharSequence) defaultValue(fields()[9]);
        if (relationshipBuilder != null) {
          try {
            record.relationship = this.relationshipBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("relationship"));
            throw e;
          }
        } else {
          record.relationship = fieldSetFlags()[10] ? this.relationship : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[10]);
        }
        if (periodBuilder != null) {
          try {
            record.period = this.periodBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("period"));
            throw e;
          }
        } else {
          record.period = fieldSetFlags()[11] ? this.period : (io.carrera.fhir.avro.models.Period) defaultValue(fields()[11]);
        }
        record.payor = fieldSetFlags()[12] ? this.payor : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[12]);
        record.order = fieldSetFlags()[13] ? this.order : (java.lang.Integer) defaultValue(fields()[13]);
        record.network = fieldSetFlags()[14] ? this.network : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.subrogation = fieldSetFlags()[15] ? this.subrogation : (java.lang.Boolean) defaultValue(fields()[15]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Coverage>
    WRITER$ = (org.apache.avro.io.DatumWriter<Coverage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Coverage>
    READER$ = (org.apache.avro.io.DatumReader<Coverage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










