/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Observation_ReferenceRange extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5072109122093015979L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Observation_ReferenceRange\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"low\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Decimal\",\"fields\":[{\"name\":\"unscaled_value\",\"type\":\"bytes\",\"logicalType\":\"decimal\"},{\"name\":\"precision\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}]}],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comparator\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"high\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"appliesTo\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"age\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Range\",\"fields\":[{\"name\":\"low\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"high\",\"type\":[\"null\",\"Quantity\"],\"default\":null}]}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Observation_ReferenceRange> ENCODER =
      new BinaryMessageEncoder<Observation_ReferenceRange>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Observation_ReferenceRange> DECODER =
      new BinaryMessageDecoder<Observation_ReferenceRange>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Observation_ReferenceRange> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Observation_ReferenceRange> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Observation_ReferenceRange> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Observation_ReferenceRange>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Observation_ReferenceRange to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Observation_ReferenceRange from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Observation_ReferenceRange instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Observation_ReferenceRange fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private io.carrera.fhir.avro.models.Quantity low;
   private io.carrera.fhir.avro.models.Quantity high;
   private io.carrera.fhir.avro.models.CodeableConcept type;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> appliesTo;
   private io.carrera.fhir.avro.models.Range age;
   private java.lang.CharSequence text;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Observation_ReferenceRange() {}

  /**
   * All-args constructor.
   * @param low The new value for low
   * @param high The new value for high
   * @param type The new value for type
   * @param appliesTo The new value for appliesTo
   * @param age The new value for age
   * @param text The new value for text
   */
  public Observation_ReferenceRange(io.carrera.fhir.avro.models.Quantity low, io.carrera.fhir.avro.models.Quantity high, io.carrera.fhir.avro.models.CodeableConcept type, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> appliesTo, io.carrera.fhir.avro.models.Range age, java.lang.CharSequence text) {
    this.low = low;
    this.high = high;
    this.type = type;
    this.appliesTo = appliesTo;
    this.age = age;
    this.text = text;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return low;
    case 1: return high;
    case 2: return type;
    case 3: return appliesTo;
    case 4: return age;
    case 5: return text;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: low = (io.carrera.fhir.avro.models.Quantity)value$; break;
    case 1: high = (io.carrera.fhir.avro.models.Quantity)value$; break;
    case 2: type = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 3: appliesTo = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 4: age = (io.carrera.fhir.avro.models.Range)value$; break;
    case 5: text = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'low' field.
   * @return The value of the 'low' field.
   */
  public io.carrera.fhir.avro.models.Quantity getLow() {
    return low;
  }


  /**
   * Sets the value of the 'low' field.
   * @param value the value to set.
   */
  public void setLow(io.carrera.fhir.avro.models.Quantity value) {
    this.low = value;
  }

  /**
   * Gets the value of the 'high' field.
   * @return The value of the 'high' field.
   */
  public io.carrera.fhir.avro.models.Quantity getHigh() {
    return high;
  }


  /**
   * Sets the value of the 'high' field.
   * @param value the value to set.
   */
  public void setHigh(io.carrera.fhir.avro.models.Quantity value) {
    this.high = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'appliesTo' field.
   * @return The value of the 'appliesTo' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getAppliesTo() {
    return appliesTo;
  }


  /**
   * Sets the value of the 'appliesTo' field.
   * @param value the value to set.
   */
  public void setAppliesTo(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.appliesTo = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public io.carrera.fhir.avro.models.Range getAge() {
    return age;
  }


  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(io.carrera.fhir.avro.models.Range value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'text' field.
   * @return The value of the 'text' field.
   */
  public java.lang.CharSequence getText() {
    return text;
  }


  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public void setText(java.lang.CharSequence value) {
    this.text = value;
  }

  /**
   * Creates a new Observation_ReferenceRange RecordBuilder.
   * @return A new Observation_ReferenceRange RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder();
  }

  /**
   * Creates a new Observation_ReferenceRange RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Observation_ReferenceRange RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder newBuilder(io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder(other);
    }
  }

  /**
   * Creates a new Observation_ReferenceRange RecordBuilder by copying an existing Observation_ReferenceRange instance.
   * @param other The existing instance to copy.
   * @return A new Observation_ReferenceRange RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder newBuilder(io.carrera.fhir.avro.models.Observation_ReferenceRange other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder(other);
    }
  }

  /**
   * RecordBuilder for Observation_ReferenceRange instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Observation_ReferenceRange>
    implements org.apache.avro.data.RecordBuilder<Observation_ReferenceRange> {

    private io.carrera.fhir.avro.models.Quantity low;
    private io.carrera.fhir.avro.models.Quantity.Builder lowBuilder;
    private io.carrera.fhir.avro.models.Quantity high;
    private io.carrera.fhir.avro.models.Quantity.Builder highBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept type;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder typeBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> appliesTo;
    private io.carrera.fhir.avro.models.Range age;
    private io.carrera.fhir.avro.models.Range.Builder ageBuilder;
    private java.lang.CharSequence text;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.low)) {
        this.low = data().deepCopy(fields()[0].schema(), other.low);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasLowBuilder()) {
        this.lowBuilder = io.carrera.fhir.avro.models.Quantity.newBuilder(other.getLowBuilder());
      }
      if (isValidValue(fields()[1], other.high)) {
        this.high = data().deepCopy(fields()[1].schema(), other.high);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasHighBuilder()) {
        this.highBuilder = io.carrera.fhir.avro.models.Quantity.newBuilder(other.getHighBuilder());
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[3], other.appliesTo)) {
        this.appliesTo = data().deepCopy(fields()[3].schema(), other.appliesTo);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.age)) {
        this.age = data().deepCopy(fields()[4].schema(), other.age);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasAgeBuilder()) {
        this.ageBuilder = io.carrera.fhir.avro.models.Range.newBuilder(other.getAgeBuilder());
      }
      if (isValidValue(fields()[5], other.text)) {
        this.text = data().deepCopy(fields()[5].schema(), other.text);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing Observation_ReferenceRange instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Observation_ReferenceRange other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.low)) {
        this.low = data().deepCopy(fields()[0].schema(), other.low);
        fieldSetFlags()[0] = true;
      }
      this.lowBuilder = null;
      if (isValidValue(fields()[1], other.high)) {
        this.high = data().deepCopy(fields()[1].schema(), other.high);
        fieldSetFlags()[1] = true;
      }
      this.highBuilder = null;
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[3], other.appliesTo)) {
        this.appliesTo = data().deepCopy(fields()[3].schema(), other.appliesTo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.age)) {
        this.age = data().deepCopy(fields()[4].schema(), other.age);
        fieldSetFlags()[4] = true;
      }
      this.ageBuilder = null;
      if (isValidValue(fields()[5], other.text)) {
        this.text = data().deepCopy(fields()[5].schema(), other.text);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'low' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Quantity getLow() {
      return low;
    }


    /**
      * Sets the value of the 'low' field.
      * @param value The value of 'low'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setLow(io.carrera.fhir.avro.models.Quantity value) {
      validate(fields()[0], value);
      this.lowBuilder = null;
      this.low = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'low' field has been set.
      * @return True if the 'low' field has been set, false otherwise.
      */
    public boolean hasLow() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'low' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Quantity.Builder getLowBuilder() {
      if (lowBuilder == null) {
        if (hasLow()) {
          setLowBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder(low));
        } else {
          setLowBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder());
        }
      }
      return lowBuilder;
    }

    /**
     * Sets the Builder instance for the 'low' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setLowBuilder(io.carrera.fhir.avro.models.Quantity.Builder value) {
      clearLow();
      lowBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'low' field has an active Builder instance
     * @return True if the 'low' field has an active Builder instance
     */
    public boolean hasLowBuilder() {
      return lowBuilder != null;
    }

    /**
      * Clears the value of the 'low' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder clearLow() {
      low = null;
      lowBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'high' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Quantity getHigh() {
      return high;
    }


    /**
      * Sets the value of the 'high' field.
      * @param value The value of 'high'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setHigh(io.carrera.fhir.avro.models.Quantity value) {
      validate(fields()[1], value);
      this.highBuilder = null;
      this.high = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'high' field has been set.
      * @return True if the 'high' field has been set, false otherwise.
      */
    public boolean hasHigh() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'high' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Quantity.Builder getHighBuilder() {
      if (highBuilder == null) {
        if (hasHigh()) {
          setHighBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder(high));
        } else {
          setHighBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder());
        }
      }
      return highBuilder;
    }

    /**
     * Sets the Builder instance for the 'high' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setHighBuilder(io.carrera.fhir.avro.models.Quantity.Builder value) {
      clearHigh();
      highBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'high' field has an active Builder instance
     * @return True if the 'high' field has an active Builder instance
     */
    public boolean hasHighBuilder() {
      return highBuilder != null;
    }

    /**
      * Clears the value of the 'high' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder clearHigh() {
      high = null;
      highBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setType(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[2], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(type));
        } else {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'appliesTo' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getAppliesTo() {
      return appliesTo;
    }


    /**
      * Sets the value of the 'appliesTo' field.
      * @param value The value of 'appliesTo'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setAppliesTo(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[3], value);
      this.appliesTo = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'appliesTo' field has been set.
      * @return True if the 'appliesTo' field has been set, false otherwise.
      */
    public boolean hasAppliesTo() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'appliesTo' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder clearAppliesTo() {
      appliesTo = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Range getAge() {
      return age;
    }


    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setAge(io.carrera.fhir.avro.models.Range value) {
      validate(fields()[4], value);
      this.ageBuilder = null;
      this.age = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'age' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Range.Builder getAgeBuilder() {
      if (ageBuilder == null) {
        if (hasAge()) {
          setAgeBuilder(io.carrera.fhir.avro.models.Range.newBuilder(age));
        } else {
          setAgeBuilder(io.carrera.fhir.avro.models.Range.newBuilder());
        }
      }
      return ageBuilder;
    }

    /**
     * Sets the Builder instance for the 'age' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setAgeBuilder(io.carrera.fhir.avro.models.Range.Builder value) {
      clearAge();
      ageBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'age' field has an active Builder instance
     * @return True if the 'age' field has an active Builder instance
     */
    public boolean hasAgeBuilder() {
      return ageBuilder != null;
    }

    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder clearAge() {
      age = null;
      ageBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * @return The value.
      */
    public java.lang.CharSequence getText() {
      return text;
    }


    /**
      * Sets the value of the 'text' field.
      * @param value The value of 'text'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder setText(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.text = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'text' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_ReferenceRange.Builder clearText() {
      text = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Observation_ReferenceRange build() {
      try {
        Observation_ReferenceRange record = new Observation_ReferenceRange();
        if (lowBuilder != null) {
          try {
            record.low = this.lowBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("low"));
            throw e;
          }
        } else {
          record.low = fieldSetFlags()[0] ? this.low : (io.carrera.fhir.avro.models.Quantity) defaultValue(fields()[0]);
        }
        if (highBuilder != null) {
          try {
            record.high = this.highBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("high"));
            throw e;
          }
        } else {
          record.high = fieldSetFlags()[1] ? this.high : (io.carrera.fhir.avro.models.Quantity) defaultValue(fields()[1]);
        }
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[2] ? this.type : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[2]);
        }
        record.appliesTo = fieldSetFlags()[3] ? this.appliesTo : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[3]);
        if (ageBuilder != null) {
          try {
            record.age = this.ageBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("age"));
            throw e;
          }
        } else {
          record.age = fieldSetFlags()[4] ? this.age : (io.carrera.fhir.avro.models.Range) defaultValue(fields()[4]);
        }
        record.text = fieldSetFlags()[5] ? this.text : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Observation_ReferenceRange>
    WRITER$ = (org.apache.avro.io.DatumWriter<Observation_ReferenceRange>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Observation_ReferenceRange>
    READER$ = (org.apache.avro.io.DatumReader<Observation_ReferenceRange>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.low == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.low.customEncode(out);
    }

    if (this.high == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.high.customEncode(out);
    }

    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.type.customEncode(out);
    }

    if (this.appliesTo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.appliesTo.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (io.carrera.fhir.avro.models.CodeableConcept e0: this.appliesTo) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.age == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.age.customEncode(out);
    }

    if (this.text == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.text);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.low = null;
      } else {
        if (this.low == null) {
          this.low = new io.carrera.fhir.avro.models.Quantity();
        }
        this.low.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.high = null;
      } else {
        if (this.high == null) {
          this.high = new io.carrera.fhir.avro.models.Quantity();
        }
        this.high.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        if (this.type == null) {
          this.type = new io.carrera.fhir.avro.models.CodeableConcept();
        }
        this.type.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.appliesTo = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<io.carrera.fhir.avro.models.CodeableConcept> a0 = this.appliesTo;
        if (a0 == null) {
          a0 = new SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>((int)size0, SCHEMA$.getField("appliesTo").schema().getTypes().get(1));
          this.appliesTo = a0;
        } else a0.clear();
        SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            io.carrera.fhir.avro.models.CodeableConcept e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.age = null;
      } else {
        if (this.age == null) {
          this.age = new io.carrera.fhir.avro.models.Range();
        }
        this.age.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.text = null;
      } else {
        this.text = in.readString(this.text instanceof Utf8 ? (Utf8)this.text : null);
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.low = null;
          } else {
            if (this.low == null) {
              this.low = new io.carrera.fhir.avro.models.Quantity();
            }
            this.low.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.high = null;
          } else {
            if (this.high == null) {
              this.high = new io.carrera.fhir.avro.models.Quantity();
            }
            this.high.customDecode(in);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            if (this.type == null) {
              this.type = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            this.type.customDecode(in);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.appliesTo = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<io.carrera.fhir.avro.models.CodeableConcept> a0 = this.appliesTo;
            if (a0 == null) {
              a0 = new SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>((int)size0, SCHEMA$.getField("appliesTo").schema().getTypes().get(1));
              this.appliesTo = a0;
            } else a0.clear();
            SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                io.carrera.fhir.avro.models.CodeableConcept e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new io.carrera.fhir.avro.models.CodeableConcept();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.age = null;
          } else {
            if (this.age == null) {
              this.age = new io.carrera.fhir.avro.models.Range();
            }
            this.age.customDecode(in);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.text = null;
          } else {
            this.text = in.readString(this.text instanceof Utf8 ? (Utf8)this.text : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










