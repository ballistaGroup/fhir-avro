/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Observation_Component extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8156417566596809448L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Observation_Component\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Decimal\",\"fields\":[{\"name\":\"unscaled_value\",\"type\":\"bytes\",\"logicalType\":\"decimal\"},{\"name\":\"precision\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}]}],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comparator\",\"type\":[\"null\",\"string\"],\"default\":null}]},\"CodeableConcept\",\"string\",\"boolean\",\"int\",{\"type\":\"record\",\"name\":\"Range\",\"fields\":[{\"name\":\"low\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"high\",\"type\":[\"null\",\"Quantity\"],\"default\":null}]},{\"type\":\"record\",\"name\":\"Ratio\",\"fields\":[{\"name\":\"numerator\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"denominator\",\"type\":[\"null\",\"Quantity\"],\"default\":null}]},{\"type\":\"record\",\"name\":\"Time\",\"fields\":[{\"name\":\"hour\",\"type\":\"int\"},{\"name\":\"minute\",\"type\":\"int\"},{\"name\":\"second\",\"type\":\"int\"},{\"name\":\"millisecond\",\"type\":[\"null\",\"int\"],\"default\":null}]},{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"record\",\"name\":\"XsDateTime\",\"fields\":[{\"name\":\"millis\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"XsDate\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"type\":\"record\",\"name\":\"XsYearMonth\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"}]},{\"type\":\"record\",\"name\":\"XsYear\",\"fields\":[{\"name\":\"value\",\"type\":\"int\"}]}]}]},{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",\"DateTime\"],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",\"DateTime\"],\"default\":null}]}],\"default\":null},{\"name\":\"dateAbsentReason\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"interpretation\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Observation_Component> ENCODER =
      new BinaryMessageEncoder<Observation_Component>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Observation_Component> DECODER =
      new BinaryMessageDecoder<Observation_Component>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Observation_Component> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Observation_Component> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Observation_Component> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Observation_Component>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Observation_Component to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Observation_Component from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Observation_Component instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Observation_Component fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private io.carrera.fhir.avro.models.CodeableConcept code;
   private java.lang.Object value;
   private io.carrera.fhir.avro.models.CodeableConcept dateAbsentReason;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> interpretation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Observation_Component() {}

  /**
   * All-args constructor.
   * @param code The new value for code
   * @param value The new value for value
   * @param dateAbsentReason The new value for dateAbsentReason
   * @param interpretation The new value for interpretation
   */
  public Observation_Component(io.carrera.fhir.avro.models.CodeableConcept code, java.lang.Object value, io.carrera.fhir.avro.models.CodeableConcept dateAbsentReason, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> interpretation) {
    this.code = code;
    this.value = value;
    this.dateAbsentReason = dateAbsentReason;
    this.interpretation = interpretation;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return value;
    case 2: return dateAbsentReason;
    case 3: return interpretation;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 1: value = value$; break;
    case 2: dateAbsentReason = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 3: interpretation = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.Object getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.Object value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'dateAbsentReason' field.
   * @return The value of the 'dateAbsentReason' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getDateAbsentReason() {
    return dateAbsentReason;
  }


  /**
   * Sets the value of the 'dateAbsentReason' field.
   * @param value the value to set.
   */
  public void setDateAbsentReason(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.dateAbsentReason = value;
  }

  /**
   * Gets the value of the 'interpretation' field.
   * @return The value of the 'interpretation' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getInterpretation() {
    return interpretation;
  }


  /**
   * Sets the value of the 'interpretation' field.
   * @param value the value to set.
   */
  public void setInterpretation(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.interpretation = value;
  }

  /**
   * Creates a new Observation_Component RecordBuilder.
   * @return A new Observation_Component RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Observation_Component.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Observation_Component.Builder();
  }

  /**
   * Creates a new Observation_Component RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Observation_Component RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Observation_Component.Builder newBuilder(io.carrera.fhir.avro.models.Observation_Component.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Observation_Component.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Observation_Component.Builder(other);
    }
  }

  /**
   * Creates a new Observation_Component RecordBuilder by copying an existing Observation_Component instance.
   * @param other The existing instance to copy.
   * @return A new Observation_Component RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Observation_Component.Builder newBuilder(io.carrera.fhir.avro.models.Observation_Component other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Observation_Component.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Observation_Component.Builder(other);
    }
  }

  /**
   * RecordBuilder for Observation_Component instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Observation_Component>
    implements org.apache.avro.data.RecordBuilder<Observation_Component> {

    private io.carrera.fhir.avro.models.CodeableConcept code;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder codeBuilder;
    private java.lang.Object value;
    private io.carrera.fhir.avro.models.CodeableConcept dateAbsentReason;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder dateAbsentReasonBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> interpretation;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Observation_Component.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCodeBuilder()) {
        this.codeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCodeBuilder());
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.dateAbsentReason)) {
        this.dateAbsentReason = data().deepCopy(fields()[2].schema(), other.dateAbsentReason);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasDateAbsentReasonBuilder()) {
        this.dateAbsentReasonBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getDateAbsentReasonBuilder());
      }
      if (isValidValue(fields()[3], other.interpretation)) {
        this.interpretation = data().deepCopy(fields()[3].schema(), other.interpretation);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing Observation_Component instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Observation_Component other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      this.codeBuilder = null;
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dateAbsentReason)) {
        this.dateAbsentReason = data().deepCopy(fields()[2].schema(), other.dateAbsentReason);
        fieldSetFlags()[2] = true;
      }
      this.dateAbsentReasonBuilder = null;
      if (isValidValue(fields()[3], other.interpretation)) {
        this.interpretation = data().deepCopy(fields()[3].schema(), other.interpretation);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[0], value);
      this.codeBuilder = null;
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'code' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCodeBuilder() {
      if (codeBuilder == null) {
        if (hasCode()) {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(code));
        } else {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return codeBuilder;
    }

    /**
     * Sets the Builder instance for the 'code' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Observation_Component.Builder setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCode();
      codeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'code' field has an active Builder instance
     * @return True if the 'code' field has an active Builder instance
     */
    public boolean hasCodeBuilder() {
      return codeBuilder != null;
    }

    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder clearCode() {
      code = null;
      codeBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.Object getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder setValue(java.lang.Object value) {
      validate(fields()[1], value);
      this.value = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder clearValue() {
      value = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateAbsentReason' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getDateAbsentReason() {
      return dateAbsentReason;
    }


    /**
      * Sets the value of the 'dateAbsentReason' field.
      * @param value The value of 'dateAbsentReason'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder setDateAbsentReason(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[2], value);
      this.dateAbsentReasonBuilder = null;
      this.dateAbsentReason = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dateAbsentReason' field has been set.
      * @return True if the 'dateAbsentReason' field has been set, false otherwise.
      */
    public boolean hasDateAbsentReason() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'dateAbsentReason' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getDateAbsentReasonBuilder() {
      if (dateAbsentReasonBuilder == null) {
        if (hasDateAbsentReason()) {
          setDateAbsentReasonBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(dateAbsentReason));
        } else {
          setDateAbsentReasonBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return dateAbsentReasonBuilder;
    }

    /**
     * Sets the Builder instance for the 'dateAbsentReason' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Observation_Component.Builder setDateAbsentReasonBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearDateAbsentReason();
      dateAbsentReasonBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'dateAbsentReason' field has an active Builder instance
     * @return True if the 'dateAbsentReason' field has an active Builder instance
     */
    public boolean hasDateAbsentReasonBuilder() {
      return dateAbsentReasonBuilder != null;
    }

    /**
      * Clears the value of the 'dateAbsentReason' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder clearDateAbsentReason() {
      dateAbsentReason = null;
      dateAbsentReasonBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'interpretation' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getInterpretation() {
      return interpretation;
    }


    /**
      * Sets the value of the 'interpretation' field.
      * @param value The value of 'interpretation'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder setInterpretation(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[3], value);
      this.interpretation = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'interpretation' field has been set.
      * @return True if the 'interpretation' field has been set, false otherwise.
      */
    public boolean hasInterpretation() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'interpretation' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Observation_Component.Builder clearInterpretation() {
      interpretation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Observation_Component build() {
      try {
        Observation_Component record = new Observation_Component();
        if (codeBuilder != null) {
          try {
            record.code = this.codeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("code"));
            throw e;
          }
        } else {
          record.code = fieldSetFlags()[0] ? this.code : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[0]);
        }
        record.value = fieldSetFlags()[1] ? this.value :  defaultValue(fields()[1]);
        if (dateAbsentReasonBuilder != null) {
          try {
            record.dateAbsentReason = this.dateAbsentReasonBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("dateAbsentReason"));
            throw e;
          }
        } else {
          record.dateAbsentReason = fieldSetFlags()[2] ? this.dateAbsentReason : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[2]);
        }
        record.interpretation = fieldSetFlags()[3] ? this.interpretation : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Observation_Component>
    WRITER$ = (org.apache.avro.io.DatumWriter<Observation_Component>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Observation_Component>
    READER$ = (org.apache.avro.io.DatumReader<Observation_Component>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










