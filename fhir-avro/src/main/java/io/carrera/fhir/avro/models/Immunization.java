/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Immunization extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1341496044831380420L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Immunization\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"identifier_record\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"vaccineCode\",\"type\":{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"code\",\"type\":\"CodeableConcept\"},{\"name\":\"patient\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"occurrence\",\"type\":[{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"record\",\"name\":\"XsDateTime\",\"fields\":[{\"name\":\"millis\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"XsDate\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"type\":\"record\",\"name\":\"XsYearMonth\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"}]},{\"type\":\"record\",\"name\":\"XsYear\",\"fields\":[{\"name\":\"value\",\"type\":\"int\"}]}]}]},\"string\"]},{\"name\":\"doseNumberPositiveInt\",\"type\":\"int\"},{\"name\":\"doseNumberString\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Immunization> ENCODER =
      new BinaryMessageEncoder<Immunization>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Immunization> DECODER =
      new BinaryMessageDecoder<Immunization>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Immunization> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Immunization> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Immunization> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Immunization>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Immunization to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Immunization from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Immunization instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Immunization fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
   private java.lang.CharSequence status;
   private io.carrera.fhir.avro.models.CodeableConcept vaccineCode;
   private io.carrera.fhir.avro.models.CodeableConcept code;
   private io.carrera.fhir.avro.models.Reference patient;
   private java.lang.Object occurrence;
   private int doseNumberPositiveInt;
   private java.lang.CharSequence doseNumberString;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Immunization() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param identifier The new value for identifier
   * @param status The new value for status
   * @param vaccineCode The new value for vaccineCode
   * @param code The new value for code
   * @param patient The new value for patient
   * @param occurrence The new value for occurrence
   * @param doseNumberPositiveInt The new value for doseNumberPositiveInt
   * @param doseNumberString The new value for doseNumberString
   */
  public Immunization(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier, java.lang.CharSequence status, io.carrera.fhir.avro.models.CodeableConcept vaccineCode, io.carrera.fhir.avro.models.CodeableConcept code, io.carrera.fhir.avro.models.Reference patient, java.lang.Object occurrence, java.lang.Integer doseNumberPositiveInt, java.lang.CharSequence doseNumberString) {
    this.resourceType = resourceType;
    this.id = id;
    this.identifier = identifier;
    this.status = status;
    this.vaccineCode = vaccineCode;
    this.code = code;
    this.patient = patient;
    this.occurrence = occurrence;
    this.doseNumberPositiveInt = doseNumberPositiveInt;
    this.doseNumberString = doseNumberString;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return identifier;
    case 3: return status;
    case 4: return vaccineCode;
    case 5: return code;
    case 6: return patient;
    case 7: return occurrence;
    case 8: return doseNumberPositiveInt;
    case 9: return doseNumberString;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: identifier = (java.util.List<io.carrera.fhir.avro.models.identifier_record>)value$; break;
    case 3: status = (java.lang.CharSequence)value$; break;
    case 4: vaccineCode = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: code = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 6: patient = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 7: occurrence = value$; break;
    case 8: doseNumberPositiveInt = (java.lang.Integer)value$; break;
    case 9: doseNumberString = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'vaccineCode' field.
   * @return The value of the 'vaccineCode' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getVaccineCode() {
    return vaccineCode;
  }


  /**
   * Sets the value of the 'vaccineCode' field.
   * @param value the value to set.
   */
  public void setVaccineCode(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.vaccineCode = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'patient' field.
   * @return The value of the 'patient' field.
   */
  public io.carrera.fhir.avro.models.Reference getPatient() {
    return patient;
  }


  /**
   * Sets the value of the 'patient' field.
   * @param value the value to set.
   */
  public void setPatient(io.carrera.fhir.avro.models.Reference value) {
    this.patient = value;
  }

  /**
   * Gets the value of the 'occurrence' field.
   * @return The value of the 'occurrence' field.
   */
  public java.lang.Object getOccurrence() {
    return occurrence;
  }


  /**
   * Sets the value of the 'occurrence' field.
   * @param value the value to set.
   */
  public void setOccurrence(java.lang.Object value) {
    this.occurrence = value;
  }

  /**
   * Gets the value of the 'doseNumberPositiveInt' field.
   * @return The value of the 'doseNumberPositiveInt' field.
   */
  public int getDoseNumberPositiveInt() {
    return doseNumberPositiveInt;
  }


  /**
   * Sets the value of the 'doseNumberPositiveInt' field.
   * @param value the value to set.
   */
  public void setDoseNumberPositiveInt(int value) {
    this.doseNumberPositiveInt = value;
  }

  /**
   * Gets the value of the 'doseNumberString' field.
   * @return The value of the 'doseNumberString' field.
   */
  public java.lang.CharSequence getDoseNumberString() {
    return doseNumberString;
  }


  /**
   * Sets the value of the 'doseNumberString' field.
   * @param value the value to set.
   */
  public void setDoseNumberString(java.lang.CharSequence value) {
    this.doseNumberString = value;
  }

  /**
   * Creates a new Immunization RecordBuilder.
   * @return A new Immunization RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Immunization.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Immunization.Builder();
  }

  /**
   * Creates a new Immunization RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Immunization RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Immunization.Builder newBuilder(io.carrera.fhir.avro.models.Immunization.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Immunization.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Immunization.Builder(other);
    }
  }

  /**
   * Creates a new Immunization RecordBuilder by copying an existing Immunization instance.
   * @param other The existing instance to copy.
   * @return A new Immunization RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Immunization.Builder newBuilder(io.carrera.fhir.avro.models.Immunization other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Immunization.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Immunization.Builder(other);
    }
  }

  /**
   * RecordBuilder for Immunization instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Immunization>
    implements org.apache.avro.data.RecordBuilder<Immunization> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
    private java.lang.CharSequence status;
    private io.carrera.fhir.avro.models.CodeableConcept vaccineCode;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder vaccineCodeBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept code;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder codeBuilder;
    private io.carrera.fhir.avro.models.Reference patient;
    private io.carrera.fhir.avro.models.Reference.Builder patientBuilder;
    private java.lang.Object occurrence;
    private int doseNumberPositiveInt;
    private java.lang.CharSequence doseNumberString;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Immunization.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.vaccineCode)) {
        this.vaccineCode = data().deepCopy(fields()[4].schema(), other.vaccineCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasVaccineCodeBuilder()) {
        this.vaccineCodeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getVaccineCodeBuilder());
      }
      if (isValidValue(fields()[5], other.code)) {
        this.code = data().deepCopy(fields()[5].schema(), other.code);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasCodeBuilder()) {
        this.codeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCodeBuilder());
      }
      if (isValidValue(fields()[6], other.patient)) {
        this.patient = data().deepCopy(fields()[6].schema(), other.patient);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasPatientBuilder()) {
        this.patientBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getPatientBuilder());
      }
      if (isValidValue(fields()[7], other.occurrence)) {
        this.occurrence = data().deepCopy(fields()[7].schema(), other.occurrence);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.doseNumberPositiveInt)) {
        this.doseNumberPositiveInt = data().deepCopy(fields()[8].schema(), other.doseNumberPositiveInt);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.doseNumberString)) {
        this.doseNumberString = data().deepCopy(fields()[9].schema(), other.doseNumberString);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing Immunization instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Immunization other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vaccineCode)) {
        this.vaccineCode = data().deepCopy(fields()[4].schema(), other.vaccineCode);
        fieldSetFlags()[4] = true;
      }
      this.vaccineCodeBuilder = null;
      if (isValidValue(fields()[5], other.code)) {
        this.code = data().deepCopy(fields()[5].schema(), other.code);
        fieldSetFlags()[5] = true;
      }
      this.codeBuilder = null;
      if (isValidValue(fields()[6], other.patient)) {
        this.patient = data().deepCopy(fields()[6].schema(), other.patient);
        fieldSetFlags()[6] = true;
      }
      this.patientBuilder = null;
      if (isValidValue(fields()[7], other.occurrence)) {
        this.occurrence = data().deepCopy(fields()[7].schema(), other.occurrence);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.doseNumberPositiveInt)) {
        this.doseNumberPositiveInt = data().deepCopy(fields()[8].schema(), other.doseNumberPositiveInt);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.doseNumberString)) {
        this.doseNumberString = data().deepCopy(fields()[9].schema(), other.doseNumberString);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
      validate(fields()[2], value);
      this.identifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'vaccineCode' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getVaccineCode() {
      return vaccineCode;
    }


    /**
      * Sets the value of the 'vaccineCode' field.
      * @param value The value of 'vaccineCode'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setVaccineCode(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.vaccineCodeBuilder = null;
      this.vaccineCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'vaccineCode' field has been set.
      * @return True if the 'vaccineCode' field has been set, false otherwise.
      */
    public boolean hasVaccineCode() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'vaccineCode' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getVaccineCodeBuilder() {
      if (vaccineCodeBuilder == null) {
        if (hasVaccineCode()) {
          setVaccineCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(vaccineCode));
        } else {
          setVaccineCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return vaccineCodeBuilder;
    }

    /**
     * Sets the Builder instance for the 'vaccineCode' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Immunization.Builder setVaccineCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearVaccineCode();
      vaccineCodeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'vaccineCode' field has an active Builder instance
     * @return True if the 'vaccineCode' field has an active Builder instance
     */
    public boolean hasVaccineCodeBuilder() {
      return vaccineCodeBuilder != null;
    }

    /**
      * Clears the value of the 'vaccineCode' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearVaccineCode() {
      vaccineCode = null;
      vaccineCodeBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[5], value);
      this.codeBuilder = null;
      this.code = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'code' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCodeBuilder() {
      if (codeBuilder == null) {
        if (hasCode()) {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(code));
        } else {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return codeBuilder;
    }

    /**
     * Sets the Builder instance for the 'code' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Immunization.Builder setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCode();
      codeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'code' field has an active Builder instance
     * @return True if the 'code' field has an active Builder instance
     */
    public boolean hasCodeBuilder() {
      return codeBuilder != null;
    }

    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearCode() {
      code = null;
      codeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'patient' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getPatient() {
      return patient;
    }


    /**
      * Sets the value of the 'patient' field.
      * @param value The value of 'patient'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setPatient(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[6], value);
      this.patientBuilder = null;
      this.patient = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'patient' field has been set.
      * @return True if the 'patient' field has been set, false otherwise.
      */
    public boolean hasPatient() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'patient' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getPatientBuilder() {
      if (patientBuilder == null) {
        if (hasPatient()) {
          setPatientBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(patient));
        } else {
          setPatientBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return patientBuilder;
    }

    /**
     * Sets the Builder instance for the 'patient' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Immunization.Builder setPatientBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearPatient();
      patientBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'patient' field has an active Builder instance
     * @return True if the 'patient' field has an active Builder instance
     */
    public boolean hasPatientBuilder() {
      return patientBuilder != null;
    }

    /**
      * Clears the value of the 'patient' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearPatient() {
      patient = null;
      patientBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'occurrence' field.
      * @return The value.
      */
    public java.lang.Object getOccurrence() {
      return occurrence;
    }


    /**
      * Sets the value of the 'occurrence' field.
      * @param value The value of 'occurrence'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setOccurrence(java.lang.Object value) {
      validate(fields()[7], value);
      this.occurrence = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'occurrence' field has been set.
      * @return True if the 'occurrence' field has been set, false otherwise.
      */
    public boolean hasOccurrence() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'occurrence' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearOccurrence() {
      occurrence = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'doseNumberPositiveInt' field.
      * @return The value.
      */
    public int getDoseNumberPositiveInt() {
      return doseNumberPositiveInt;
    }


    /**
      * Sets the value of the 'doseNumberPositiveInt' field.
      * @param value The value of 'doseNumberPositiveInt'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setDoseNumberPositiveInt(int value) {
      validate(fields()[8], value);
      this.doseNumberPositiveInt = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'doseNumberPositiveInt' field has been set.
      * @return True if the 'doseNumberPositiveInt' field has been set, false otherwise.
      */
    public boolean hasDoseNumberPositiveInt() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'doseNumberPositiveInt' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearDoseNumberPositiveInt() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'doseNumberString' field.
      * @return The value.
      */
    public java.lang.CharSequence getDoseNumberString() {
      return doseNumberString;
    }


    /**
      * Sets the value of the 'doseNumberString' field.
      * @param value The value of 'doseNumberString'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder setDoseNumberString(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.doseNumberString = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'doseNumberString' field has been set.
      * @return True if the 'doseNumberString' field has been set, false otherwise.
      */
    public boolean hasDoseNumberString() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'doseNumberString' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Immunization.Builder clearDoseNumberString() {
      doseNumberString = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Immunization build() {
      try {
        Immunization record = new Immunization();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.identifier = fieldSetFlags()[2] ? this.identifier : (java.util.List<io.carrera.fhir.avro.models.identifier_record>) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (vaccineCodeBuilder != null) {
          try {
            record.vaccineCode = this.vaccineCodeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("vaccineCode"));
            throw e;
          }
        } else {
          record.vaccineCode = fieldSetFlags()[4] ? this.vaccineCode : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        if (codeBuilder != null) {
          try {
            record.code = this.codeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("code"));
            throw e;
          }
        } else {
          record.code = fieldSetFlags()[5] ? this.code : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[5]);
        }
        if (patientBuilder != null) {
          try {
            record.patient = this.patientBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("patient"));
            throw e;
          }
        } else {
          record.patient = fieldSetFlags()[6] ? this.patient : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[6]);
        }
        record.occurrence = fieldSetFlags()[7] ? this.occurrence :  defaultValue(fields()[7]);
        record.doseNumberPositiveInt = fieldSetFlags()[8] ? this.doseNumberPositiveInt : (java.lang.Integer) defaultValue(fields()[8]);
        record.doseNumberString = fieldSetFlags()[9] ? this.doseNumberString : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Immunization>
    WRITER$ = (org.apache.avro.io.DatumWriter<Immunization>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Immunization>
    READER$ = (org.apache.avro.io.DatumReader<Immunization>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










