/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ExplanationOfBenefit_Insurance extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 355465388621091424L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExplanationOfBenefit_Insurance\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"focal\",\"type\":\"boolean\"},{\"name\":\"coverage\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"preAuthRef\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ExplanationOfBenefit_Insurance> ENCODER =
      new BinaryMessageEncoder<ExplanationOfBenefit_Insurance>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ExplanationOfBenefit_Insurance> DECODER =
      new BinaryMessageDecoder<ExplanationOfBenefit_Insurance>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ExplanationOfBenefit_Insurance> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ExplanationOfBenefit_Insurance> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ExplanationOfBenefit_Insurance> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ExplanationOfBenefit_Insurance>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ExplanationOfBenefit_Insurance to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ExplanationOfBenefit_Insurance from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ExplanationOfBenefit_Insurance instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ExplanationOfBenefit_Insurance fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private boolean focal;
   private io.carrera.fhir.avro.models.Reference coverage;
   private java.util.List<java.lang.CharSequence> preAuthRef;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ExplanationOfBenefit_Insurance() {}

  /**
   * All-args constructor.
   * @param focal The new value for focal
   * @param coverage The new value for coverage
   * @param preAuthRef The new value for preAuthRef
   */
  public ExplanationOfBenefit_Insurance(java.lang.Boolean focal, io.carrera.fhir.avro.models.Reference coverage, java.util.List<java.lang.CharSequence> preAuthRef) {
    this.focal = focal;
    this.coverage = coverage;
    this.preAuthRef = preAuthRef;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return focal;
    case 1: return coverage;
    case 2: return preAuthRef;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: focal = (java.lang.Boolean)value$; break;
    case 1: coverage = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 2: preAuthRef = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'focal' field.
   * @return The value of the 'focal' field.
   */
  public boolean getFocal() {
    return focal;
  }


  /**
   * Sets the value of the 'focal' field.
   * @param value the value to set.
   */
  public void setFocal(boolean value) {
    this.focal = value;
  }

  /**
   * Gets the value of the 'coverage' field.
   * @return The value of the 'coverage' field.
   */
  public io.carrera.fhir.avro.models.Reference getCoverage() {
    return coverage;
  }


  /**
   * Sets the value of the 'coverage' field.
   * @param value the value to set.
   */
  public void setCoverage(io.carrera.fhir.avro.models.Reference value) {
    this.coverage = value;
  }

  /**
   * Gets the value of the 'preAuthRef' field.
   * @return The value of the 'preAuthRef' field.
   */
  public java.util.List<java.lang.CharSequence> getPreAuthRef() {
    return preAuthRef;
  }


  /**
   * Sets the value of the 'preAuthRef' field.
   * @param value the value to set.
   */
  public void setPreAuthRef(java.util.List<java.lang.CharSequence> value) {
    this.preAuthRef = value;
  }

  /**
   * Creates a new ExplanationOfBenefit_Insurance RecordBuilder.
   * @return A new ExplanationOfBenefit_Insurance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder();
  }

  /**
   * Creates a new ExplanationOfBenefit_Insurance RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ExplanationOfBenefit_Insurance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder newBuilder(io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder(other);
    }
  }

  /**
   * Creates a new ExplanationOfBenefit_Insurance RecordBuilder by copying an existing ExplanationOfBenefit_Insurance instance.
   * @param other The existing instance to copy.
   * @return A new ExplanationOfBenefit_Insurance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder newBuilder(io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder(other);
    }
  }

  /**
   * RecordBuilder for ExplanationOfBenefit_Insurance instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExplanationOfBenefit_Insurance>
    implements org.apache.avro.data.RecordBuilder<ExplanationOfBenefit_Insurance> {

    private boolean focal;
    private io.carrera.fhir.avro.models.Reference coverage;
    private io.carrera.fhir.avro.models.Reference.Builder coverageBuilder;
    private java.util.List<java.lang.CharSequence> preAuthRef;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.focal)) {
        this.focal = data().deepCopy(fields()[0].schema(), other.focal);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.coverage)) {
        this.coverage = data().deepCopy(fields()[1].schema(), other.coverage);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasCoverageBuilder()) {
        this.coverageBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getCoverageBuilder());
      }
      if (isValidValue(fields()[2], other.preAuthRef)) {
        this.preAuthRef = data().deepCopy(fields()[2].schema(), other.preAuthRef);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ExplanationOfBenefit_Insurance instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.focal)) {
        this.focal = data().deepCopy(fields()[0].schema(), other.focal);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.coverage)) {
        this.coverage = data().deepCopy(fields()[1].schema(), other.coverage);
        fieldSetFlags()[1] = true;
      }
      this.coverageBuilder = null;
      if (isValidValue(fields()[2], other.preAuthRef)) {
        this.preAuthRef = data().deepCopy(fields()[2].schema(), other.preAuthRef);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'focal' field.
      * @return The value.
      */
    public boolean getFocal() {
      return focal;
    }


    /**
      * Sets the value of the 'focal' field.
      * @param value The value of 'focal'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder setFocal(boolean value) {
      validate(fields()[0], value);
      this.focal = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'focal' field has been set.
      * @return True if the 'focal' field has been set, false otherwise.
      */
    public boolean hasFocal() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'focal' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder clearFocal() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'coverage' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getCoverage() {
      return coverage;
    }


    /**
      * Sets the value of the 'coverage' field.
      * @param value The value of 'coverage'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder setCoverage(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[1], value);
      this.coverageBuilder = null;
      this.coverage = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'coverage' field has been set.
      * @return True if the 'coverage' field has been set, false otherwise.
      */
    public boolean hasCoverage() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'coverage' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getCoverageBuilder() {
      if (coverageBuilder == null) {
        if (hasCoverage()) {
          setCoverageBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(coverage));
        } else {
          setCoverageBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return coverageBuilder;
    }

    /**
     * Sets the Builder instance for the 'coverage' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder setCoverageBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearCoverage();
      coverageBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'coverage' field has an active Builder instance
     * @return True if the 'coverage' field has an active Builder instance
     */
    public boolean hasCoverageBuilder() {
      return coverageBuilder != null;
    }

    /**
      * Clears the value of the 'coverage' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder clearCoverage() {
      coverage = null;
      coverageBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'preAuthRef' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getPreAuthRef() {
      return preAuthRef;
    }


    /**
      * Sets the value of the 'preAuthRef' field.
      * @param value The value of 'preAuthRef'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder setPreAuthRef(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.preAuthRef = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'preAuthRef' field has been set.
      * @return True if the 'preAuthRef' field has been set, false otherwise.
      */
    public boolean hasPreAuthRef() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'preAuthRef' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.ExplanationOfBenefit_Insurance.Builder clearPreAuthRef() {
      preAuthRef = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ExplanationOfBenefit_Insurance build() {
      try {
        ExplanationOfBenefit_Insurance record = new ExplanationOfBenefit_Insurance();
        record.focal = fieldSetFlags()[0] ? this.focal : (java.lang.Boolean) defaultValue(fields()[0]);
        if (coverageBuilder != null) {
          try {
            record.coverage = this.coverageBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("coverage"));
            throw e;
          }
        } else {
          record.coverage = fieldSetFlags()[1] ? this.coverage : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[1]);
        }
        record.preAuthRef = fieldSetFlags()[2] ? this.preAuthRef : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ExplanationOfBenefit_Insurance>
    WRITER$ = (org.apache.avro.io.DatumWriter<ExplanationOfBenefit_Insurance>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ExplanationOfBenefit_Insurance>
    READER$ = (org.apache.avro.io.DatumReader<ExplanationOfBenefit_Insurance>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeBoolean(this.focal);

    this.coverage.customEncode(out);

    if (this.preAuthRef == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.preAuthRef.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.lang.CharSequence e0: this.preAuthRef) {
        actualSize0++;
        out.startItem();
        out.writeString(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.focal = in.readBoolean();

      if (this.coverage == null) {
        this.coverage = new io.carrera.fhir.avro.models.Reference();
      }
      this.coverage.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.preAuthRef = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a0 = this.preAuthRef;
        if (a0 == null) {
          a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("preAuthRef").schema().getTypes().get(1));
          this.preAuthRef = a0;
        } else a0.clear();
        SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
            a0.add(e0);
          }
        }
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.focal = in.readBoolean();
          break;

        case 1:
          if (this.coverage == null) {
            this.coverage = new io.carrera.fhir.avro.models.Reference();
          }
          this.coverage.customDecode(in);
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.preAuthRef = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a0 = this.preAuthRef;
            if (a0 == null) {
              a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("preAuthRef").schema().getTypes().get(1));
              this.preAuthRef = a0;
            } else a0.clear();
            SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
                a0.add(e0);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










