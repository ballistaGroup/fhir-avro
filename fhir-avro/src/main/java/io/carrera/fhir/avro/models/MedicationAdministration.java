/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MedicationAdministration extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2843123323866566114L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicationAdministration\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"instantiates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"implicitRules\",\"type\":[\"null\",\"string\"]},{\"name\":\"language\",\"type\":[\"null\",\"string\"]},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Extension\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Extension\"}],\"default\":null},{\"name\":\"url\",\"type\":[\"null\",\"string\"]},{\"name\":\"value\",\"type\":[\"null\",\"string\",\"int\",\"boolean\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Decimal\",\"fields\":[{\"name\":\"unscaled_value\",\"type\":\"bytes\",\"logicalType\":\"decimal\"},{\"name\":\"precision\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}]}],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comparator\",\"type\":[\"null\",\"string\"],\"default\":null}]},{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null}]}}]},{\"name\":\"modifierExtension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Extension\"}]},{\"name\":\"partOf\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}}]},{\"name\":\"status\",\"type\":[\"null\",\"string\"]},{\"name\":\"statusReason\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Coding\"}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}}]},{\"name\":\"category\",\"type\":[\"null\",\"CodeableConcept\"]},{\"name\":\"medicationCodeableConcept\",\"type\":[\"null\",\"CodeableConcept\"]},{\"name\":\"medicationReference\",\"type\":[\"null\",\"Reference\"]},{\"name\":\"subject\",\"type\":\"Reference\"},{\"name\":\"context\",\"type\":[\"null\",\"Reference\"]},{\"name\":\"supportingInformation\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}]},{\"name\":\"effectiveDateTime\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}]},{\"name\":\"effectivePeriod\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"record\",\"name\":\"XsDateTime\",\"fields\":[{\"name\":\"millis\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"XsDate\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"type\":\"record\",\"name\":\"XsYearMonth\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"}]},{\"type\":\"record\",\"name\":\"XsYear\",\"fields\":[{\"name\":\"value\",\"type\":\"int\"}]}]}]}],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",\"DateTime\"],\"default\":null}]}]},{\"name\":\"reasonCode\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}]},{\"name\":\"reasonReference\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}]},{\"name\":\"request\",\"type\":[\"null\",\"Reference\"]},{\"name\":\"device\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}]},{\"name\":\"eventHistory\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMicrosConversion());
  }

  private static final BinaryMessageEncoder<MedicationAdministration> ENCODER =
      new BinaryMessageEncoder<MedicationAdministration>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicationAdministration> DECODER =
      new BinaryMessageDecoder<MedicationAdministration>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MedicationAdministration> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MedicationAdministration> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MedicationAdministration> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicationAdministration>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MedicationAdministration to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MedicationAdministration from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MedicationAdministration instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MedicationAdministration fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.List<java.lang.CharSequence> instantiates;
   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.lang.CharSequence implicitRules;
   private java.lang.CharSequence language;
   private java.util.List<io.carrera.fhir.avro.models.Extension> extension;
   private java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension;
   private java.util.List<io.carrera.fhir.avro.models.Reference> partOf;
   private java.lang.CharSequence status;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> statusReason;
   private io.carrera.fhir.avro.models.CodeableConcept category;
   private io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept;
   private io.carrera.fhir.avro.models.Reference medicationReference;
   private io.carrera.fhir.avro.models.Reference subject;
   private io.carrera.fhir.avro.models.Reference context;
   private java.util.List<io.carrera.fhir.avro.models.Reference> supportingInformation;
   private java.lang.Object effectiveDateTime;
   private io.carrera.fhir.avro.models.Period effectivePeriod;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode;
   private java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference;
   private io.carrera.fhir.avro.models.Reference request;
   private java.util.List<io.carrera.fhir.avro.models.Reference> device;
   private java.util.List<io.carrera.fhir.avro.models.Reference> eventHistory;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicationAdministration() {}

  /**
   * All-args constructor.
   * @param instantiates The new value for instantiates
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param implicitRules The new value for implicitRules
   * @param language The new value for language
   * @param extension The new value for extension
   * @param modifierExtension The new value for modifierExtension
   * @param partOf The new value for partOf
   * @param status The new value for status
   * @param statusReason The new value for statusReason
   * @param category The new value for category
   * @param medicationCodeableConcept The new value for medicationCodeableConcept
   * @param medicationReference The new value for medicationReference
   * @param subject The new value for subject
   * @param context The new value for context
   * @param supportingInformation The new value for supportingInformation
   * @param effectiveDateTime The new value for effectiveDateTime
   * @param effectivePeriod The new value for effectivePeriod
   * @param reasonCode The new value for reasonCode
   * @param reasonReference The new value for reasonReference
   * @param request The new value for request
   * @param device The new value for device
   * @param eventHistory The new value for eventHistory
   */
  public MedicationAdministration(java.util.List<java.lang.CharSequence> instantiates, java.lang.CharSequence resourceType, java.lang.CharSequence id, java.lang.CharSequence implicitRules, java.lang.CharSequence language, java.util.List<io.carrera.fhir.avro.models.Extension> extension, java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension, java.util.List<io.carrera.fhir.avro.models.Reference> partOf, java.lang.CharSequence status, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> statusReason, io.carrera.fhir.avro.models.CodeableConcept category, io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept, io.carrera.fhir.avro.models.Reference medicationReference, io.carrera.fhir.avro.models.Reference subject, io.carrera.fhir.avro.models.Reference context, java.util.List<io.carrera.fhir.avro.models.Reference> supportingInformation, java.lang.Object effectiveDateTime, io.carrera.fhir.avro.models.Period effectivePeriod, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode, java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference, io.carrera.fhir.avro.models.Reference request, java.util.List<io.carrera.fhir.avro.models.Reference> device, java.util.List<io.carrera.fhir.avro.models.Reference> eventHistory) {
    this.instantiates = instantiates;
    this.resourceType = resourceType;
    this.id = id;
    this.implicitRules = implicitRules;
    this.language = language;
    this.extension = extension;
    this.modifierExtension = modifierExtension;
    this.partOf = partOf;
    this.status = status;
    this.statusReason = statusReason;
    this.category = category;
    this.medicationCodeableConcept = medicationCodeableConcept;
    this.medicationReference = medicationReference;
    this.subject = subject;
    this.context = context;
    this.supportingInformation = supportingInformation;
    this.effectiveDateTime = effectiveDateTime;
    this.effectivePeriod = effectivePeriod;
    this.reasonCode = reasonCode;
    this.reasonReference = reasonReference;
    this.request = request;
    this.device = device;
    this.eventHistory = eventHistory;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return instantiates;
    case 1: return resourceType;
    case 2: return id;
    case 3: return implicitRules;
    case 4: return language;
    case 5: return extension;
    case 6: return modifierExtension;
    case 7: return partOf;
    case 8: return status;
    case 9: return statusReason;
    case 10: return category;
    case 11: return medicationCodeableConcept;
    case 12: return medicationReference;
    case 13: return subject;
    case 14: return context;
    case 15: return supportingInformation;
    case 16: return effectiveDateTime;
    case 17: return effectivePeriod;
    case 18: return reasonCode;
    case 19: return reasonReference;
    case 20: return request;
    case 21: return device;
    case 22: return eventHistory;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: instantiates = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: resourceType = (java.lang.CharSequence)value$; break;
    case 2: id = (java.lang.CharSequence)value$; break;
    case 3: implicitRules = (java.lang.CharSequence)value$; break;
    case 4: language = (java.lang.CharSequence)value$; break;
    case 5: extension = (java.util.List<io.carrera.fhir.avro.models.Extension>)value$; break;
    case 6: modifierExtension = (java.util.List<io.carrera.fhir.avro.models.Extension>)value$; break;
    case 7: partOf = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 8: status = (java.lang.CharSequence)value$; break;
    case 9: statusReason = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 10: category = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 11: medicationCodeableConcept = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 12: medicationReference = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 13: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 14: context = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 15: supportingInformation = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 16: effectiveDateTime = value$; break;
    case 17: effectivePeriod = (io.carrera.fhir.avro.models.Period)value$; break;
    case 18: reasonCode = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 19: reasonReference = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 20: request = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 21: device = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 22: eventHistory = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'instantiates' field.
   * @return The value of the 'instantiates' field.
   */
  public java.util.List<java.lang.CharSequence> getInstantiates() {
    return instantiates;
  }


  /**
   * Sets the value of the 'instantiates' field.
   * @param value the value to set.
   */
  public void setInstantiates(java.util.List<java.lang.CharSequence> value) {
    this.instantiates = value;
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'implicitRules' field.
   * @return The value of the 'implicitRules' field.
   */
  public java.lang.CharSequence getImplicitRules() {
    return implicitRules;
  }


  /**
   * Sets the value of the 'implicitRules' field.
   * @param value the value to set.
   */
  public void setImplicitRules(java.lang.CharSequence value) {
    this.implicitRules = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }


  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The value of the 'extension' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Extension> getExtension() {
    return extension;
  }


  /**
   * Sets the value of the 'extension' field.
   * @param value the value to set.
   */
  public void setExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
    this.extension = value;
  }

  /**
   * Gets the value of the 'modifierExtension' field.
   * @return The value of the 'modifierExtension' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Extension> getModifierExtension() {
    return modifierExtension;
  }


  /**
   * Sets the value of the 'modifierExtension' field.
   * @param value the value to set.
   */
  public void setModifierExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
    this.modifierExtension = value;
  }

  /**
   * Gets the value of the 'partOf' field.
   * @return The value of the 'partOf' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getPartOf() {
    return partOf;
  }


  /**
   * Sets the value of the 'partOf' field.
   * @param value the value to set.
   */
  public void setPartOf(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.partOf = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'statusReason' field.
   * @return The value of the 'statusReason' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getStatusReason() {
    return statusReason;
  }


  /**
   * Sets the value of the 'statusReason' field.
   * @param value the value to set.
   */
  public void setStatusReason(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.statusReason = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'medicationCodeableConcept' field.
   * @return The value of the 'medicationCodeableConcept' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getMedicationCodeableConcept() {
    return medicationCodeableConcept;
  }


  /**
   * Sets the value of the 'medicationCodeableConcept' field.
   * @param value the value to set.
   */
  public void setMedicationCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.medicationCodeableConcept = value;
  }

  /**
   * Gets the value of the 'medicationReference' field.
   * @return The value of the 'medicationReference' field.
   */
  public io.carrera.fhir.avro.models.Reference getMedicationReference() {
    return medicationReference;
  }


  /**
   * Sets the value of the 'medicationReference' field.
   * @param value the value to set.
   */
  public void setMedicationReference(io.carrera.fhir.avro.models.Reference value) {
    this.medicationReference = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'context' field.
   * @return The value of the 'context' field.
   */
  public io.carrera.fhir.avro.models.Reference getContext() {
    return context;
  }


  /**
   * Sets the value of the 'context' field.
   * @param value the value to set.
   */
  public void setContext(io.carrera.fhir.avro.models.Reference value) {
    this.context = value;
  }

  /**
   * Gets the value of the 'supportingInformation' field.
   * @return The value of the 'supportingInformation' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getSupportingInformation() {
    return supportingInformation;
  }


  /**
   * Sets the value of the 'supportingInformation' field.
   * @param value the value to set.
   */
  public void setSupportingInformation(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.supportingInformation = value;
  }

  /**
   * Gets the value of the 'effectiveDateTime' field.
   * @return The value of the 'effectiveDateTime' field.
   */
  public java.lang.Object getEffectiveDateTime() {
    return effectiveDateTime;
  }


  /**
   * Sets the value of the 'effectiveDateTime' field.
   * @param value the value to set.
   */
  public void setEffectiveDateTime(java.lang.Object value) {
    this.effectiveDateTime = value;
  }

  /**
   * Gets the value of the 'effectivePeriod' field.
   * @return The value of the 'effectivePeriod' field.
   */
  public io.carrera.fhir.avro.models.Period getEffectivePeriod() {
    return effectivePeriod;
  }


  /**
   * Sets the value of the 'effectivePeriod' field.
   * @param value the value to set.
   */
  public void setEffectivePeriod(io.carrera.fhir.avro.models.Period value) {
    this.effectivePeriod = value;
  }

  /**
   * Gets the value of the 'reasonCode' field.
   * @return The value of the 'reasonCode' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getReasonCode() {
    return reasonCode;
  }


  /**
   * Sets the value of the 'reasonCode' field.
   * @param value the value to set.
   */
  public void setReasonCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.reasonCode = value;
  }

  /**
   * Gets the value of the 'reasonReference' field.
   * @return The value of the 'reasonReference' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getReasonReference() {
    return reasonReference;
  }


  /**
   * Sets the value of the 'reasonReference' field.
   * @param value the value to set.
   */
  public void setReasonReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.reasonReference = value;
  }

  /**
   * Gets the value of the 'request' field.
   * @return The value of the 'request' field.
   */
  public io.carrera.fhir.avro.models.Reference getRequest() {
    return request;
  }


  /**
   * Sets the value of the 'request' field.
   * @param value the value to set.
   */
  public void setRequest(io.carrera.fhir.avro.models.Reference value) {
    this.request = value;
  }

  /**
   * Gets the value of the 'device' field.
   * @return The value of the 'device' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getDevice() {
    return device;
  }


  /**
   * Sets the value of the 'device' field.
   * @param value the value to set.
   */
  public void setDevice(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.device = value;
  }

  /**
   * Gets the value of the 'eventHistory' field.
   * @return The value of the 'eventHistory' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getEventHistory() {
    return eventHistory;
  }


  /**
   * Sets the value of the 'eventHistory' field.
   * @param value the value to set.
   */
  public void setEventHistory(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.eventHistory = value;
  }

  /**
   * Creates a new MedicationAdministration RecordBuilder.
   * @return A new MedicationAdministration RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationAdministration.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.MedicationAdministration.Builder();
  }

  /**
   * Creates a new MedicationAdministration RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicationAdministration RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationAdministration.Builder newBuilder(io.carrera.fhir.avro.models.MedicationAdministration.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationAdministration.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationAdministration.Builder(other);
    }
  }

  /**
   * Creates a new MedicationAdministration RecordBuilder by copying an existing MedicationAdministration instance.
   * @param other The existing instance to copy.
   * @return A new MedicationAdministration RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationAdministration.Builder newBuilder(io.carrera.fhir.avro.models.MedicationAdministration other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationAdministration.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationAdministration.Builder(other);
    }
  }

  /**
   * RecordBuilder for MedicationAdministration instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicationAdministration>
    implements org.apache.avro.data.RecordBuilder<MedicationAdministration> {

    private java.util.List<java.lang.CharSequence> instantiates;
    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.lang.CharSequence implicitRules;
    private java.lang.CharSequence language;
    private java.util.List<io.carrera.fhir.avro.models.Extension> extension;
    private java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension;
    private java.util.List<io.carrera.fhir.avro.models.Reference> partOf;
    private java.lang.CharSequence status;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> statusReason;
    private io.carrera.fhir.avro.models.CodeableConcept category;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder categoryBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder medicationCodeableConceptBuilder;
    private io.carrera.fhir.avro.models.Reference medicationReference;
    private io.carrera.fhir.avro.models.Reference.Builder medicationReferenceBuilder;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;
    private io.carrera.fhir.avro.models.Reference context;
    private io.carrera.fhir.avro.models.Reference.Builder contextBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Reference> supportingInformation;
    private java.lang.Object effectiveDateTime;
    private io.carrera.fhir.avro.models.Period effectivePeriod;
    private io.carrera.fhir.avro.models.Period.Builder effectivePeriodBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode;
    private java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference;
    private io.carrera.fhir.avro.models.Reference request;
    private io.carrera.fhir.avro.models.Reference.Builder requestBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Reference> device;
    private java.util.List<io.carrera.fhir.avro.models.Reference> eventHistory;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationAdministration.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.instantiates)) {
        this.instantiates = data().deepCopy(fields()[0].schema(), other.instantiates);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[1].schema(), other.resourceType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.implicitRules)) {
        this.implicitRules = data().deepCopy(fields()[3].schema(), other.implicitRules);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.language)) {
        this.language = data().deepCopy(fields()[4].schema(), other.language);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.extension)) {
        this.extension = data().deepCopy(fields()[5].schema(), other.extension);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[6].schema(), other.modifierExtension);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.partOf)) {
        this.partOf = data().deepCopy(fields()[7].schema(), other.partOf);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.statusReason)) {
        this.statusReason = data().deepCopy(fields()[9].schema(), other.statusReason);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.category)) {
        this.category = data().deepCopy(fields()[10].schema(), other.category);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasCategoryBuilder()) {
        this.categoryBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCategoryBuilder());
      }
      if (isValidValue(fields()[11], other.medicationCodeableConcept)) {
        this.medicationCodeableConcept = data().deepCopy(fields()[11].schema(), other.medicationCodeableConcept);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasMedicationCodeableConceptBuilder()) {
        this.medicationCodeableConceptBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getMedicationCodeableConceptBuilder());
      }
      if (isValidValue(fields()[12], other.medicationReference)) {
        this.medicationReference = data().deepCopy(fields()[12].schema(), other.medicationReference);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasMedicationReferenceBuilder()) {
        this.medicationReferenceBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getMedicationReferenceBuilder());
      }
      if (isValidValue(fields()[13], other.subject)) {
        this.subject = data().deepCopy(fields()[13].schema(), other.subject);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
      if (isValidValue(fields()[14], other.context)) {
        this.context = data().deepCopy(fields()[14].schema(), other.context);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (other.hasContextBuilder()) {
        this.contextBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getContextBuilder());
      }
      if (isValidValue(fields()[15], other.supportingInformation)) {
        this.supportingInformation = data().deepCopy(fields()[15].schema(), other.supportingInformation);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.effectiveDateTime)) {
        this.effectiveDateTime = data().deepCopy(fields()[16].schema(), other.effectiveDateTime);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.effectivePeriod)) {
        this.effectivePeriod = data().deepCopy(fields()[17].schema(), other.effectivePeriod);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasEffectivePeriodBuilder()) {
        this.effectivePeriodBuilder = io.carrera.fhir.avro.models.Period.newBuilder(other.getEffectivePeriodBuilder());
      }
      if (isValidValue(fields()[18], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[18].schema(), other.reasonCode);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[19].schema(), other.reasonReference);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.request)) {
        this.request = data().deepCopy(fields()[20].schema(), other.request);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (other.hasRequestBuilder()) {
        this.requestBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getRequestBuilder());
      }
      if (isValidValue(fields()[21], other.device)) {
        this.device = data().deepCopy(fields()[21].schema(), other.device);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.eventHistory)) {
        this.eventHistory = data().deepCopy(fields()[22].schema(), other.eventHistory);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
    }

    /**
     * Creates a Builder by copying an existing MedicationAdministration instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationAdministration other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.instantiates)) {
        this.instantiates = data().deepCopy(fields()[0].schema(), other.instantiates);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[1].schema(), other.resourceType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.implicitRules)) {
        this.implicitRules = data().deepCopy(fields()[3].schema(), other.implicitRules);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.language)) {
        this.language = data().deepCopy(fields()[4].schema(), other.language);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.extension)) {
        this.extension = data().deepCopy(fields()[5].schema(), other.extension);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[6].schema(), other.modifierExtension);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.partOf)) {
        this.partOf = data().deepCopy(fields()[7].schema(), other.partOf);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.statusReason)) {
        this.statusReason = data().deepCopy(fields()[9].schema(), other.statusReason);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.category)) {
        this.category = data().deepCopy(fields()[10].schema(), other.category);
        fieldSetFlags()[10] = true;
      }
      this.categoryBuilder = null;
      if (isValidValue(fields()[11], other.medicationCodeableConcept)) {
        this.medicationCodeableConcept = data().deepCopy(fields()[11].schema(), other.medicationCodeableConcept);
        fieldSetFlags()[11] = true;
      }
      this.medicationCodeableConceptBuilder = null;
      if (isValidValue(fields()[12], other.medicationReference)) {
        this.medicationReference = data().deepCopy(fields()[12].schema(), other.medicationReference);
        fieldSetFlags()[12] = true;
      }
      this.medicationReferenceBuilder = null;
      if (isValidValue(fields()[13], other.subject)) {
        this.subject = data().deepCopy(fields()[13].schema(), other.subject);
        fieldSetFlags()[13] = true;
      }
      this.subjectBuilder = null;
      if (isValidValue(fields()[14], other.context)) {
        this.context = data().deepCopy(fields()[14].schema(), other.context);
        fieldSetFlags()[14] = true;
      }
      this.contextBuilder = null;
      if (isValidValue(fields()[15], other.supportingInformation)) {
        this.supportingInformation = data().deepCopy(fields()[15].schema(), other.supportingInformation);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.effectiveDateTime)) {
        this.effectiveDateTime = data().deepCopy(fields()[16].schema(), other.effectiveDateTime);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.effectivePeriod)) {
        this.effectivePeriod = data().deepCopy(fields()[17].schema(), other.effectivePeriod);
        fieldSetFlags()[17] = true;
      }
      this.effectivePeriodBuilder = null;
      if (isValidValue(fields()[18], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[18].schema(), other.reasonCode);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[19].schema(), other.reasonReference);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.request)) {
        this.request = data().deepCopy(fields()[20].schema(), other.request);
        fieldSetFlags()[20] = true;
      }
      this.requestBuilder = null;
      if (isValidValue(fields()[21], other.device)) {
        this.device = data().deepCopy(fields()[21].schema(), other.device);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.eventHistory)) {
        this.eventHistory = data().deepCopy(fields()[22].schema(), other.eventHistory);
        fieldSetFlags()[22] = true;
      }
    }

    /**
      * Gets the value of the 'instantiates' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getInstantiates() {
      return instantiates;
    }


    /**
      * Sets the value of the 'instantiates' field.
      * @param value The value of 'instantiates'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setInstantiates(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.instantiates = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'instantiates' field has been set.
      * @return True if the 'instantiates' field has been set, false otherwise.
      */
    public boolean hasInstantiates() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'instantiates' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearInstantiates() {
      instantiates = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.resourceType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearId() {
      id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'implicitRules' field.
      * @return The value.
      */
    public java.lang.CharSequence getImplicitRules() {
      return implicitRules;
    }


    /**
      * Sets the value of the 'implicitRules' field.
      * @param value The value of 'implicitRules'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setImplicitRules(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.implicitRules = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'implicitRules' field has been set.
      * @return True if the 'implicitRules' field has been set, false otherwise.
      */
    public boolean hasImplicitRules() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'implicitRules' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearImplicitRules() {
      implicitRules = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }


    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.language = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Extension> getExtension() {
      return extension;
    }


    /**
      * Sets the value of the 'extension' field.
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
      validate(fields()[5], value);
      this.extension = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'extension' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'modifierExtension' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Extension> getModifierExtension() {
      return modifierExtension;
    }


    /**
      * Sets the value of the 'modifierExtension' field.
      * @param value The value of 'modifierExtension'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setModifierExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
      validate(fields()[6], value);
      this.modifierExtension = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'modifierExtension' field has been set.
      * @return True if the 'modifierExtension' field has been set, false otherwise.
      */
    public boolean hasModifierExtension() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'modifierExtension' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearModifierExtension() {
      modifierExtension = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'partOf' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getPartOf() {
      return partOf;
    }


    /**
      * Sets the value of the 'partOf' field.
      * @param value The value of 'partOf'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setPartOf(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[7], value);
      this.partOf = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'partOf' field has been set.
      * @return True if the 'partOf' field has been set, false otherwise.
      */
    public boolean hasPartOf() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'partOf' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearPartOf() {
      partOf = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.status = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearStatus() {
      status = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'statusReason' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getStatusReason() {
      return statusReason;
    }


    /**
      * Sets the value of the 'statusReason' field.
      * @param value The value of 'statusReason'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setStatusReason(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[9], value);
      this.statusReason = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'statusReason' field has been set.
      * @return True if the 'statusReason' field has been set, false otherwise.
      */
    public boolean hasStatusReason() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'statusReason' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearStatusReason() {
      statusReason = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setCategory(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[10], value);
      this.categoryBuilder = null;
      this.category = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'category' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCategoryBuilder() {
      if (categoryBuilder == null) {
        if (hasCategory()) {
          setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(category));
        } else {
          setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return categoryBuilder;
    }

    /**
     * Sets the Builder instance for the 'category' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCategory();
      categoryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'category' field has an active Builder instance
     * @return True if the 'category' field has an active Builder instance
     */
    public boolean hasCategoryBuilder() {
      return categoryBuilder != null;
    }

    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearCategory() {
      category = null;
      categoryBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicationCodeableConcept' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getMedicationCodeableConcept() {
      return medicationCodeableConcept;
    }


    /**
      * Sets the value of the 'medicationCodeableConcept' field.
      * @param value The value of 'medicationCodeableConcept'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setMedicationCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[11], value);
      this.medicationCodeableConceptBuilder = null;
      this.medicationCodeableConcept = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'medicationCodeableConcept' field has been set.
      * @return True if the 'medicationCodeableConcept' field has been set, false otherwise.
      */
    public boolean hasMedicationCodeableConcept() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'medicationCodeableConcept' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getMedicationCodeableConceptBuilder() {
      if (medicationCodeableConceptBuilder == null) {
        if (hasMedicationCodeableConcept()) {
          setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(medicationCodeableConcept));
        } else {
          setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return medicationCodeableConceptBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicationCodeableConcept' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearMedicationCodeableConcept();
      medicationCodeableConceptBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicationCodeableConcept' field has an active Builder instance
     * @return True if the 'medicationCodeableConcept' field has an active Builder instance
     */
    public boolean hasMedicationCodeableConceptBuilder() {
      return medicationCodeableConceptBuilder != null;
    }

    /**
      * Clears the value of the 'medicationCodeableConcept' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearMedicationCodeableConcept() {
      medicationCodeableConcept = null;
      medicationCodeableConceptBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicationReference' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getMedicationReference() {
      return medicationReference;
    }


    /**
      * Sets the value of the 'medicationReference' field.
      * @param value The value of 'medicationReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setMedicationReference(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[12], value);
      this.medicationReferenceBuilder = null;
      this.medicationReference = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'medicationReference' field has been set.
      * @return True if the 'medicationReference' field has been set, false otherwise.
      */
    public boolean hasMedicationReference() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'medicationReference' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getMedicationReferenceBuilder() {
      if (medicationReferenceBuilder == null) {
        if (hasMedicationReference()) {
          setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(medicationReference));
        } else {
          setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return medicationReferenceBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicationReference' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearMedicationReference();
      medicationReferenceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicationReference' field has an active Builder instance
     * @return True if the 'medicationReference' field has an active Builder instance
     */
    public boolean hasMedicationReferenceBuilder() {
      return medicationReferenceBuilder != null;
    }

    /**
      * Clears the value of the 'medicationReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearMedicationReference() {
      medicationReference = null;
      medicationReferenceBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[13], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'context' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getContext() {
      return context;
    }


    /**
      * Sets the value of the 'context' field.
      * @param value The value of 'context'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setContext(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[14], value);
      this.contextBuilder = null;
      this.context = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'context' field has been set.
      * @return True if the 'context' field has been set, false otherwise.
      */
    public boolean hasContext() {
      return fieldSetFlags()[14];
    }

    /**
     * Gets the Builder instance for the 'context' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getContextBuilder() {
      if (contextBuilder == null) {
        if (hasContext()) {
          setContextBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(context));
        } else {
          setContextBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return contextBuilder;
    }

    /**
     * Sets the Builder instance for the 'context' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setContextBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearContext();
      contextBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'context' field has an active Builder instance
     * @return True if the 'context' field has an active Builder instance
     */
    public boolean hasContextBuilder() {
      return contextBuilder != null;
    }

    /**
      * Clears the value of the 'context' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearContext() {
      context = null;
      contextBuilder = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'supportingInformation' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getSupportingInformation() {
      return supportingInformation;
    }


    /**
      * Sets the value of the 'supportingInformation' field.
      * @param value The value of 'supportingInformation'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setSupportingInformation(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[15], value);
      this.supportingInformation = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'supportingInformation' field has been set.
      * @return True if the 'supportingInformation' field has been set, false otherwise.
      */
    public boolean hasSupportingInformation() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'supportingInformation' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearSupportingInformation() {
      supportingInformation = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'effectiveDateTime' field.
      * @return The value.
      */
    public java.lang.Object getEffectiveDateTime() {
      return effectiveDateTime;
    }


    /**
      * Sets the value of the 'effectiveDateTime' field.
      * @param value The value of 'effectiveDateTime'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setEffectiveDateTime(java.lang.Object value) {
      validate(fields()[16], value);
      this.effectiveDateTime = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'effectiveDateTime' field has been set.
      * @return True if the 'effectiveDateTime' field has been set, false otherwise.
      */
    public boolean hasEffectiveDateTime() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'effectiveDateTime' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearEffectiveDateTime() {
      effectiveDateTime = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'effectivePeriod' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Period getEffectivePeriod() {
      return effectivePeriod;
    }


    /**
      * Sets the value of the 'effectivePeriod' field.
      * @param value The value of 'effectivePeriod'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setEffectivePeriod(io.carrera.fhir.avro.models.Period value) {
      validate(fields()[17], value);
      this.effectivePeriodBuilder = null;
      this.effectivePeriod = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'effectivePeriod' field has been set.
      * @return True if the 'effectivePeriod' field has been set, false otherwise.
      */
    public boolean hasEffectivePeriod() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'effectivePeriod' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Period.Builder getEffectivePeriodBuilder() {
      if (effectivePeriodBuilder == null) {
        if (hasEffectivePeriod()) {
          setEffectivePeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder(effectivePeriod));
        } else {
          setEffectivePeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder());
        }
      }
      return effectivePeriodBuilder;
    }

    /**
     * Sets the Builder instance for the 'effectivePeriod' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setEffectivePeriodBuilder(io.carrera.fhir.avro.models.Period.Builder value) {
      clearEffectivePeriod();
      effectivePeriodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'effectivePeriod' field has an active Builder instance
     * @return True if the 'effectivePeriod' field has an active Builder instance
     */
    public boolean hasEffectivePeriodBuilder() {
      return effectivePeriodBuilder != null;
    }

    /**
      * Clears the value of the 'effectivePeriod' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearEffectivePeriod() {
      effectivePeriod = null;
      effectivePeriodBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonCode' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getReasonCode() {
      return reasonCode;
    }


    /**
      * Sets the value of the 'reasonCode' field.
      * @param value The value of 'reasonCode'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setReasonCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[18], value);
      this.reasonCode = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonCode' field has been set.
      * @return True if the 'reasonCode' field has been set, false otherwise.
      */
    public boolean hasReasonCode() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'reasonCode' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearReasonCode() {
      reasonCode = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonReference' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getReasonReference() {
      return reasonReference;
    }


    /**
      * Sets the value of the 'reasonReference' field.
      * @param value The value of 'reasonReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setReasonReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[19], value);
      this.reasonReference = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonReference' field has been set.
      * @return True if the 'reasonReference' field has been set, false otherwise.
      */
    public boolean hasReasonReference() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'reasonReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearReasonReference() {
      reasonReference = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'request' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getRequest() {
      return request;
    }


    /**
      * Sets the value of the 'request' field.
      * @param value The value of 'request'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setRequest(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[20], value);
      this.requestBuilder = null;
      this.request = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'request' field has been set.
      * @return True if the 'request' field has been set, false otherwise.
      */
    public boolean hasRequest() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'request' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getRequestBuilder() {
      if (requestBuilder == null) {
        if (hasRequest()) {
          setRequestBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(request));
        } else {
          setRequestBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return requestBuilder;
    }

    /**
     * Sets the Builder instance for the 'request' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setRequestBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearRequest();
      requestBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'request' field has an active Builder instance
     * @return True if the 'request' field has an active Builder instance
     */
    public boolean hasRequestBuilder() {
      return requestBuilder != null;
    }

    /**
      * Clears the value of the 'request' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearRequest() {
      request = null;
      requestBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'device' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getDevice() {
      return device;
    }


    /**
      * Sets the value of the 'device' field.
      * @param value The value of 'device'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setDevice(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[21], value);
      this.device = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'device' field has been set.
      * @return True if the 'device' field has been set, false otherwise.
      */
    public boolean hasDevice() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'device' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearDevice() {
      device = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventHistory' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getEventHistory() {
      return eventHistory;
    }


    /**
      * Sets the value of the 'eventHistory' field.
      * @param value The value of 'eventHistory'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder setEventHistory(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[22], value);
      this.eventHistory = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'eventHistory' field has been set.
      * @return True if the 'eventHistory' field has been set, false otherwise.
      */
    public boolean hasEventHistory() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'eventHistory' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationAdministration.Builder clearEventHistory() {
      eventHistory = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicationAdministration build() {
      try {
        MedicationAdministration record = new MedicationAdministration();
        record.instantiates = fieldSetFlags()[0] ? this.instantiates : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.resourceType = fieldSetFlags()[1] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.id = fieldSetFlags()[2] ? this.id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.implicitRules = fieldSetFlags()[3] ? this.implicitRules : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.language = fieldSetFlags()[4] ? this.language : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.extension = fieldSetFlags()[5] ? this.extension : (java.util.List<io.carrera.fhir.avro.models.Extension>) defaultValue(fields()[5]);
        record.modifierExtension = fieldSetFlags()[6] ? this.modifierExtension : (java.util.List<io.carrera.fhir.avro.models.Extension>) defaultValue(fields()[6]);
        record.partOf = fieldSetFlags()[7] ? this.partOf : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[7]);
        record.status = fieldSetFlags()[8] ? this.status : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.statusReason = fieldSetFlags()[9] ? this.statusReason : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[9]);
        if (categoryBuilder != null) {
          try {
            record.category = this.categoryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("category"));
            throw e;
          }
        } else {
          record.category = fieldSetFlags()[10] ? this.category : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[10]);
        }
        if (medicationCodeableConceptBuilder != null) {
          try {
            record.medicationCodeableConcept = this.medicationCodeableConceptBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("medicationCodeableConcept"));
            throw e;
          }
        } else {
          record.medicationCodeableConcept = fieldSetFlags()[11] ? this.medicationCodeableConcept : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[11]);
        }
        if (medicationReferenceBuilder != null) {
          try {
            record.medicationReference = this.medicationReferenceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("medicationReference"));
            throw e;
          }
        } else {
          record.medicationReference = fieldSetFlags()[12] ? this.medicationReference : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[12]);
        }
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[13] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[13]);
        }
        if (contextBuilder != null) {
          try {
            record.context = this.contextBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("context"));
            throw e;
          }
        } else {
          record.context = fieldSetFlags()[14] ? this.context : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[14]);
        }
        record.supportingInformation = fieldSetFlags()[15] ? this.supportingInformation : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[15]);
        record.effectiveDateTime = fieldSetFlags()[16] ? this.effectiveDateTime :  defaultValue(fields()[16]);
        if (effectivePeriodBuilder != null) {
          try {
            record.effectivePeriod = this.effectivePeriodBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("effectivePeriod"));
            throw e;
          }
        } else {
          record.effectivePeriod = fieldSetFlags()[17] ? this.effectivePeriod : (io.carrera.fhir.avro.models.Period) defaultValue(fields()[17]);
        }
        record.reasonCode = fieldSetFlags()[18] ? this.reasonCode : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[18]);
        record.reasonReference = fieldSetFlags()[19] ? this.reasonReference : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[19]);
        if (requestBuilder != null) {
          try {
            record.request = this.requestBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("request"));
            throw e;
          }
        } else {
          record.request = fieldSetFlags()[20] ? this.request : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[20]);
        }
        record.device = fieldSetFlags()[21] ? this.device : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[21]);
        record.eventHistory = fieldSetFlags()[22] ? this.eventHistory : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[22]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicationAdministration>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicationAdministration>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicationAdministration>
    READER$ = (org.apache.avro.io.DatumReader<MedicationAdministration>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










