/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Goal extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1527913224740019355L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Goal\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"target\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Goal_Target\",\"fields\":[{\"name\":\"measure\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"detailQuantity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comparator\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"detailRange\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Range\",\"fields\":[{\"name\":\"low\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"high\",\"type\":[\"null\",\"Quantity\"],\"default\":null}]}],\"default\":null},{\"name\":\"detailCodeableConcept\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"detailString\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"detailBoolean\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"detailInteger\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"detailRatio\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Ratio\",\"fields\":[{\"name\":\"numerator\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"denominator\",\"type\":[\"null\",\"Quantity\"],\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"}],\"default\":null},{\"name\":\"startCodeableConcept\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"lifecycleStatus\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subject\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<Goal> ENCODER =
      new BinaryMessageEncoder<Goal>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Goal> DECODER =
      new BinaryMessageDecoder<Goal>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Goal> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Goal> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Goal> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Goal>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Goal to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Goal from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Goal instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Goal fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.Goal_Target> target;
   private java.time.LocalDate startDate;
   private io.carrera.fhir.avro.models.CodeableConcept startCodeableConcept;
   private java.lang.CharSequence lifecycleStatus;
   private io.carrera.fhir.avro.models.Reference subject;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Goal() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param target The new value for target
   * @param startDate The new value for startDate
   * @param startCodeableConcept The new value for startCodeableConcept
   * @param lifecycleStatus The new value for lifecycleStatus
   * @param subject The new value for subject
   */
  public Goal(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.Goal_Target> target, java.time.LocalDate startDate, io.carrera.fhir.avro.models.CodeableConcept startCodeableConcept, java.lang.CharSequence lifecycleStatus, io.carrera.fhir.avro.models.Reference subject) {
    this.resourceType = resourceType;
    this.id = id;
    this.target = target;
    this.startDate = startDate;
    this.startCodeableConcept = startCodeableConcept;
    this.lifecycleStatus = lifecycleStatus;
    this.subject = subject;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return target;
    case 3: return startDate;
    case 4: return startCodeableConcept;
    case 5: return lifecycleStatus;
    case 6: return subject;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: target = (java.util.List<io.carrera.fhir.avro.models.Goal_Target>)value$; break;
    case 3: startDate = (java.time.LocalDate)value$; break;
    case 4: startCodeableConcept = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: lifecycleStatus = (java.lang.CharSequence)value$; break;
    case 6: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'target' field.
   * @return The value of the 'target' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Goal_Target> getTarget() {
    return target;
  }


  /**
   * Sets the value of the 'target' field.
   * @param value the value to set.
   */
  public void setTarget(java.util.List<io.carrera.fhir.avro.models.Goal_Target> value) {
    this.target = value;
  }

  /**
   * Gets the value of the 'startDate' field.
   * @return The value of the 'startDate' field.
   */
  public java.time.LocalDate getStartDate() {
    return startDate;
  }


  /**
   * Sets the value of the 'startDate' field.
   * @param value the value to set.
   */
  public void setStartDate(java.time.LocalDate value) {
    this.startDate = value;
  }

  /**
   * Gets the value of the 'startCodeableConcept' field.
   * @return The value of the 'startCodeableConcept' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getStartCodeableConcept() {
    return startCodeableConcept;
  }


  /**
   * Sets the value of the 'startCodeableConcept' field.
   * @param value the value to set.
   */
  public void setStartCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.startCodeableConcept = value;
  }

  /**
   * Gets the value of the 'lifecycleStatus' field.
   * @return The value of the 'lifecycleStatus' field.
   */
  public java.lang.CharSequence getLifecycleStatus() {
    return lifecycleStatus;
  }


  /**
   * Sets the value of the 'lifecycleStatus' field.
   * @param value the value to set.
   */
  public void setLifecycleStatus(java.lang.CharSequence value) {
    this.lifecycleStatus = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Creates a new Goal RecordBuilder.
   * @return A new Goal RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Goal.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Goal.Builder();
  }

  /**
   * Creates a new Goal RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Goal RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Goal.Builder newBuilder(io.carrera.fhir.avro.models.Goal.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Goal.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Goal.Builder(other);
    }
  }

  /**
   * Creates a new Goal RecordBuilder by copying an existing Goal instance.
   * @param other The existing instance to copy.
   * @return A new Goal RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Goal.Builder newBuilder(io.carrera.fhir.avro.models.Goal other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Goal.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Goal.Builder(other);
    }
  }

  /**
   * RecordBuilder for Goal instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Goal>
    implements org.apache.avro.data.RecordBuilder<Goal> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.Goal_Target> target;
    private java.time.LocalDate startDate;
    private io.carrera.fhir.avro.models.CodeableConcept startCodeableConcept;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder startCodeableConceptBuilder;
    private java.lang.CharSequence lifecycleStatus;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Goal.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.startDate)) {
        this.startDate = data().deepCopy(fields()[3].schema(), other.startDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.startCodeableConcept)) {
        this.startCodeableConcept = data().deepCopy(fields()[4].schema(), other.startCodeableConcept);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasStartCodeableConceptBuilder()) {
        this.startCodeableConceptBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getStartCodeableConceptBuilder());
      }
      if (isValidValue(fields()[5], other.lifecycleStatus)) {
        this.lifecycleStatus = data().deepCopy(fields()[5].schema(), other.lifecycleStatus);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.subject)) {
        this.subject = data().deepCopy(fields()[6].schema(), other.subject);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Goal instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Goal other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.startDate)) {
        this.startDate = data().deepCopy(fields()[3].schema(), other.startDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.startCodeableConcept)) {
        this.startCodeableConcept = data().deepCopy(fields()[4].schema(), other.startCodeableConcept);
        fieldSetFlags()[4] = true;
      }
      this.startCodeableConceptBuilder = null;
      if (isValidValue(fields()[5], other.lifecycleStatus)) {
        this.lifecycleStatus = data().deepCopy(fields()[5].schema(), other.lifecycleStatus);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.subject)) {
        this.subject = data().deepCopy(fields()[6].schema(), other.subject);
        fieldSetFlags()[6] = true;
      }
      this.subjectBuilder = null;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'target' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Goal_Target> getTarget() {
      return target;
    }


    /**
      * Sets the value of the 'target' field.
      * @param value The value of 'target'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setTarget(java.util.List<io.carrera.fhir.avro.models.Goal_Target> value) {
      validate(fields()[2], value);
      this.target = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'target' field has been set.
      * @return True if the 'target' field has been set, false otherwise.
      */
    public boolean hasTarget() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'target' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearTarget() {
      target = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDate' field.
      * @return The value.
      */
    public java.time.LocalDate getStartDate() {
      return startDate;
    }


    /**
      * Sets the value of the 'startDate' field.
      * @param value The value of 'startDate'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setStartDate(java.time.LocalDate value) {
      validate(fields()[3], value);
      this.startDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'startDate' field has been set.
      * @return True if the 'startDate' field has been set, false otherwise.
      */
    public boolean hasStartDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'startDate' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearStartDate() {
      startDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'startCodeableConcept' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getStartCodeableConcept() {
      return startCodeableConcept;
    }


    /**
      * Sets the value of the 'startCodeableConcept' field.
      * @param value The value of 'startCodeableConcept'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setStartCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.startCodeableConceptBuilder = null;
      this.startCodeableConcept = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'startCodeableConcept' field has been set.
      * @return True if the 'startCodeableConcept' field has been set, false otherwise.
      */
    public boolean hasStartCodeableConcept() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'startCodeableConcept' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getStartCodeableConceptBuilder() {
      if (startCodeableConceptBuilder == null) {
        if (hasStartCodeableConcept()) {
          setStartCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(startCodeableConcept));
        } else {
          setStartCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return startCodeableConceptBuilder;
    }

    /**
     * Sets the Builder instance for the 'startCodeableConcept' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Goal.Builder setStartCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearStartCodeableConcept();
      startCodeableConceptBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'startCodeableConcept' field has an active Builder instance
     * @return True if the 'startCodeableConcept' field has an active Builder instance
     */
    public boolean hasStartCodeableConceptBuilder() {
      return startCodeableConceptBuilder != null;
    }

    /**
      * Clears the value of the 'startCodeableConcept' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearStartCodeableConcept() {
      startCodeableConcept = null;
      startCodeableConceptBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'lifecycleStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getLifecycleStatus() {
      return lifecycleStatus;
    }


    /**
      * Sets the value of the 'lifecycleStatus' field.
      * @param value The value of 'lifecycleStatus'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setLifecycleStatus(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.lifecycleStatus = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'lifecycleStatus' field has been set.
      * @return True if the 'lifecycleStatus' field has been set, false otherwise.
      */
    public boolean hasLifecycleStatus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'lifecycleStatus' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearLifecycleStatus() {
      lifecycleStatus = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[6], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Goal.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Goal.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Goal build() {
      try {
        Goal record = new Goal();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.target = fieldSetFlags()[2] ? this.target : (java.util.List<io.carrera.fhir.avro.models.Goal_Target>) defaultValue(fields()[2]);
        record.startDate = fieldSetFlags()[3] ? this.startDate : (java.time.LocalDate) defaultValue(fields()[3]);
        if (startCodeableConceptBuilder != null) {
          try {
            record.startCodeableConcept = this.startCodeableConceptBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("startCodeableConcept"));
            throw e;
          }
        } else {
          record.startCodeableConcept = fieldSetFlags()[4] ? this.startCodeableConcept : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        record.lifecycleStatus = fieldSetFlags()[5] ? this.lifecycleStatus : (java.lang.CharSequence) defaultValue(fields()[5]);
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[6] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[6]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Goal>
    WRITER$ = (org.apache.avro.io.DatumWriter<Goal>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Goal>
    READER$ = (org.apache.avro.io.DatumReader<Goal>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










