/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Condition extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 146008246615944870L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Condition\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"clinicalStatus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"verificationStatus\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"subject\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"stage\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Condition_Stage\",\"fields\":[{\"name\":\"summary\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"assessment\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null}]}}],\"default\":null},{\"name\":\"onsetDateTime\",\"type\":[\"null\",\"int\"],\"default\":null,\"logicalType\":\"date\"},{\"name\":\"code\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"abatementDateTime\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"localDateTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Condition> ENCODER =
      new BinaryMessageEncoder<Condition>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Condition> DECODER =
      new BinaryMessageDecoder<Condition>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Condition> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Condition> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Condition> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Condition>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Condition to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Condition from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Condition instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Condition fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private io.carrera.fhir.avro.models.CodeableConcept clinicalStatus;
   private io.carrera.fhir.avro.models.CodeableConcept verificationStatus;
   private io.carrera.fhir.avro.models.Reference subject;
   private java.util.List<io.carrera.fhir.avro.models.Condition_Stage> stage;
   private java.lang.Integer onsetDateTime;
   private io.carrera.fhir.avro.models.CodeableConcept code;
   private io.carrera.fhir.avro.models.DateTime abatementDateTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Condition() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param clinicalStatus The new value for clinicalStatus
   * @param verificationStatus The new value for verificationStatus
   * @param subject The new value for subject
   * @param stage The new value for stage
   * @param onsetDateTime The new value for onsetDateTime
   * @param code The new value for code
   * @param abatementDateTime The new value for abatementDateTime
   */
  public Condition(java.lang.CharSequence resourceType, java.lang.CharSequence id, io.carrera.fhir.avro.models.CodeableConcept clinicalStatus, io.carrera.fhir.avro.models.CodeableConcept verificationStatus, io.carrera.fhir.avro.models.Reference subject, java.util.List<io.carrera.fhir.avro.models.Condition_Stage> stage, java.lang.Integer onsetDateTime, io.carrera.fhir.avro.models.CodeableConcept code, io.carrera.fhir.avro.models.DateTime abatementDateTime) {
    this.resourceType = resourceType;
    this.id = id;
    this.clinicalStatus = clinicalStatus;
    this.verificationStatus = verificationStatus;
    this.subject = subject;
    this.stage = stage;
    this.onsetDateTime = onsetDateTime;
    this.code = code;
    this.abatementDateTime = abatementDateTime;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return clinicalStatus;
    case 3: return verificationStatus;
    case 4: return subject;
    case 5: return stage;
    case 6: return onsetDateTime;
    case 7: return code;
    case 8: return abatementDateTime;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: clinicalStatus = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 3: verificationStatus = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 4: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 5: stage = (java.util.List<io.carrera.fhir.avro.models.Condition_Stage>)value$; break;
    case 6: onsetDateTime = (java.lang.Integer)value$; break;
    case 7: code = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 8: abatementDateTime = (io.carrera.fhir.avro.models.DateTime)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'clinicalStatus' field.
   * @return The value of the 'clinicalStatus' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getClinicalStatus() {
    return clinicalStatus;
  }


  /**
   * Sets the value of the 'clinicalStatus' field.
   * @param value the value to set.
   */
  public void setClinicalStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.clinicalStatus = value;
  }

  /**
   * Gets the value of the 'verificationStatus' field.
   * @return The value of the 'verificationStatus' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getVerificationStatus() {
    return verificationStatus;
  }


  /**
   * Sets the value of the 'verificationStatus' field.
   * @param value the value to set.
   */
  public void setVerificationStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.verificationStatus = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'stage' field.
   * @return The value of the 'stage' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Condition_Stage> getStage() {
    return stage;
  }


  /**
   * Sets the value of the 'stage' field.
   * @param value the value to set.
   */
  public void setStage(java.util.List<io.carrera.fhir.avro.models.Condition_Stage> value) {
    this.stage = value;
  }

  /**
   * Gets the value of the 'onsetDateTime' field.
   * @return The value of the 'onsetDateTime' field.
   */
  public java.lang.Integer getOnsetDateTime() {
    return onsetDateTime;
  }


  /**
   * Sets the value of the 'onsetDateTime' field.
   * @param value the value to set.
   */
  public void setOnsetDateTime(java.lang.Integer value) {
    this.onsetDateTime = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'abatementDateTime' field.
   * @return The value of the 'abatementDateTime' field.
   */
  public io.carrera.fhir.avro.models.DateTime getAbatementDateTime() {
    return abatementDateTime;
  }


  /**
   * Sets the value of the 'abatementDateTime' field.
   * @param value the value to set.
   */
  public void setAbatementDateTime(io.carrera.fhir.avro.models.DateTime value) {
    this.abatementDateTime = value;
  }

  /**
   * Creates a new Condition RecordBuilder.
   * @return A new Condition RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Condition.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Condition.Builder();
  }

  /**
   * Creates a new Condition RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Condition RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Condition.Builder newBuilder(io.carrera.fhir.avro.models.Condition.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Condition.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Condition.Builder(other);
    }
  }

  /**
   * Creates a new Condition RecordBuilder by copying an existing Condition instance.
   * @param other The existing instance to copy.
   * @return A new Condition RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Condition.Builder newBuilder(io.carrera.fhir.avro.models.Condition other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Condition.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Condition.Builder(other);
    }
  }

  /**
   * RecordBuilder for Condition instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Condition>
    implements org.apache.avro.data.RecordBuilder<Condition> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private io.carrera.fhir.avro.models.CodeableConcept clinicalStatus;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder clinicalStatusBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept verificationStatus;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder verificationStatusBuilder;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Condition_Stage> stage;
    private java.lang.Integer onsetDateTime;
    private io.carrera.fhir.avro.models.CodeableConcept code;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder codeBuilder;
    private io.carrera.fhir.avro.models.DateTime abatementDateTime;
    private io.carrera.fhir.avro.models.DateTime.Builder abatementDateTimeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Condition.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.clinicalStatus)) {
        this.clinicalStatus = data().deepCopy(fields()[2].schema(), other.clinicalStatus);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasClinicalStatusBuilder()) {
        this.clinicalStatusBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getClinicalStatusBuilder());
      }
      if (isValidValue(fields()[3], other.verificationStatus)) {
        this.verificationStatus = data().deepCopy(fields()[3].schema(), other.verificationStatus);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasVerificationStatusBuilder()) {
        this.verificationStatusBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getVerificationStatusBuilder());
      }
      if (isValidValue(fields()[4], other.subject)) {
        this.subject = data().deepCopy(fields()[4].schema(), other.subject);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
      if (isValidValue(fields()[5], other.stage)) {
        this.stage = data().deepCopy(fields()[5].schema(), other.stage);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.onsetDateTime)) {
        this.onsetDateTime = data().deepCopy(fields()[6].schema(), other.onsetDateTime);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.code)) {
        this.code = data().deepCopy(fields()[7].schema(), other.code);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasCodeBuilder()) {
        this.codeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCodeBuilder());
      }
      if (isValidValue(fields()[8], other.abatementDateTime)) {
        this.abatementDateTime = data().deepCopy(fields()[8].schema(), other.abatementDateTime);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasAbatementDateTimeBuilder()) {
        this.abatementDateTimeBuilder = io.carrera.fhir.avro.models.DateTime.newBuilder(other.getAbatementDateTimeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Condition instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Condition other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.clinicalStatus)) {
        this.clinicalStatus = data().deepCopy(fields()[2].schema(), other.clinicalStatus);
        fieldSetFlags()[2] = true;
      }
      this.clinicalStatusBuilder = null;
      if (isValidValue(fields()[3], other.verificationStatus)) {
        this.verificationStatus = data().deepCopy(fields()[3].schema(), other.verificationStatus);
        fieldSetFlags()[3] = true;
      }
      this.verificationStatusBuilder = null;
      if (isValidValue(fields()[4], other.subject)) {
        this.subject = data().deepCopy(fields()[4].schema(), other.subject);
        fieldSetFlags()[4] = true;
      }
      this.subjectBuilder = null;
      if (isValidValue(fields()[5], other.stage)) {
        this.stage = data().deepCopy(fields()[5].schema(), other.stage);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.onsetDateTime)) {
        this.onsetDateTime = data().deepCopy(fields()[6].schema(), other.onsetDateTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.code)) {
        this.code = data().deepCopy(fields()[7].schema(), other.code);
        fieldSetFlags()[7] = true;
      }
      this.codeBuilder = null;
      if (isValidValue(fields()[8], other.abatementDateTime)) {
        this.abatementDateTime = data().deepCopy(fields()[8].schema(), other.abatementDateTime);
        fieldSetFlags()[8] = true;
      }
      this.abatementDateTimeBuilder = null;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'clinicalStatus' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getClinicalStatus() {
      return clinicalStatus;
    }


    /**
      * Sets the value of the 'clinicalStatus' field.
      * @param value The value of 'clinicalStatus'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setClinicalStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[2], value);
      this.clinicalStatusBuilder = null;
      this.clinicalStatus = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'clinicalStatus' field has been set.
      * @return True if the 'clinicalStatus' field has been set, false otherwise.
      */
    public boolean hasClinicalStatus() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'clinicalStatus' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getClinicalStatusBuilder() {
      if (clinicalStatusBuilder == null) {
        if (hasClinicalStatus()) {
          setClinicalStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(clinicalStatus));
        } else {
          setClinicalStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return clinicalStatusBuilder;
    }

    /**
     * Sets the Builder instance for the 'clinicalStatus' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Condition.Builder setClinicalStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearClinicalStatus();
      clinicalStatusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'clinicalStatus' field has an active Builder instance
     * @return True if the 'clinicalStatus' field has an active Builder instance
     */
    public boolean hasClinicalStatusBuilder() {
      return clinicalStatusBuilder != null;
    }

    /**
      * Clears the value of the 'clinicalStatus' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearClinicalStatus() {
      clinicalStatus = null;
      clinicalStatusBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'verificationStatus' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getVerificationStatus() {
      return verificationStatus;
    }


    /**
      * Sets the value of the 'verificationStatus' field.
      * @param value The value of 'verificationStatus'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setVerificationStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[3], value);
      this.verificationStatusBuilder = null;
      this.verificationStatus = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'verificationStatus' field has been set.
      * @return True if the 'verificationStatus' field has been set, false otherwise.
      */
    public boolean hasVerificationStatus() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'verificationStatus' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getVerificationStatusBuilder() {
      if (verificationStatusBuilder == null) {
        if (hasVerificationStatus()) {
          setVerificationStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(verificationStatus));
        } else {
          setVerificationStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return verificationStatusBuilder;
    }

    /**
     * Sets the Builder instance for the 'verificationStatus' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Condition.Builder setVerificationStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearVerificationStatus();
      verificationStatusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'verificationStatus' field has an active Builder instance
     * @return True if the 'verificationStatus' field has an active Builder instance
     */
    public boolean hasVerificationStatusBuilder() {
      return verificationStatusBuilder != null;
    }

    /**
      * Clears the value of the 'verificationStatus' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearVerificationStatus() {
      verificationStatus = null;
      verificationStatusBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[4], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Condition.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'stage' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Condition_Stage> getStage() {
      return stage;
    }


    /**
      * Sets the value of the 'stage' field.
      * @param value The value of 'stage'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setStage(java.util.List<io.carrera.fhir.avro.models.Condition_Stage> value) {
      validate(fields()[5], value);
      this.stage = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'stage' field has been set.
      * @return True if the 'stage' field has been set, false otherwise.
      */
    public boolean hasStage() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'stage' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearStage() {
      stage = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'onsetDateTime' field.
      * @return The value.
      */
    public java.lang.Integer getOnsetDateTime() {
      return onsetDateTime;
    }


    /**
      * Sets the value of the 'onsetDateTime' field.
      * @param value The value of 'onsetDateTime'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setOnsetDateTime(java.lang.Integer value) {
      validate(fields()[6], value);
      this.onsetDateTime = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'onsetDateTime' field has been set.
      * @return True if the 'onsetDateTime' field has been set, false otherwise.
      */
    public boolean hasOnsetDateTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'onsetDateTime' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearOnsetDateTime() {
      onsetDateTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[7], value);
      this.codeBuilder = null;
      this.code = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'code' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCodeBuilder() {
      if (codeBuilder == null) {
        if (hasCode()) {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(code));
        } else {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return codeBuilder;
    }

    /**
     * Sets the Builder instance for the 'code' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Condition.Builder setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCode();
      codeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'code' field has an active Builder instance
     * @return True if the 'code' field has an active Builder instance
     */
    public boolean hasCodeBuilder() {
      return codeBuilder != null;
    }

    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearCode() {
      code = null;
      codeBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'abatementDateTime' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.DateTime getAbatementDateTime() {
      return abatementDateTime;
    }


    /**
      * Sets the value of the 'abatementDateTime' field.
      * @param value The value of 'abatementDateTime'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder setAbatementDateTime(io.carrera.fhir.avro.models.DateTime value) {
      validate(fields()[8], value);
      this.abatementDateTimeBuilder = null;
      this.abatementDateTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'abatementDateTime' field has been set.
      * @return True if the 'abatementDateTime' field has been set, false otherwise.
      */
    public boolean hasAbatementDateTime() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'abatementDateTime' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.DateTime.Builder getAbatementDateTimeBuilder() {
      if (abatementDateTimeBuilder == null) {
        if (hasAbatementDateTime()) {
          setAbatementDateTimeBuilder(io.carrera.fhir.avro.models.DateTime.newBuilder(abatementDateTime));
        } else {
          setAbatementDateTimeBuilder(io.carrera.fhir.avro.models.DateTime.newBuilder());
        }
      }
      return abatementDateTimeBuilder;
    }

    /**
     * Sets the Builder instance for the 'abatementDateTime' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Condition.Builder setAbatementDateTimeBuilder(io.carrera.fhir.avro.models.DateTime.Builder value) {
      clearAbatementDateTime();
      abatementDateTimeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'abatementDateTime' field has an active Builder instance
     * @return True if the 'abatementDateTime' field has an active Builder instance
     */
    public boolean hasAbatementDateTimeBuilder() {
      return abatementDateTimeBuilder != null;
    }

    /**
      * Clears the value of the 'abatementDateTime' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Condition.Builder clearAbatementDateTime() {
      abatementDateTime = null;
      abatementDateTimeBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Condition build() {
      try {
        Condition record = new Condition();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (clinicalStatusBuilder != null) {
          try {
            record.clinicalStatus = this.clinicalStatusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("clinicalStatus"));
            throw e;
          }
        } else {
          record.clinicalStatus = fieldSetFlags()[2] ? this.clinicalStatus : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[2]);
        }
        if (verificationStatusBuilder != null) {
          try {
            record.verificationStatus = this.verificationStatusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("verificationStatus"));
            throw e;
          }
        } else {
          record.verificationStatus = fieldSetFlags()[3] ? this.verificationStatus : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[3]);
        }
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[4] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[4]);
        }
        record.stage = fieldSetFlags()[5] ? this.stage : (java.util.List<io.carrera.fhir.avro.models.Condition_Stage>) defaultValue(fields()[5]);
        record.onsetDateTime = fieldSetFlags()[6] ? this.onsetDateTime : (java.lang.Integer) defaultValue(fields()[6]);
        if (codeBuilder != null) {
          try {
            record.code = this.codeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("code"));
            throw e;
          }
        } else {
          record.code = fieldSetFlags()[7] ? this.code : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[7]);
        }
        if (abatementDateTimeBuilder != null) {
          try {
            record.abatementDateTime = this.abatementDateTimeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("abatementDateTime"));
            throw e;
          }
        } else {
          record.abatementDateTime = fieldSetFlags()[8] ? this.abatementDateTime : (io.carrera.fhir.avro.models.DateTime) defaultValue(fields()[8]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Condition>
    WRITER$ = (org.apache.avro.io.DatumWriter<Condition>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Condition>
    READER$ = (org.apache.avro.io.DatumReader<Condition>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










