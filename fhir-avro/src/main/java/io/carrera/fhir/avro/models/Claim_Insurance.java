/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Claim_Insurance extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4142556071810486266L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Claim_Insurance\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifier_record\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"sequence\",\"type\":\"int\"},{\"name\":\"focal\",\"type\":\"boolean\"},{\"name\":\"coverage\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Claim_Insurance> ENCODER =
      new BinaryMessageEncoder<Claim_Insurance>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Claim_Insurance> DECODER =
      new BinaryMessageDecoder<Claim_Insurance>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Claim_Insurance> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Claim_Insurance> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Claim_Insurance> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Claim_Insurance>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Claim_Insurance to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Claim_Insurance from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Claim_Insurance instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Claim_Insurance fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private io.carrera.fhir.avro.models.identifier_record identifier;
   private int sequence;
   private boolean focal;
   private io.carrera.fhir.avro.models.Reference coverage;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Claim_Insurance() {}

  /**
   * All-args constructor.
   * @param identifier The new value for identifier
   * @param sequence The new value for sequence
   * @param focal The new value for focal
   * @param coverage The new value for coverage
   */
  public Claim_Insurance(io.carrera.fhir.avro.models.identifier_record identifier, java.lang.Integer sequence, java.lang.Boolean focal, io.carrera.fhir.avro.models.Reference coverage) {
    this.identifier = identifier;
    this.sequence = sequence;
    this.focal = focal;
    this.coverage = coverage;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identifier;
    case 1: return sequence;
    case 2: return focal;
    case 3: return coverage;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identifier = (io.carrera.fhir.avro.models.identifier_record)value$; break;
    case 1: sequence = (java.lang.Integer)value$; break;
    case 2: focal = (java.lang.Boolean)value$; break;
    case 3: coverage = (io.carrera.fhir.avro.models.Reference)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public io.carrera.fhir.avro.models.identifier_record getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(io.carrera.fhir.avro.models.identifier_record value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'sequence' field.
   * @return The value of the 'sequence' field.
   */
  public int getSequence() {
    return sequence;
  }


  /**
   * Sets the value of the 'sequence' field.
   * @param value the value to set.
   */
  public void setSequence(int value) {
    this.sequence = value;
  }

  /**
   * Gets the value of the 'focal' field.
   * @return The value of the 'focal' field.
   */
  public boolean getFocal() {
    return focal;
  }


  /**
   * Sets the value of the 'focal' field.
   * @param value the value to set.
   */
  public void setFocal(boolean value) {
    this.focal = value;
  }

  /**
   * Gets the value of the 'coverage' field.
   * @return The value of the 'coverage' field.
   */
  public io.carrera.fhir.avro.models.Reference getCoverage() {
    return coverage;
  }


  /**
   * Sets the value of the 'coverage' field.
   * @param value the value to set.
   */
  public void setCoverage(io.carrera.fhir.avro.models.Reference value) {
    this.coverage = value;
  }

  /**
   * Creates a new Claim_Insurance RecordBuilder.
   * @return A new Claim_Insurance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Claim_Insurance.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Claim_Insurance.Builder();
  }

  /**
   * Creates a new Claim_Insurance RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Claim_Insurance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Claim_Insurance.Builder newBuilder(io.carrera.fhir.avro.models.Claim_Insurance.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Claim_Insurance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Claim_Insurance.Builder(other);
    }
  }

  /**
   * Creates a new Claim_Insurance RecordBuilder by copying an existing Claim_Insurance instance.
   * @param other The existing instance to copy.
   * @return A new Claim_Insurance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Claim_Insurance.Builder newBuilder(io.carrera.fhir.avro.models.Claim_Insurance other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Claim_Insurance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Claim_Insurance.Builder(other);
    }
  }

  /**
   * RecordBuilder for Claim_Insurance instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Claim_Insurance>
    implements org.apache.avro.data.RecordBuilder<Claim_Insurance> {

    private io.carrera.fhir.avro.models.identifier_record identifier;
    private io.carrera.fhir.avro.models.identifier_record.Builder identifierBuilder;
    private int sequence;
    private boolean focal;
    private io.carrera.fhir.avro.models.Reference coverage;
    private io.carrera.fhir.avro.models.Reference.Builder coverageBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Claim_Insurance.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasIdentifierBuilder()) {
        this.identifierBuilder = io.carrera.fhir.avro.models.identifier_record.newBuilder(other.getIdentifierBuilder());
      }
      if (isValidValue(fields()[1], other.sequence)) {
        this.sequence = data().deepCopy(fields()[1].schema(), other.sequence);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.focal)) {
        this.focal = data().deepCopy(fields()[2].schema(), other.focal);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.coverage)) {
        this.coverage = data().deepCopy(fields()[3].schema(), other.coverage);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasCoverageBuilder()) {
        this.coverageBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getCoverageBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Claim_Insurance instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Claim_Insurance other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      this.identifierBuilder = null;
      if (isValidValue(fields()[1], other.sequence)) {
        this.sequence = data().deepCopy(fields()[1].schema(), other.sequence);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.focal)) {
        this.focal = data().deepCopy(fields()[2].schema(), other.focal);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.coverage)) {
        this.coverage = data().deepCopy(fields()[3].schema(), other.coverage);
        fieldSetFlags()[3] = true;
      }
      this.coverageBuilder = null;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.identifier_record getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder setIdentifier(io.carrera.fhir.avro.models.identifier_record value) {
      validate(fields()[0], value);
      this.identifierBuilder = null;
      this.identifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'identifier' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.identifier_record.Builder getIdentifierBuilder() {
      if (identifierBuilder == null) {
        if (hasIdentifier()) {
          setIdentifierBuilder(io.carrera.fhir.avro.models.identifier_record.newBuilder(identifier));
        } else {
          setIdentifierBuilder(io.carrera.fhir.avro.models.identifier_record.newBuilder());
        }
      }
      return identifierBuilder;
    }

    /**
     * Sets the Builder instance for the 'identifier' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim_Insurance.Builder setIdentifierBuilder(io.carrera.fhir.avro.models.identifier_record.Builder value) {
      clearIdentifier();
      identifierBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'identifier' field has an active Builder instance
     * @return True if the 'identifier' field has an active Builder instance
     */
    public boolean hasIdentifierBuilder() {
      return identifierBuilder != null;
    }

    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder clearIdentifier() {
      identifier = null;
      identifierBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sequence' field.
      * @return The value.
      */
    public int getSequence() {
      return sequence;
    }


    /**
      * Sets the value of the 'sequence' field.
      * @param value The value of 'sequence'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder setSequence(int value) {
      validate(fields()[1], value);
      this.sequence = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sequence' field has been set.
      * @return True if the 'sequence' field has been set, false otherwise.
      */
    public boolean hasSequence() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sequence' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder clearSequence() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'focal' field.
      * @return The value.
      */
    public boolean getFocal() {
      return focal;
    }


    /**
      * Sets the value of the 'focal' field.
      * @param value The value of 'focal'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder setFocal(boolean value) {
      validate(fields()[2], value);
      this.focal = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'focal' field has been set.
      * @return True if the 'focal' field has been set, false otherwise.
      */
    public boolean hasFocal() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'focal' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder clearFocal() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'coverage' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getCoverage() {
      return coverage;
    }


    /**
      * Sets the value of the 'coverage' field.
      * @param value The value of 'coverage'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder setCoverage(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[3], value);
      this.coverageBuilder = null;
      this.coverage = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'coverage' field has been set.
      * @return True if the 'coverage' field has been set, false otherwise.
      */
    public boolean hasCoverage() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'coverage' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getCoverageBuilder() {
      if (coverageBuilder == null) {
        if (hasCoverage()) {
          setCoverageBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(coverage));
        } else {
          setCoverageBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return coverageBuilder;
    }

    /**
     * Sets the Builder instance for the 'coverage' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim_Insurance.Builder setCoverageBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearCoverage();
      coverageBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'coverage' field has an active Builder instance
     * @return True if the 'coverage' field has an active Builder instance
     */
    public boolean hasCoverageBuilder() {
      return coverageBuilder != null;
    }

    /**
      * Clears the value of the 'coverage' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim_Insurance.Builder clearCoverage() {
      coverage = null;
      coverageBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Claim_Insurance build() {
      try {
        Claim_Insurance record = new Claim_Insurance();
        if (identifierBuilder != null) {
          try {
            record.identifier = this.identifierBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("identifier"));
            throw e;
          }
        } else {
          record.identifier = fieldSetFlags()[0] ? this.identifier : (io.carrera.fhir.avro.models.identifier_record) defaultValue(fields()[0]);
        }
        record.sequence = fieldSetFlags()[1] ? this.sequence : (java.lang.Integer) defaultValue(fields()[1]);
        record.focal = fieldSetFlags()[2] ? this.focal : (java.lang.Boolean) defaultValue(fields()[2]);
        if (coverageBuilder != null) {
          try {
            record.coverage = this.coverageBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("coverage"));
            throw e;
          }
        } else {
          record.coverage = fieldSetFlags()[3] ? this.coverage : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[3]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Claim_Insurance>
    WRITER$ = (org.apache.avro.io.DatumWriter<Claim_Insurance>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Claim_Insurance>
    READER$ = (org.apache.avro.io.DatumReader<Claim_Insurance>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.identifier == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.identifier.customEncode(out);
    }

    out.writeInt(this.sequence);

    out.writeBoolean(this.focal);

    this.coverage.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.identifier = null;
      } else {
        if (this.identifier == null) {
          this.identifier = new io.carrera.fhir.avro.models.identifier_record();
        }
        this.identifier.customDecode(in);
      }

      this.sequence = in.readInt();

      this.focal = in.readBoolean();

      if (this.coverage == null) {
        this.coverage = new io.carrera.fhir.avro.models.Reference();
      }
      this.coverage.customDecode(in);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identifier = null;
          } else {
            if (this.identifier == null) {
              this.identifier = new io.carrera.fhir.avro.models.identifier_record();
            }
            this.identifier.customDecode(in);
          }
          break;

        case 1:
          this.sequence = in.readInt();
          break;

        case 2:
          this.focal = in.readBoolean();
          break;

        case 3:
          if (this.coverage == null) {
            this.coverage = new io.carrera.fhir.avro.models.Reference();
          }
          this.coverage.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










