/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MedicationDispense extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3735313972568043721L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicationDispense\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"identifier_record\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"medication\",\"type\":[\"CodeableConcept\",{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}]},{\"name\":\"code\",\"type\":[\"CodeableConcept\",\"Reference\"]},{\"name\":\"subject\",\"type\":[\"null\",\"Reference\"]},{\"name\":\"context\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"quantity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Decimal\",\"fields\":[{\"name\":\"unscaled_value\",\"type\":\"bytes\",\"logicalType\":\"decimal\"},{\"name\":\"precision\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}]}],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comparator\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"whenPrepared\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"record\",\"name\":\"XsDateTime\",\"fields\":[{\"name\":\"millis\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"XsDate\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"type\":\"record\",\"name\":\"XsYearMonth\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"}]},{\"type\":\"record\",\"name\":\"XsYear\",\"fields\":[{\"name\":\"value\",\"type\":\"int\"}]}]}]}],\"default\":null},{\"name\":\"daysSupply\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"whenHandedOver\",\"type\":[\"null\",\"DateTime\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<MedicationDispense> ENCODER =
      new BinaryMessageEncoder<MedicationDispense>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicationDispense> DECODER =
      new BinaryMessageDecoder<MedicationDispense>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MedicationDispense> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MedicationDispense> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MedicationDispense> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicationDispense>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MedicationDispense to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MedicationDispense from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MedicationDispense instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MedicationDispense fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
   private java.lang.CharSequence status;
   private io.carrera.fhir.avro.models.CodeableConcept category;
   private java.lang.Object medication;
   private java.lang.Object code;
   private io.carrera.fhir.avro.models.Reference subject;
   private io.carrera.fhir.avro.models.Reference context;
   private io.carrera.fhir.avro.models.CodeableConcept type;
   private io.carrera.fhir.avro.models.Quantity quantity;
   private io.carrera.fhir.avro.models.DateTime whenPrepared;
   private io.carrera.fhir.avro.models.Quantity daysSupply;
   private io.carrera.fhir.avro.models.DateTime whenHandedOver;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicationDispense() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param identifier The new value for identifier
   * @param status The new value for status
   * @param category The new value for category
   * @param medication The new value for medication
   * @param code The new value for code
   * @param subject The new value for subject
   * @param context The new value for context
   * @param type The new value for type
   * @param quantity The new value for quantity
   * @param whenPrepared The new value for whenPrepared
   * @param daysSupply The new value for daysSupply
   * @param whenHandedOver The new value for whenHandedOver
   */
  public MedicationDispense(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier, java.lang.CharSequence status, io.carrera.fhir.avro.models.CodeableConcept category, java.lang.Object medication, java.lang.Object code, io.carrera.fhir.avro.models.Reference subject, io.carrera.fhir.avro.models.Reference context, io.carrera.fhir.avro.models.CodeableConcept type, io.carrera.fhir.avro.models.Quantity quantity, io.carrera.fhir.avro.models.DateTime whenPrepared, io.carrera.fhir.avro.models.Quantity daysSupply, io.carrera.fhir.avro.models.DateTime whenHandedOver) {
    this.resourceType = resourceType;
    this.id = id;
    this.identifier = identifier;
    this.status = status;
    this.category = category;
    this.medication = medication;
    this.code = code;
    this.subject = subject;
    this.context = context;
    this.type = type;
    this.quantity = quantity;
    this.whenPrepared = whenPrepared;
    this.daysSupply = daysSupply;
    this.whenHandedOver = whenHandedOver;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return identifier;
    case 3: return status;
    case 4: return category;
    case 5: return medication;
    case 6: return code;
    case 7: return subject;
    case 8: return context;
    case 9: return type;
    case 10: return quantity;
    case 11: return whenPrepared;
    case 12: return daysSupply;
    case 13: return whenHandedOver;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: identifier = (java.util.List<io.carrera.fhir.avro.models.identifier_record>)value$; break;
    case 3: status = (java.lang.CharSequence)value$; break;
    case 4: category = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: medication = value$; break;
    case 6: code = value$; break;
    case 7: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 8: context = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 9: type = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 10: quantity = (io.carrera.fhir.avro.models.Quantity)value$; break;
    case 11: whenPrepared = (io.carrera.fhir.avro.models.DateTime)value$; break;
    case 12: daysSupply = (io.carrera.fhir.avro.models.Quantity)value$; break;
    case 13: whenHandedOver = (io.carrera.fhir.avro.models.DateTime)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'medication' field.
   * @return The value of the 'medication' field.
   */
  public java.lang.Object getMedication() {
    return medication;
  }


  /**
   * Sets the value of the 'medication' field.
   * @param value the value to set.
   */
  public void setMedication(java.lang.Object value) {
    this.medication = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.Object getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.Object value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'context' field.
   * @return The value of the 'context' field.
   */
  public io.carrera.fhir.avro.models.Reference getContext() {
    return context;
  }


  /**
   * Sets the value of the 'context' field.
   * @param value the value to set.
   */
  public void setContext(io.carrera.fhir.avro.models.Reference value) {
    this.context = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public io.carrera.fhir.avro.models.Quantity getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(io.carrera.fhir.avro.models.Quantity value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'whenPrepared' field.
   * @return The value of the 'whenPrepared' field.
   */
  public io.carrera.fhir.avro.models.DateTime getWhenPrepared() {
    return whenPrepared;
  }


  /**
   * Sets the value of the 'whenPrepared' field.
   * @param value the value to set.
   */
  public void setWhenPrepared(io.carrera.fhir.avro.models.DateTime value) {
    this.whenPrepared = value;
  }

  /**
   * Gets the value of the 'daysSupply' field.
   * @return The value of the 'daysSupply' field.
   */
  public io.carrera.fhir.avro.models.Quantity getDaysSupply() {
    return daysSupply;
  }


  /**
   * Sets the value of the 'daysSupply' field.
   * @param value the value to set.
   */
  public void setDaysSupply(io.carrera.fhir.avro.models.Quantity value) {
    this.daysSupply = value;
  }

  /**
   * Gets the value of the 'whenHandedOver' field.
   * @return The value of the 'whenHandedOver' field.
   */
  public io.carrera.fhir.avro.models.DateTime getWhenHandedOver() {
    return whenHandedOver;
  }


  /**
   * Sets the value of the 'whenHandedOver' field.
   * @param value the value to set.
   */
  public void setWhenHandedOver(io.carrera.fhir.avro.models.DateTime value) {
    this.whenHandedOver = value;
  }

  /**
   * Creates a new MedicationDispense RecordBuilder.
   * @return A new MedicationDispense RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationDispense.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.MedicationDispense.Builder();
  }

  /**
   * Creates a new MedicationDispense RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicationDispense RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationDispense.Builder newBuilder(io.carrera.fhir.avro.models.MedicationDispense.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationDispense.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationDispense.Builder(other);
    }
  }

  /**
   * Creates a new MedicationDispense RecordBuilder by copying an existing MedicationDispense instance.
   * @param other The existing instance to copy.
   * @return A new MedicationDispense RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationDispense.Builder newBuilder(io.carrera.fhir.avro.models.MedicationDispense other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationDispense.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationDispense.Builder(other);
    }
  }

  /**
   * RecordBuilder for MedicationDispense instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicationDispense>
    implements org.apache.avro.data.RecordBuilder<MedicationDispense> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
    private java.lang.CharSequence status;
    private io.carrera.fhir.avro.models.CodeableConcept category;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder categoryBuilder;
    private java.lang.Object medication;
    private java.lang.Object code;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;
    private io.carrera.fhir.avro.models.Reference context;
    private io.carrera.fhir.avro.models.Reference.Builder contextBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept type;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder typeBuilder;
    private io.carrera.fhir.avro.models.Quantity quantity;
    private io.carrera.fhir.avro.models.Quantity.Builder quantityBuilder;
    private io.carrera.fhir.avro.models.DateTime whenPrepared;
    private io.carrera.fhir.avro.models.DateTime.Builder whenPreparedBuilder;
    private io.carrera.fhir.avro.models.Quantity daysSupply;
    private io.carrera.fhir.avro.models.Quantity.Builder daysSupplyBuilder;
    private io.carrera.fhir.avro.models.DateTime whenHandedOver;
    private io.carrera.fhir.avro.models.DateTime.Builder whenHandedOverBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationDispense.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.category)) {
        this.category = data().deepCopy(fields()[4].schema(), other.category);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasCategoryBuilder()) {
        this.categoryBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCategoryBuilder());
      }
      if (isValidValue(fields()[5], other.medication)) {
        this.medication = data().deepCopy(fields()[5].schema(), other.medication);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.code)) {
        this.code = data().deepCopy(fields()[6].schema(), other.code);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.subject)) {
        this.subject = data().deepCopy(fields()[7].schema(), other.subject);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
      if (isValidValue(fields()[8], other.context)) {
        this.context = data().deepCopy(fields()[8].schema(), other.context);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasContextBuilder()) {
        this.contextBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getContextBuilder());
      }
      if (isValidValue(fields()[9], other.type)) {
        this.type = data().deepCopy(fields()[9].schema(), other.type);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[10], other.quantity)) {
        this.quantity = data().deepCopy(fields()[10].schema(), other.quantity);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasQuantityBuilder()) {
        this.quantityBuilder = io.carrera.fhir.avro.models.Quantity.newBuilder(other.getQuantityBuilder());
      }
      if (isValidValue(fields()[11], other.whenPrepared)) {
        this.whenPrepared = data().deepCopy(fields()[11].schema(), other.whenPrepared);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasWhenPreparedBuilder()) {
        this.whenPreparedBuilder = io.carrera.fhir.avro.models.DateTime.newBuilder(other.getWhenPreparedBuilder());
      }
      if (isValidValue(fields()[12], other.daysSupply)) {
        this.daysSupply = data().deepCopy(fields()[12].schema(), other.daysSupply);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasDaysSupplyBuilder()) {
        this.daysSupplyBuilder = io.carrera.fhir.avro.models.Quantity.newBuilder(other.getDaysSupplyBuilder());
      }
      if (isValidValue(fields()[13], other.whenHandedOver)) {
        this.whenHandedOver = data().deepCopy(fields()[13].schema(), other.whenHandedOver);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasWhenHandedOverBuilder()) {
        this.whenHandedOverBuilder = io.carrera.fhir.avro.models.DateTime.newBuilder(other.getWhenHandedOverBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MedicationDispense instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationDispense other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.category)) {
        this.category = data().deepCopy(fields()[4].schema(), other.category);
        fieldSetFlags()[4] = true;
      }
      this.categoryBuilder = null;
      if (isValidValue(fields()[5], other.medication)) {
        this.medication = data().deepCopy(fields()[5].schema(), other.medication);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.code)) {
        this.code = data().deepCopy(fields()[6].schema(), other.code);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.subject)) {
        this.subject = data().deepCopy(fields()[7].schema(), other.subject);
        fieldSetFlags()[7] = true;
      }
      this.subjectBuilder = null;
      if (isValidValue(fields()[8], other.context)) {
        this.context = data().deepCopy(fields()[8].schema(), other.context);
        fieldSetFlags()[8] = true;
      }
      this.contextBuilder = null;
      if (isValidValue(fields()[9], other.type)) {
        this.type = data().deepCopy(fields()[9].schema(), other.type);
        fieldSetFlags()[9] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[10], other.quantity)) {
        this.quantity = data().deepCopy(fields()[10].schema(), other.quantity);
        fieldSetFlags()[10] = true;
      }
      this.quantityBuilder = null;
      if (isValidValue(fields()[11], other.whenPrepared)) {
        this.whenPrepared = data().deepCopy(fields()[11].schema(), other.whenPrepared);
        fieldSetFlags()[11] = true;
      }
      this.whenPreparedBuilder = null;
      if (isValidValue(fields()[12], other.daysSupply)) {
        this.daysSupply = data().deepCopy(fields()[12].schema(), other.daysSupply);
        fieldSetFlags()[12] = true;
      }
      this.daysSupplyBuilder = null;
      if (isValidValue(fields()[13], other.whenHandedOver)) {
        this.whenHandedOver = data().deepCopy(fields()[13].schema(), other.whenHandedOver);
        fieldSetFlags()[13] = true;
      }
      this.whenHandedOverBuilder = null;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
      validate(fields()[2], value);
      this.identifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setCategory(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.categoryBuilder = null;
      this.category = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'category' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCategoryBuilder() {
      if (categoryBuilder == null) {
        if (hasCategory()) {
          setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(category));
        } else {
          setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return categoryBuilder;
    }

    /**
     * Sets the Builder instance for the 'category' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCategory();
      categoryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'category' field has an active Builder instance
     * @return True if the 'category' field has an active Builder instance
     */
    public boolean hasCategoryBuilder() {
      return categoryBuilder != null;
    }

    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearCategory() {
      category = null;
      categoryBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'medication' field.
      * @return The value.
      */
    public java.lang.Object getMedication() {
      return medication;
    }


    /**
      * Sets the value of the 'medication' field.
      * @param value The value of 'medication'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setMedication(java.lang.Object value) {
      validate(fields()[5], value);
      this.medication = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'medication' field has been set.
      * @return True if the 'medication' field has been set, false otherwise.
      */
    public boolean hasMedication() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'medication' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearMedication() {
      medication = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.Object getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setCode(java.lang.Object value) {
      validate(fields()[6], value);
      this.code = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearCode() {
      code = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[7], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'context' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getContext() {
      return context;
    }


    /**
      * Sets the value of the 'context' field.
      * @param value The value of 'context'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setContext(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[8], value);
      this.contextBuilder = null;
      this.context = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'context' field has been set.
      * @return True if the 'context' field has been set, false otherwise.
      */
    public boolean hasContext() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'context' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getContextBuilder() {
      if (contextBuilder == null) {
        if (hasContext()) {
          setContextBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(context));
        } else {
          setContextBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return contextBuilder;
    }

    /**
     * Sets the Builder instance for the 'context' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setContextBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearContext();
      contextBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'context' field has an active Builder instance
     * @return True if the 'context' field has an active Builder instance
     */
    public boolean hasContextBuilder() {
      return contextBuilder != null;
    }

    /**
      * Clears the value of the 'context' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearContext() {
      context = null;
      contextBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setType(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[9], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(type));
        } else {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Quantity getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setQuantity(io.carrera.fhir.avro.models.Quantity value) {
      validate(fields()[10], value);
      this.quantityBuilder = null;
      this.quantity = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'quantity' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Quantity.Builder getQuantityBuilder() {
      if (quantityBuilder == null) {
        if (hasQuantity()) {
          setQuantityBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder(quantity));
        } else {
          setQuantityBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder());
        }
      }
      return quantityBuilder;
    }

    /**
     * Sets the Builder instance for the 'quantity' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setQuantityBuilder(io.carrera.fhir.avro.models.Quantity.Builder value) {
      clearQuantity();
      quantityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'quantity' field has an active Builder instance
     * @return True if the 'quantity' field has an active Builder instance
     */
    public boolean hasQuantityBuilder() {
      return quantityBuilder != null;
    }

    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearQuantity() {
      quantity = null;
      quantityBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'whenPrepared' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.DateTime getWhenPrepared() {
      return whenPrepared;
    }


    /**
      * Sets the value of the 'whenPrepared' field.
      * @param value The value of 'whenPrepared'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setWhenPrepared(io.carrera.fhir.avro.models.DateTime value) {
      validate(fields()[11], value);
      this.whenPreparedBuilder = null;
      this.whenPrepared = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'whenPrepared' field has been set.
      * @return True if the 'whenPrepared' field has been set, false otherwise.
      */
    public boolean hasWhenPrepared() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'whenPrepared' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.DateTime.Builder getWhenPreparedBuilder() {
      if (whenPreparedBuilder == null) {
        if (hasWhenPrepared()) {
          setWhenPreparedBuilder(io.carrera.fhir.avro.models.DateTime.newBuilder(whenPrepared));
        } else {
          setWhenPreparedBuilder(io.carrera.fhir.avro.models.DateTime.newBuilder());
        }
      }
      return whenPreparedBuilder;
    }

    /**
     * Sets the Builder instance for the 'whenPrepared' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setWhenPreparedBuilder(io.carrera.fhir.avro.models.DateTime.Builder value) {
      clearWhenPrepared();
      whenPreparedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'whenPrepared' field has an active Builder instance
     * @return True if the 'whenPrepared' field has an active Builder instance
     */
    public boolean hasWhenPreparedBuilder() {
      return whenPreparedBuilder != null;
    }

    /**
      * Clears the value of the 'whenPrepared' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearWhenPrepared() {
      whenPrepared = null;
      whenPreparedBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'daysSupply' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Quantity getDaysSupply() {
      return daysSupply;
    }


    /**
      * Sets the value of the 'daysSupply' field.
      * @param value The value of 'daysSupply'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setDaysSupply(io.carrera.fhir.avro.models.Quantity value) {
      validate(fields()[12], value);
      this.daysSupplyBuilder = null;
      this.daysSupply = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'daysSupply' field has been set.
      * @return True if the 'daysSupply' field has been set, false otherwise.
      */
    public boolean hasDaysSupply() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'daysSupply' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Quantity.Builder getDaysSupplyBuilder() {
      if (daysSupplyBuilder == null) {
        if (hasDaysSupply()) {
          setDaysSupplyBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder(daysSupply));
        } else {
          setDaysSupplyBuilder(io.carrera.fhir.avro.models.Quantity.newBuilder());
        }
      }
      return daysSupplyBuilder;
    }

    /**
     * Sets the Builder instance for the 'daysSupply' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setDaysSupplyBuilder(io.carrera.fhir.avro.models.Quantity.Builder value) {
      clearDaysSupply();
      daysSupplyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'daysSupply' field has an active Builder instance
     * @return True if the 'daysSupply' field has an active Builder instance
     */
    public boolean hasDaysSupplyBuilder() {
      return daysSupplyBuilder != null;
    }

    /**
      * Clears the value of the 'daysSupply' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearDaysSupply() {
      daysSupply = null;
      daysSupplyBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'whenHandedOver' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.DateTime getWhenHandedOver() {
      return whenHandedOver;
    }


    /**
      * Sets the value of the 'whenHandedOver' field.
      * @param value The value of 'whenHandedOver'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder setWhenHandedOver(io.carrera.fhir.avro.models.DateTime value) {
      validate(fields()[13], value);
      this.whenHandedOverBuilder = null;
      this.whenHandedOver = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'whenHandedOver' field has been set.
      * @return True if the 'whenHandedOver' field has been set, false otherwise.
      */
    public boolean hasWhenHandedOver() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'whenHandedOver' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.DateTime.Builder getWhenHandedOverBuilder() {
      if (whenHandedOverBuilder == null) {
        if (hasWhenHandedOver()) {
          setWhenHandedOverBuilder(io.carrera.fhir.avro.models.DateTime.newBuilder(whenHandedOver));
        } else {
          setWhenHandedOverBuilder(io.carrera.fhir.avro.models.DateTime.newBuilder());
        }
      }
      return whenHandedOverBuilder;
    }

    /**
     * Sets the Builder instance for the 'whenHandedOver' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationDispense.Builder setWhenHandedOverBuilder(io.carrera.fhir.avro.models.DateTime.Builder value) {
      clearWhenHandedOver();
      whenHandedOverBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'whenHandedOver' field has an active Builder instance
     * @return True if the 'whenHandedOver' field has an active Builder instance
     */
    public boolean hasWhenHandedOverBuilder() {
      return whenHandedOverBuilder != null;
    }

    /**
      * Clears the value of the 'whenHandedOver' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationDispense.Builder clearWhenHandedOver() {
      whenHandedOver = null;
      whenHandedOverBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicationDispense build() {
      try {
        MedicationDispense record = new MedicationDispense();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.identifier = fieldSetFlags()[2] ? this.identifier : (java.util.List<io.carrera.fhir.avro.models.identifier_record>) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (categoryBuilder != null) {
          try {
            record.category = this.categoryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("category"));
            throw e;
          }
        } else {
          record.category = fieldSetFlags()[4] ? this.category : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        record.medication = fieldSetFlags()[5] ? this.medication :  defaultValue(fields()[5]);
        record.code = fieldSetFlags()[6] ? this.code :  defaultValue(fields()[6]);
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[7] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[7]);
        }
        if (contextBuilder != null) {
          try {
            record.context = this.contextBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("context"));
            throw e;
          }
        } else {
          record.context = fieldSetFlags()[8] ? this.context : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[8]);
        }
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[9] ? this.type : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[9]);
        }
        if (quantityBuilder != null) {
          try {
            record.quantity = this.quantityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("quantity"));
            throw e;
          }
        } else {
          record.quantity = fieldSetFlags()[10] ? this.quantity : (io.carrera.fhir.avro.models.Quantity) defaultValue(fields()[10]);
        }
        if (whenPreparedBuilder != null) {
          try {
            record.whenPrepared = this.whenPreparedBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("whenPrepared"));
            throw e;
          }
        } else {
          record.whenPrepared = fieldSetFlags()[11] ? this.whenPrepared : (io.carrera.fhir.avro.models.DateTime) defaultValue(fields()[11]);
        }
        if (daysSupplyBuilder != null) {
          try {
            record.daysSupply = this.daysSupplyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("daysSupply"));
            throw e;
          }
        } else {
          record.daysSupply = fieldSetFlags()[12] ? this.daysSupply : (io.carrera.fhir.avro.models.Quantity) defaultValue(fields()[12]);
        }
        if (whenHandedOverBuilder != null) {
          try {
            record.whenHandedOver = this.whenHandedOverBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("whenHandedOver"));
            throw e;
          }
        } else {
          record.whenHandedOver = fieldSetFlags()[13] ? this.whenHandedOver : (io.carrera.fhir.avro.models.DateTime) defaultValue(fields()[13]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicationDispense>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicationDispense>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicationDispense>
    READER$ = (org.apache.avro.io.DatumReader<MedicationDispense>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










