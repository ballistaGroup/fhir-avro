/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Procedure extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9222230311389575726L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Procedure\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"implicitRules\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"language\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Extension\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Extension\"}],\"default\":null},{\"name\":\"url\",\"type\":[\"null\",\"string\"]},{\"name\":\"value\",\"type\":[\"null\",\"string\",\"int\",\"boolean\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"unit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"comparator\",\"type\":[\"null\",\"string\"],\"default\":null}]},{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"modifierExtension\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Extension\"}],\"default\":null},{\"name\":\"instantiatesCanonical\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"instantiatesUri\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"basedOn\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"partOf\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"string\"]},{\"name\":\"statusReason\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Coding\"}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"subject\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"encounter\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"performedDateTime\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}],\"default\":null},{\"name\":\"performedPeriod\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}],\"default\":null}]}],\"default\":null},{\"name\":\"performedString\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"performedRange\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Range\",\"fields\":[{\"name\":\"low\",\"type\":[\"null\",\"Quantity\"],\"default\":null},{\"name\":\"high\",\"type\":[\"null\",\"Quantity\"],\"default\":null}]}],\"default\":null},{\"name\":\"recorder\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"asserter\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"reasonCode\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"reasonReference\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"bodySite\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"outcome\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"report\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"complication\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"complicationDetail\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"followUp\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"usedReference\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"usedCode\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMicrosConversion());
  }

  private static final BinaryMessageEncoder<Procedure> ENCODER =
      new BinaryMessageEncoder<Procedure>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Procedure> DECODER =
      new BinaryMessageDecoder<Procedure>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Procedure> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Procedure> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Procedure> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Procedure>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Procedure to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Procedure from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Procedure instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Procedure fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.lang.CharSequence implicitRules;
   private java.lang.CharSequence language;
   private java.util.List<io.carrera.fhir.avro.models.Extension> extension;
   private java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension;
   private java.util.List<java.lang.CharSequence> instantiatesCanonical;
   private java.util.List<java.lang.CharSequence> instantiatesUri;
   private java.util.List<io.carrera.fhir.avro.models.Reference> basedOn;
   private java.util.List<io.carrera.fhir.avro.models.Reference> partOf;
   private java.lang.Object status;
   private io.carrera.fhir.avro.models.CodeableConcept statusReason;
   private io.carrera.fhir.avro.models.CodeableConcept category;
   private io.carrera.fhir.avro.models.CodeableConcept code;
   private io.carrera.fhir.avro.models.Reference subject;
   private io.carrera.fhir.avro.models.Reference encounter;
   private java.lang.Object performedDateTime;
   private io.carrera.fhir.avro.models.Period performedPeriod;
   private java.lang.CharSequence performedString;
   private io.carrera.fhir.avro.models.Range performedRange;
   private io.carrera.fhir.avro.models.Reference recorder;
   private io.carrera.fhir.avro.models.Reference asserter;
   private io.carrera.fhir.avro.models.Reference location;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode;
   private java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> bodySite;
   private io.carrera.fhir.avro.models.CodeableConcept outcome;
   private java.util.List<io.carrera.fhir.avro.models.Reference> report;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> complication;
   private java.util.List<io.carrera.fhir.avro.models.Reference> complicationDetail;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> followUp;
   private java.util.List<io.carrera.fhir.avro.models.Reference> usedReference;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> usedCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Procedure() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param implicitRules The new value for implicitRules
   * @param language The new value for language
   * @param extension The new value for extension
   * @param modifierExtension The new value for modifierExtension
   * @param instantiatesCanonical The new value for instantiatesCanonical
   * @param instantiatesUri The new value for instantiatesUri
   * @param basedOn The new value for basedOn
   * @param partOf The new value for partOf
   * @param status The new value for status
   * @param statusReason The new value for statusReason
   * @param category The new value for category
   * @param code The new value for code
   * @param subject The new value for subject
   * @param encounter The new value for encounter
   * @param performedDateTime The new value for performedDateTime
   * @param performedPeriod The new value for performedPeriod
   * @param performedString The new value for performedString
   * @param performedRange The new value for performedRange
   * @param recorder The new value for recorder
   * @param asserter The new value for asserter
   * @param location The new value for location
   * @param reasonCode The new value for reasonCode
   * @param reasonReference The new value for reasonReference
   * @param bodySite The new value for bodySite
   * @param outcome The new value for outcome
   * @param report The new value for report
   * @param complication The new value for complication
   * @param complicationDetail The new value for complicationDetail
   * @param followUp The new value for followUp
   * @param usedReference The new value for usedReference
   * @param usedCode The new value for usedCode
   */
  public Procedure(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.lang.CharSequence implicitRules, java.lang.CharSequence language, java.util.List<io.carrera.fhir.avro.models.Extension> extension, java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension, java.util.List<java.lang.CharSequence> instantiatesCanonical, java.util.List<java.lang.CharSequence> instantiatesUri, java.util.List<io.carrera.fhir.avro.models.Reference> basedOn, java.util.List<io.carrera.fhir.avro.models.Reference> partOf, java.lang.Object status, io.carrera.fhir.avro.models.CodeableConcept statusReason, io.carrera.fhir.avro.models.CodeableConcept category, io.carrera.fhir.avro.models.CodeableConcept code, io.carrera.fhir.avro.models.Reference subject, io.carrera.fhir.avro.models.Reference encounter, java.lang.Object performedDateTime, io.carrera.fhir.avro.models.Period performedPeriod, java.lang.CharSequence performedString, io.carrera.fhir.avro.models.Range performedRange, io.carrera.fhir.avro.models.Reference recorder, io.carrera.fhir.avro.models.Reference asserter, io.carrera.fhir.avro.models.Reference location, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode, java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> bodySite, io.carrera.fhir.avro.models.CodeableConcept outcome, java.util.List<io.carrera.fhir.avro.models.Reference> report, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> complication, java.util.List<io.carrera.fhir.avro.models.Reference> complicationDetail, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> followUp, java.util.List<io.carrera.fhir.avro.models.Reference> usedReference, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> usedCode) {
    this.resourceType = resourceType;
    this.id = id;
    this.implicitRules = implicitRules;
    this.language = language;
    this.extension = extension;
    this.modifierExtension = modifierExtension;
    this.instantiatesCanonical = instantiatesCanonical;
    this.instantiatesUri = instantiatesUri;
    this.basedOn = basedOn;
    this.partOf = partOf;
    this.status = status;
    this.statusReason = statusReason;
    this.category = category;
    this.code = code;
    this.subject = subject;
    this.encounter = encounter;
    this.performedDateTime = performedDateTime;
    this.performedPeriod = performedPeriod;
    this.performedString = performedString;
    this.performedRange = performedRange;
    this.recorder = recorder;
    this.asserter = asserter;
    this.location = location;
    this.reasonCode = reasonCode;
    this.reasonReference = reasonReference;
    this.bodySite = bodySite;
    this.outcome = outcome;
    this.report = report;
    this.complication = complication;
    this.complicationDetail = complicationDetail;
    this.followUp = followUp;
    this.usedReference = usedReference;
    this.usedCode = usedCode;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return implicitRules;
    case 3: return language;
    case 4: return extension;
    case 5: return modifierExtension;
    case 6: return instantiatesCanonical;
    case 7: return instantiatesUri;
    case 8: return basedOn;
    case 9: return partOf;
    case 10: return status;
    case 11: return statusReason;
    case 12: return category;
    case 13: return code;
    case 14: return subject;
    case 15: return encounter;
    case 16: return performedDateTime;
    case 17: return performedPeriod;
    case 18: return performedString;
    case 19: return performedRange;
    case 20: return recorder;
    case 21: return asserter;
    case 22: return location;
    case 23: return reasonCode;
    case 24: return reasonReference;
    case 25: return bodySite;
    case 26: return outcome;
    case 27: return report;
    case 28: return complication;
    case 29: return complicationDetail;
    case 30: return followUp;
    case 31: return usedReference;
    case 32: return usedCode;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: implicitRules = (java.lang.CharSequence)value$; break;
    case 3: language = (java.lang.CharSequence)value$; break;
    case 4: extension = (java.util.List<io.carrera.fhir.avro.models.Extension>)value$; break;
    case 5: modifierExtension = (java.util.List<io.carrera.fhir.avro.models.Extension>)value$; break;
    case 6: instantiatesCanonical = (java.util.List<java.lang.CharSequence>)value$; break;
    case 7: instantiatesUri = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: basedOn = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 9: partOf = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 10: status = value$; break;
    case 11: statusReason = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 12: category = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 13: code = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 14: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 15: encounter = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 16: performedDateTime = value$; break;
    case 17: performedPeriod = (io.carrera.fhir.avro.models.Period)value$; break;
    case 18: performedString = (java.lang.CharSequence)value$; break;
    case 19: performedRange = (io.carrera.fhir.avro.models.Range)value$; break;
    case 20: recorder = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 21: asserter = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 22: location = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 23: reasonCode = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 24: reasonReference = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 25: bodySite = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 26: outcome = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 27: report = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 28: complication = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 29: complicationDetail = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 30: followUp = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 31: usedReference = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 32: usedCode = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'implicitRules' field.
   * @return The value of the 'implicitRules' field.
   */
  public java.lang.CharSequence getImplicitRules() {
    return implicitRules;
  }


  /**
   * Sets the value of the 'implicitRules' field.
   * @param value the value to set.
   */
  public void setImplicitRules(java.lang.CharSequence value) {
    this.implicitRules = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }


  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The value of the 'extension' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Extension> getExtension() {
    return extension;
  }


  /**
   * Sets the value of the 'extension' field.
   * @param value the value to set.
   */
  public void setExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
    this.extension = value;
  }

  /**
   * Gets the value of the 'modifierExtension' field.
   * @return The value of the 'modifierExtension' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Extension> getModifierExtension() {
    return modifierExtension;
  }


  /**
   * Sets the value of the 'modifierExtension' field.
   * @param value the value to set.
   */
  public void setModifierExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
    this.modifierExtension = value;
  }

  /**
   * Gets the value of the 'instantiatesCanonical' field.
   * @return The value of the 'instantiatesCanonical' field.
   */
  public java.util.List<java.lang.CharSequence> getInstantiatesCanonical() {
    return instantiatesCanonical;
  }


  /**
   * Sets the value of the 'instantiatesCanonical' field.
   * @param value the value to set.
   */
  public void setInstantiatesCanonical(java.util.List<java.lang.CharSequence> value) {
    this.instantiatesCanonical = value;
  }

  /**
   * Gets the value of the 'instantiatesUri' field.
   * @return The value of the 'instantiatesUri' field.
   */
  public java.util.List<java.lang.CharSequence> getInstantiatesUri() {
    return instantiatesUri;
  }


  /**
   * Sets the value of the 'instantiatesUri' field.
   * @param value the value to set.
   */
  public void setInstantiatesUri(java.util.List<java.lang.CharSequence> value) {
    this.instantiatesUri = value;
  }

  /**
   * Gets the value of the 'basedOn' field.
   * @return The value of the 'basedOn' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getBasedOn() {
    return basedOn;
  }


  /**
   * Sets the value of the 'basedOn' field.
   * @param value the value to set.
   */
  public void setBasedOn(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.basedOn = value;
  }

  /**
   * Gets the value of the 'partOf' field.
   * @return The value of the 'partOf' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getPartOf() {
    return partOf;
  }


  /**
   * Sets the value of the 'partOf' field.
   * @param value the value to set.
   */
  public void setPartOf(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.partOf = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.Object getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.Object value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'statusReason' field.
   * @return The value of the 'statusReason' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getStatusReason() {
    return statusReason;
  }


  /**
   * Sets the value of the 'statusReason' field.
   * @param value the value to set.
   */
  public void setStatusReason(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.statusReason = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'encounter' field.
   * @return The value of the 'encounter' field.
   */
  public io.carrera.fhir.avro.models.Reference getEncounter() {
    return encounter;
  }


  /**
   * Sets the value of the 'encounter' field.
   * @param value the value to set.
   */
  public void setEncounter(io.carrera.fhir.avro.models.Reference value) {
    this.encounter = value;
  }

  /**
   * Gets the value of the 'performedDateTime' field.
   * @return The value of the 'performedDateTime' field.
   */
  public java.lang.Object getPerformedDateTime() {
    return performedDateTime;
  }


  /**
   * Sets the value of the 'performedDateTime' field.
   * @param value the value to set.
   */
  public void setPerformedDateTime(java.lang.Object value) {
    this.performedDateTime = value;
  }

  /**
   * Gets the value of the 'performedPeriod' field.
   * @return The value of the 'performedPeriod' field.
   */
  public io.carrera.fhir.avro.models.Period getPerformedPeriod() {
    return performedPeriod;
  }


  /**
   * Sets the value of the 'performedPeriod' field.
   * @param value the value to set.
   */
  public void setPerformedPeriod(io.carrera.fhir.avro.models.Period value) {
    this.performedPeriod = value;
  }

  /**
   * Gets the value of the 'performedString' field.
   * @return The value of the 'performedString' field.
   */
  public java.lang.CharSequence getPerformedString() {
    return performedString;
  }


  /**
   * Sets the value of the 'performedString' field.
   * @param value the value to set.
   */
  public void setPerformedString(java.lang.CharSequence value) {
    this.performedString = value;
  }

  /**
   * Gets the value of the 'performedRange' field.
   * @return The value of the 'performedRange' field.
   */
  public io.carrera.fhir.avro.models.Range getPerformedRange() {
    return performedRange;
  }


  /**
   * Sets the value of the 'performedRange' field.
   * @param value the value to set.
   */
  public void setPerformedRange(io.carrera.fhir.avro.models.Range value) {
    this.performedRange = value;
  }

  /**
   * Gets the value of the 'recorder' field.
   * @return The value of the 'recorder' field.
   */
  public io.carrera.fhir.avro.models.Reference getRecorder() {
    return recorder;
  }


  /**
   * Sets the value of the 'recorder' field.
   * @param value the value to set.
   */
  public void setRecorder(io.carrera.fhir.avro.models.Reference value) {
    this.recorder = value;
  }

  /**
   * Gets the value of the 'asserter' field.
   * @return The value of the 'asserter' field.
   */
  public io.carrera.fhir.avro.models.Reference getAsserter() {
    return asserter;
  }


  /**
   * Sets the value of the 'asserter' field.
   * @param value the value to set.
   */
  public void setAsserter(io.carrera.fhir.avro.models.Reference value) {
    this.asserter = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public io.carrera.fhir.avro.models.Reference getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(io.carrera.fhir.avro.models.Reference value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'reasonCode' field.
   * @return The value of the 'reasonCode' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getReasonCode() {
    return reasonCode;
  }


  /**
   * Sets the value of the 'reasonCode' field.
   * @param value the value to set.
   */
  public void setReasonCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.reasonCode = value;
  }

  /**
   * Gets the value of the 'reasonReference' field.
   * @return The value of the 'reasonReference' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getReasonReference() {
    return reasonReference;
  }


  /**
   * Sets the value of the 'reasonReference' field.
   * @param value the value to set.
   */
  public void setReasonReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.reasonReference = value;
  }

  /**
   * Gets the value of the 'bodySite' field.
   * @return The value of the 'bodySite' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getBodySite() {
    return bodySite;
  }


  /**
   * Sets the value of the 'bodySite' field.
   * @param value the value to set.
   */
  public void setBodySite(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.bodySite = value;
  }

  /**
   * Gets the value of the 'outcome' field.
   * @return The value of the 'outcome' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getOutcome() {
    return outcome;
  }


  /**
   * Sets the value of the 'outcome' field.
   * @param value the value to set.
   */
  public void setOutcome(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.outcome = value;
  }

  /**
   * Gets the value of the 'report' field.
   * @return The value of the 'report' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getReport() {
    return report;
  }


  /**
   * Sets the value of the 'report' field.
   * @param value the value to set.
   */
  public void setReport(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.report = value;
  }

  /**
   * Gets the value of the 'complication' field.
   * @return The value of the 'complication' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getComplication() {
    return complication;
  }


  /**
   * Sets the value of the 'complication' field.
   * @param value the value to set.
   */
  public void setComplication(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.complication = value;
  }

  /**
   * Gets the value of the 'complicationDetail' field.
   * @return The value of the 'complicationDetail' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getComplicationDetail() {
    return complicationDetail;
  }


  /**
   * Sets the value of the 'complicationDetail' field.
   * @param value the value to set.
   */
  public void setComplicationDetail(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.complicationDetail = value;
  }

  /**
   * Gets the value of the 'followUp' field.
   * @return The value of the 'followUp' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getFollowUp() {
    return followUp;
  }


  /**
   * Sets the value of the 'followUp' field.
   * @param value the value to set.
   */
  public void setFollowUp(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.followUp = value;
  }

  /**
   * Gets the value of the 'usedReference' field.
   * @return The value of the 'usedReference' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getUsedReference() {
    return usedReference;
  }


  /**
   * Sets the value of the 'usedReference' field.
   * @param value the value to set.
   */
  public void setUsedReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.usedReference = value;
  }

  /**
   * Gets the value of the 'usedCode' field.
   * @return The value of the 'usedCode' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getUsedCode() {
    return usedCode;
  }


  /**
   * Sets the value of the 'usedCode' field.
   * @param value the value to set.
   */
  public void setUsedCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.usedCode = value;
  }

  /**
   * Creates a new Procedure RecordBuilder.
   * @return A new Procedure RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Procedure.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Procedure.Builder();
  }

  /**
   * Creates a new Procedure RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Procedure RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Procedure.Builder newBuilder(io.carrera.fhir.avro.models.Procedure.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Procedure.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Procedure.Builder(other);
    }
  }

  /**
   * Creates a new Procedure RecordBuilder by copying an existing Procedure instance.
   * @param other The existing instance to copy.
   * @return A new Procedure RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Procedure.Builder newBuilder(io.carrera.fhir.avro.models.Procedure other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Procedure.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Procedure.Builder(other);
    }
  }

  /**
   * RecordBuilder for Procedure instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Procedure>
    implements org.apache.avro.data.RecordBuilder<Procedure> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.lang.CharSequence implicitRules;
    private java.lang.CharSequence language;
    private java.util.List<io.carrera.fhir.avro.models.Extension> extension;
    private java.util.List<io.carrera.fhir.avro.models.Extension> modifierExtension;
    private java.util.List<java.lang.CharSequence> instantiatesCanonical;
    private java.util.List<java.lang.CharSequence> instantiatesUri;
    private java.util.List<io.carrera.fhir.avro.models.Reference> basedOn;
    private java.util.List<io.carrera.fhir.avro.models.Reference> partOf;
    private java.lang.Object status;
    private io.carrera.fhir.avro.models.CodeableConcept statusReason;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder statusReasonBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept category;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder categoryBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept code;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder codeBuilder;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;
    private io.carrera.fhir.avro.models.Reference encounter;
    private io.carrera.fhir.avro.models.Reference.Builder encounterBuilder;
    private java.lang.Object performedDateTime;
    private io.carrera.fhir.avro.models.Period performedPeriod;
    private io.carrera.fhir.avro.models.Period.Builder performedPeriodBuilder;
    private java.lang.CharSequence performedString;
    private io.carrera.fhir.avro.models.Range performedRange;
    private io.carrera.fhir.avro.models.Range.Builder performedRangeBuilder;
    private io.carrera.fhir.avro.models.Reference recorder;
    private io.carrera.fhir.avro.models.Reference.Builder recorderBuilder;
    private io.carrera.fhir.avro.models.Reference asserter;
    private io.carrera.fhir.avro.models.Reference.Builder asserterBuilder;
    private io.carrera.fhir.avro.models.Reference location;
    private io.carrera.fhir.avro.models.Reference.Builder locationBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode;
    private java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> bodySite;
    private io.carrera.fhir.avro.models.CodeableConcept outcome;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder outcomeBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Reference> report;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> complication;
    private java.util.List<io.carrera.fhir.avro.models.Reference> complicationDetail;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> followUp;
    private java.util.List<io.carrera.fhir.avro.models.Reference> usedReference;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> usedCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Procedure.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.implicitRules)) {
        this.implicitRules = data().deepCopy(fields()[2].schema(), other.implicitRules);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.extension)) {
        this.extension = data().deepCopy(fields()[4].schema(), other.extension);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[5].schema(), other.modifierExtension);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.instantiatesCanonical)) {
        this.instantiatesCanonical = data().deepCopy(fields()[6].schema(), other.instantiatesCanonical);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.instantiatesUri)) {
        this.instantiatesUri = data().deepCopy(fields()[7].schema(), other.instantiatesUri);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.basedOn)) {
        this.basedOn = data().deepCopy(fields()[8].schema(), other.basedOn);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.partOf)) {
        this.partOf = data().deepCopy(fields()[9].schema(), other.partOf);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.statusReason)) {
        this.statusReason = data().deepCopy(fields()[11].schema(), other.statusReason);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasStatusReasonBuilder()) {
        this.statusReasonBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getStatusReasonBuilder());
      }
      if (isValidValue(fields()[12], other.category)) {
        this.category = data().deepCopy(fields()[12].schema(), other.category);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasCategoryBuilder()) {
        this.categoryBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCategoryBuilder());
      }
      if (isValidValue(fields()[13], other.code)) {
        this.code = data().deepCopy(fields()[13].schema(), other.code);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasCodeBuilder()) {
        this.codeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCodeBuilder());
      }
      if (isValidValue(fields()[14], other.subject)) {
        this.subject = data().deepCopy(fields()[14].schema(), other.subject);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
      if (isValidValue(fields()[15], other.encounter)) {
        this.encounter = data().deepCopy(fields()[15].schema(), other.encounter);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (other.hasEncounterBuilder()) {
        this.encounterBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getEncounterBuilder());
      }
      if (isValidValue(fields()[16], other.performedDateTime)) {
        this.performedDateTime = data().deepCopy(fields()[16].schema(), other.performedDateTime);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.performedPeriod)) {
        this.performedPeriod = data().deepCopy(fields()[17].schema(), other.performedPeriod);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasPerformedPeriodBuilder()) {
        this.performedPeriodBuilder = io.carrera.fhir.avro.models.Period.newBuilder(other.getPerformedPeriodBuilder());
      }
      if (isValidValue(fields()[18], other.performedString)) {
        this.performedString = data().deepCopy(fields()[18].schema(), other.performedString);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.performedRange)) {
        this.performedRange = data().deepCopy(fields()[19].schema(), other.performedRange);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (other.hasPerformedRangeBuilder()) {
        this.performedRangeBuilder = io.carrera.fhir.avro.models.Range.newBuilder(other.getPerformedRangeBuilder());
      }
      if (isValidValue(fields()[20], other.recorder)) {
        this.recorder = data().deepCopy(fields()[20].schema(), other.recorder);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (other.hasRecorderBuilder()) {
        this.recorderBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getRecorderBuilder());
      }
      if (isValidValue(fields()[21], other.asserter)) {
        this.asserter = data().deepCopy(fields()[21].schema(), other.asserter);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (other.hasAsserterBuilder()) {
        this.asserterBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getAsserterBuilder());
      }
      if (isValidValue(fields()[22], other.location)) {
        this.location = data().deepCopy(fields()[22].schema(), other.location);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (other.hasLocationBuilder()) {
        this.locationBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getLocationBuilder());
      }
      if (isValidValue(fields()[23], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[23].schema(), other.reasonCode);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[24].schema(), other.reasonReference);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.bodySite)) {
        this.bodySite = data().deepCopy(fields()[25].schema(), other.bodySite);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.outcome)) {
        this.outcome = data().deepCopy(fields()[26].schema(), other.outcome);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (other.hasOutcomeBuilder()) {
        this.outcomeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getOutcomeBuilder());
      }
      if (isValidValue(fields()[27], other.report)) {
        this.report = data().deepCopy(fields()[27].schema(), other.report);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.complication)) {
        this.complication = data().deepCopy(fields()[28].schema(), other.complication);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.complicationDetail)) {
        this.complicationDetail = data().deepCopy(fields()[29].schema(), other.complicationDetail);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.followUp)) {
        this.followUp = data().deepCopy(fields()[30].schema(), other.followUp);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.usedReference)) {
        this.usedReference = data().deepCopy(fields()[31].schema(), other.usedReference);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.usedCode)) {
        this.usedCode = data().deepCopy(fields()[32].schema(), other.usedCode);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
    }

    /**
     * Creates a Builder by copying an existing Procedure instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Procedure other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.implicitRules)) {
        this.implicitRules = data().deepCopy(fields()[2].schema(), other.implicitRules);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.extension)) {
        this.extension = data().deepCopy(fields()[4].schema(), other.extension);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.modifierExtension)) {
        this.modifierExtension = data().deepCopy(fields()[5].schema(), other.modifierExtension);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.instantiatesCanonical)) {
        this.instantiatesCanonical = data().deepCopy(fields()[6].schema(), other.instantiatesCanonical);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.instantiatesUri)) {
        this.instantiatesUri = data().deepCopy(fields()[7].schema(), other.instantiatesUri);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.basedOn)) {
        this.basedOn = data().deepCopy(fields()[8].schema(), other.basedOn);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.partOf)) {
        this.partOf = data().deepCopy(fields()[9].schema(), other.partOf);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.statusReason)) {
        this.statusReason = data().deepCopy(fields()[11].schema(), other.statusReason);
        fieldSetFlags()[11] = true;
      }
      this.statusReasonBuilder = null;
      if (isValidValue(fields()[12], other.category)) {
        this.category = data().deepCopy(fields()[12].schema(), other.category);
        fieldSetFlags()[12] = true;
      }
      this.categoryBuilder = null;
      if (isValidValue(fields()[13], other.code)) {
        this.code = data().deepCopy(fields()[13].schema(), other.code);
        fieldSetFlags()[13] = true;
      }
      this.codeBuilder = null;
      if (isValidValue(fields()[14], other.subject)) {
        this.subject = data().deepCopy(fields()[14].schema(), other.subject);
        fieldSetFlags()[14] = true;
      }
      this.subjectBuilder = null;
      if (isValidValue(fields()[15], other.encounter)) {
        this.encounter = data().deepCopy(fields()[15].schema(), other.encounter);
        fieldSetFlags()[15] = true;
      }
      this.encounterBuilder = null;
      if (isValidValue(fields()[16], other.performedDateTime)) {
        this.performedDateTime = data().deepCopy(fields()[16].schema(), other.performedDateTime);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.performedPeriod)) {
        this.performedPeriod = data().deepCopy(fields()[17].schema(), other.performedPeriod);
        fieldSetFlags()[17] = true;
      }
      this.performedPeriodBuilder = null;
      if (isValidValue(fields()[18], other.performedString)) {
        this.performedString = data().deepCopy(fields()[18].schema(), other.performedString);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.performedRange)) {
        this.performedRange = data().deepCopy(fields()[19].schema(), other.performedRange);
        fieldSetFlags()[19] = true;
      }
      this.performedRangeBuilder = null;
      if (isValidValue(fields()[20], other.recorder)) {
        this.recorder = data().deepCopy(fields()[20].schema(), other.recorder);
        fieldSetFlags()[20] = true;
      }
      this.recorderBuilder = null;
      if (isValidValue(fields()[21], other.asserter)) {
        this.asserter = data().deepCopy(fields()[21].schema(), other.asserter);
        fieldSetFlags()[21] = true;
      }
      this.asserterBuilder = null;
      if (isValidValue(fields()[22], other.location)) {
        this.location = data().deepCopy(fields()[22].schema(), other.location);
        fieldSetFlags()[22] = true;
      }
      this.locationBuilder = null;
      if (isValidValue(fields()[23], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[23].schema(), other.reasonCode);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[24].schema(), other.reasonReference);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.bodySite)) {
        this.bodySite = data().deepCopy(fields()[25].schema(), other.bodySite);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.outcome)) {
        this.outcome = data().deepCopy(fields()[26].schema(), other.outcome);
        fieldSetFlags()[26] = true;
      }
      this.outcomeBuilder = null;
      if (isValidValue(fields()[27], other.report)) {
        this.report = data().deepCopy(fields()[27].schema(), other.report);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.complication)) {
        this.complication = data().deepCopy(fields()[28].schema(), other.complication);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.complicationDetail)) {
        this.complicationDetail = data().deepCopy(fields()[29].schema(), other.complicationDetail);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.followUp)) {
        this.followUp = data().deepCopy(fields()[30].schema(), other.followUp);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.usedReference)) {
        this.usedReference = data().deepCopy(fields()[31].schema(), other.usedReference);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.usedCode)) {
        this.usedCode = data().deepCopy(fields()[32].schema(), other.usedCode);
        fieldSetFlags()[32] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'implicitRules' field.
      * @return The value.
      */
    public java.lang.CharSequence getImplicitRules() {
      return implicitRules;
    }


    /**
      * Sets the value of the 'implicitRules' field.
      * @param value The value of 'implicitRules'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setImplicitRules(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.implicitRules = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'implicitRules' field has been set.
      * @return True if the 'implicitRules' field has been set, false otherwise.
      */
    public boolean hasImplicitRules() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'implicitRules' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearImplicitRules() {
      implicitRules = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }


    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.language = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Extension> getExtension() {
      return extension;
    }


    /**
      * Sets the value of the 'extension' field.
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
      validate(fields()[4], value);
      this.extension = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'extension' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'modifierExtension' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Extension> getModifierExtension() {
      return modifierExtension;
    }


    /**
      * Sets the value of the 'modifierExtension' field.
      * @param value The value of 'modifierExtension'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setModifierExtension(java.util.List<io.carrera.fhir.avro.models.Extension> value) {
      validate(fields()[5], value);
      this.modifierExtension = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'modifierExtension' field has been set.
      * @return True if the 'modifierExtension' field has been set, false otherwise.
      */
    public boolean hasModifierExtension() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'modifierExtension' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearModifierExtension() {
      modifierExtension = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'instantiatesCanonical' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getInstantiatesCanonical() {
      return instantiatesCanonical;
    }


    /**
      * Sets the value of the 'instantiatesCanonical' field.
      * @param value The value of 'instantiatesCanonical'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setInstantiatesCanonical(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[6], value);
      this.instantiatesCanonical = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'instantiatesCanonical' field has been set.
      * @return True if the 'instantiatesCanonical' field has been set, false otherwise.
      */
    public boolean hasInstantiatesCanonical() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'instantiatesCanonical' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearInstantiatesCanonical() {
      instantiatesCanonical = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'instantiatesUri' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getInstantiatesUri() {
      return instantiatesUri;
    }


    /**
      * Sets the value of the 'instantiatesUri' field.
      * @param value The value of 'instantiatesUri'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setInstantiatesUri(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.instantiatesUri = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'instantiatesUri' field has been set.
      * @return True if the 'instantiatesUri' field has been set, false otherwise.
      */
    public boolean hasInstantiatesUri() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'instantiatesUri' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearInstantiatesUri() {
      instantiatesUri = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'basedOn' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getBasedOn() {
      return basedOn;
    }


    /**
      * Sets the value of the 'basedOn' field.
      * @param value The value of 'basedOn'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setBasedOn(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[8], value);
      this.basedOn = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'basedOn' field has been set.
      * @return True if the 'basedOn' field has been set, false otherwise.
      */
    public boolean hasBasedOn() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'basedOn' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearBasedOn() {
      basedOn = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'partOf' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getPartOf() {
      return partOf;
    }


    /**
      * Sets the value of the 'partOf' field.
      * @param value The value of 'partOf'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setPartOf(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[9], value);
      this.partOf = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'partOf' field has been set.
      * @return True if the 'partOf' field has been set, false otherwise.
      */
    public boolean hasPartOf() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'partOf' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearPartOf() {
      partOf = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.Object getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setStatus(java.lang.Object value) {
      validate(fields()[10], value);
      this.status = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearStatus() {
      status = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'statusReason' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getStatusReason() {
      return statusReason;
    }


    /**
      * Sets the value of the 'statusReason' field.
      * @param value The value of 'statusReason'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setStatusReason(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[11], value);
      this.statusReasonBuilder = null;
      this.statusReason = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'statusReason' field has been set.
      * @return True if the 'statusReason' field has been set, false otherwise.
      */
    public boolean hasStatusReason() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'statusReason' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getStatusReasonBuilder() {
      if (statusReasonBuilder == null) {
        if (hasStatusReason()) {
          setStatusReasonBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(statusReason));
        } else {
          setStatusReasonBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return statusReasonBuilder;
    }

    /**
     * Sets the Builder instance for the 'statusReason' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setStatusReasonBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearStatusReason();
      statusReasonBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'statusReason' field has an active Builder instance
     * @return True if the 'statusReason' field has an active Builder instance
     */
    public boolean hasStatusReasonBuilder() {
      return statusReasonBuilder != null;
    }

    /**
      * Clears the value of the 'statusReason' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearStatusReason() {
      statusReason = null;
      statusReasonBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setCategory(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[12], value);
      this.categoryBuilder = null;
      this.category = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'category' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCategoryBuilder() {
      if (categoryBuilder == null) {
        if (hasCategory()) {
          setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(category));
        } else {
          setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return categoryBuilder;
    }

    /**
     * Sets the Builder instance for the 'category' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setCategoryBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCategory();
      categoryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'category' field has an active Builder instance
     * @return True if the 'category' field has an active Builder instance
     */
    public boolean hasCategoryBuilder() {
      return categoryBuilder != null;
    }

    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearCategory() {
      category = null;
      categoryBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[13], value);
      this.codeBuilder = null;
      this.code = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'code' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCodeBuilder() {
      if (codeBuilder == null) {
        if (hasCode()) {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(code));
        } else {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return codeBuilder;
    }

    /**
     * Sets the Builder instance for the 'code' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCode();
      codeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'code' field has an active Builder instance
     * @return True if the 'code' field has an active Builder instance
     */
    public boolean hasCodeBuilder() {
      return codeBuilder != null;
    }

    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearCode() {
      code = null;
      codeBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[14], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[14];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'encounter' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getEncounter() {
      return encounter;
    }


    /**
      * Sets the value of the 'encounter' field.
      * @param value The value of 'encounter'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setEncounter(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[15], value);
      this.encounterBuilder = null;
      this.encounter = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'encounter' field has been set.
      * @return True if the 'encounter' field has been set, false otherwise.
      */
    public boolean hasEncounter() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'encounter' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getEncounterBuilder() {
      if (encounterBuilder == null) {
        if (hasEncounter()) {
          setEncounterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(encounter));
        } else {
          setEncounterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return encounterBuilder;
    }

    /**
     * Sets the Builder instance for the 'encounter' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setEncounterBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearEncounter();
      encounterBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'encounter' field has an active Builder instance
     * @return True if the 'encounter' field has an active Builder instance
     */
    public boolean hasEncounterBuilder() {
      return encounterBuilder != null;
    }

    /**
      * Clears the value of the 'encounter' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearEncounter() {
      encounter = null;
      encounterBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'performedDateTime' field.
      * @return The value.
      */
    public java.lang.Object getPerformedDateTime() {
      return performedDateTime;
    }


    /**
      * Sets the value of the 'performedDateTime' field.
      * @param value The value of 'performedDateTime'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setPerformedDateTime(java.lang.Object value) {
      validate(fields()[16], value);
      this.performedDateTime = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'performedDateTime' field has been set.
      * @return True if the 'performedDateTime' field has been set, false otherwise.
      */
    public boolean hasPerformedDateTime() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'performedDateTime' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearPerformedDateTime() {
      performedDateTime = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'performedPeriod' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Period getPerformedPeriod() {
      return performedPeriod;
    }


    /**
      * Sets the value of the 'performedPeriod' field.
      * @param value The value of 'performedPeriod'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setPerformedPeriod(io.carrera.fhir.avro.models.Period value) {
      validate(fields()[17], value);
      this.performedPeriodBuilder = null;
      this.performedPeriod = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'performedPeriod' field has been set.
      * @return True if the 'performedPeriod' field has been set, false otherwise.
      */
    public boolean hasPerformedPeriod() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'performedPeriod' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Period.Builder getPerformedPeriodBuilder() {
      if (performedPeriodBuilder == null) {
        if (hasPerformedPeriod()) {
          setPerformedPeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder(performedPeriod));
        } else {
          setPerformedPeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder());
        }
      }
      return performedPeriodBuilder;
    }

    /**
     * Sets the Builder instance for the 'performedPeriod' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setPerformedPeriodBuilder(io.carrera.fhir.avro.models.Period.Builder value) {
      clearPerformedPeriod();
      performedPeriodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'performedPeriod' field has an active Builder instance
     * @return True if the 'performedPeriod' field has an active Builder instance
     */
    public boolean hasPerformedPeriodBuilder() {
      return performedPeriodBuilder != null;
    }

    /**
      * Clears the value of the 'performedPeriod' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearPerformedPeriod() {
      performedPeriod = null;
      performedPeriodBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'performedString' field.
      * @return The value.
      */
    public java.lang.CharSequence getPerformedString() {
      return performedString;
    }


    /**
      * Sets the value of the 'performedString' field.
      * @param value The value of 'performedString'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setPerformedString(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.performedString = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'performedString' field has been set.
      * @return True if the 'performedString' field has been set, false otherwise.
      */
    public boolean hasPerformedString() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'performedString' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearPerformedString() {
      performedString = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'performedRange' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Range getPerformedRange() {
      return performedRange;
    }


    /**
      * Sets the value of the 'performedRange' field.
      * @param value The value of 'performedRange'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setPerformedRange(io.carrera.fhir.avro.models.Range value) {
      validate(fields()[19], value);
      this.performedRangeBuilder = null;
      this.performedRange = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'performedRange' field has been set.
      * @return True if the 'performedRange' field has been set, false otherwise.
      */
    public boolean hasPerformedRange() {
      return fieldSetFlags()[19];
    }

    /**
     * Gets the Builder instance for the 'performedRange' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Range.Builder getPerformedRangeBuilder() {
      if (performedRangeBuilder == null) {
        if (hasPerformedRange()) {
          setPerformedRangeBuilder(io.carrera.fhir.avro.models.Range.newBuilder(performedRange));
        } else {
          setPerformedRangeBuilder(io.carrera.fhir.avro.models.Range.newBuilder());
        }
      }
      return performedRangeBuilder;
    }

    /**
     * Sets the Builder instance for the 'performedRange' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setPerformedRangeBuilder(io.carrera.fhir.avro.models.Range.Builder value) {
      clearPerformedRange();
      performedRangeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'performedRange' field has an active Builder instance
     * @return True if the 'performedRange' field has an active Builder instance
     */
    public boolean hasPerformedRangeBuilder() {
      return performedRangeBuilder != null;
    }

    /**
      * Clears the value of the 'performedRange' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearPerformedRange() {
      performedRange = null;
      performedRangeBuilder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'recorder' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getRecorder() {
      return recorder;
    }


    /**
      * Sets the value of the 'recorder' field.
      * @param value The value of 'recorder'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setRecorder(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[20], value);
      this.recorderBuilder = null;
      this.recorder = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'recorder' field has been set.
      * @return True if the 'recorder' field has been set, false otherwise.
      */
    public boolean hasRecorder() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'recorder' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getRecorderBuilder() {
      if (recorderBuilder == null) {
        if (hasRecorder()) {
          setRecorderBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(recorder));
        } else {
          setRecorderBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return recorderBuilder;
    }

    /**
     * Sets the Builder instance for the 'recorder' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setRecorderBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearRecorder();
      recorderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'recorder' field has an active Builder instance
     * @return True if the 'recorder' field has an active Builder instance
     */
    public boolean hasRecorderBuilder() {
      return recorderBuilder != null;
    }

    /**
      * Clears the value of the 'recorder' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearRecorder() {
      recorder = null;
      recorderBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'asserter' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getAsserter() {
      return asserter;
    }


    /**
      * Sets the value of the 'asserter' field.
      * @param value The value of 'asserter'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setAsserter(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[21], value);
      this.asserterBuilder = null;
      this.asserter = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'asserter' field has been set.
      * @return True if the 'asserter' field has been set, false otherwise.
      */
    public boolean hasAsserter() {
      return fieldSetFlags()[21];
    }

    /**
     * Gets the Builder instance for the 'asserter' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getAsserterBuilder() {
      if (asserterBuilder == null) {
        if (hasAsserter()) {
          setAsserterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(asserter));
        } else {
          setAsserterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return asserterBuilder;
    }

    /**
     * Sets the Builder instance for the 'asserter' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setAsserterBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearAsserter();
      asserterBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'asserter' field has an active Builder instance
     * @return True if the 'asserter' field has an active Builder instance
     */
    public boolean hasAsserterBuilder() {
      return asserterBuilder != null;
    }

    /**
      * Clears the value of the 'asserter' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearAsserter() {
      asserter = null;
      asserterBuilder = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setLocation(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[22], value);
      this.locationBuilder = null;
      this.location = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[22];
    }

    /**
     * Gets the Builder instance for the 'location' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getLocationBuilder() {
      if (locationBuilder == null) {
        if (hasLocation()) {
          setLocationBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(location));
        } else {
          setLocationBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return locationBuilder;
    }

    /**
     * Sets the Builder instance for the 'location' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setLocationBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearLocation();
      locationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'location' field has an active Builder instance
     * @return True if the 'location' field has an active Builder instance
     */
    public boolean hasLocationBuilder() {
      return locationBuilder != null;
    }

    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearLocation() {
      location = null;
      locationBuilder = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonCode' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getReasonCode() {
      return reasonCode;
    }


    /**
      * Sets the value of the 'reasonCode' field.
      * @param value The value of 'reasonCode'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setReasonCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[23], value);
      this.reasonCode = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonCode' field has been set.
      * @return True if the 'reasonCode' field has been set, false otherwise.
      */
    public boolean hasReasonCode() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'reasonCode' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearReasonCode() {
      reasonCode = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonReference' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getReasonReference() {
      return reasonReference;
    }


    /**
      * Sets the value of the 'reasonReference' field.
      * @param value The value of 'reasonReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setReasonReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[24], value);
      this.reasonReference = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonReference' field has been set.
      * @return True if the 'reasonReference' field has been set, false otherwise.
      */
    public boolean hasReasonReference() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'reasonReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearReasonReference() {
      reasonReference = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'bodySite' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getBodySite() {
      return bodySite;
    }


    /**
      * Sets the value of the 'bodySite' field.
      * @param value The value of 'bodySite'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setBodySite(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[25], value);
      this.bodySite = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'bodySite' field has been set.
      * @return True if the 'bodySite' field has been set, false otherwise.
      */
    public boolean hasBodySite() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'bodySite' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearBodySite() {
      bodySite = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'outcome' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getOutcome() {
      return outcome;
    }


    /**
      * Sets the value of the 'outcome' field.
      * @param value The value of 'outcome'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setOutcome(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[26], value);
      this.outcomeBuilder = null;
      this.outcome = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'outcome' field has been set.
      * @return True if the 'outcome' field has been set, false otherwise.
      */
    public boolean hasOutcome() {
      return fieldSetFlags()[26];
    }

    /**
     * Gets the Builder instance for the 'outcome' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getOutcomeBuilder() {
      if (outcomeBuilder == null) {
        if (hasOutcome()) {
          setOutcomeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(outcome));
        } else {
          setOutcomeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return outcomeBuilder;
    }

    /**
     * Sets the Builder instance for the 'outcome' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Procedure.Builder setOutcomeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearOutcome();
      outcomeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'outcome' field has an active Builder instance
     * @return True if the 'outcome' field has an active Builder instance
     */
    public boolean hasOutcomeBuilder() {
      return outcomeBuilder != null;
    }

    /**
      * Clears the value of the 'outcome' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearOutcome() {
      outcome = null;
      outcomeBuilder = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'report' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getReport() {
      return report;
    }


    /**
      * Sets the value of the 'report' field.
      * @param value The value of 'report'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setReport(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[27], value);
      this.report = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'report' field has been set.
      * @return True if the 'report' field has been set, false otherwise.
      */
    public boolean hasReport() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'report' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearReport() {
      report = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'complication' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getComplication() {
      return complication;
    }


    /**
      * Sets the value of the 'complication' field.
      * @param value The value of 'complication'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setComplication(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[28], value);
      this.complication = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'complication' field has been set.
      * @return True if the 'complication' field has been set, false otherwise.
      */
    public boolean hasComplication() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'complication' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearComplication() {
      complication = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'complicationDetail' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getComplicationDetail() {
      return complicationDetail;
    }


    /**
      * Sets the value of the 'complicationDetail' field.
      * @param value The value of 'complicationDetail'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setComplicationDetail(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[29], value);
      this.complicationDetail = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'complicationDetail' field has been set.
      * @return True if the 'complicationDetail' field has been set, false otherwise.
      */
    public boolean hasComplicationDetail() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'complicationDetail' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearComplicationDetail() {
      complicationDetail = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'followUp' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getFollowUp() {
      return followUp;
    }


    /**
      * Sets the value of the 'followUp' field.
      * @param value The value of 'followUp'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setFollowUp(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[30], value);
      this.followUp = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'followUp' field has been set.
      * @return True if the 'followUp' field has been set, false otherwise.
      */
    public boolean hasFollowUp() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'followUp' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearFollowUp() {
      followUp = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'usedReference' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getUsedReference() {
      return usedReference;
    }


    /**
      * Sets the value of the 'usedReference' field.
      * @param value The value of 'usedReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setUsedReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[31], value);
      this.usedReference = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'usedReference' field has been set.
      * @return True if the 'usedReference' field has been set, false otherwise.
      */
    public boolean hasUsedReference() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'usedReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearUsedReference() {
      usedReference = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'usedCode' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getUsedCode() {
      return usedCode;
    }


    /**
      * Sets the value of the 'usedCode' field.
      * @param value The value of 'usedCode'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder setUsedCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[32], value);
      this.usedCode = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'usedCode' field has been set.
      * @return True if the 'usedCode' field has been set, false otherwise.
      */
    public boolean hasUsedCode() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'usedCode' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Procedure.Builder clearUsedCode() {
      usedCode = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Procedure build() {
      try {
        Procedure record = new Procedure();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.implicitRules = fieldSetFlags()[2] ? this.implicitRules : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.language = fieldSetFlags()[3] ? this.language : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.extension = fieldSetFlags()[4] ? this.extension : (java.util.List<io.carrera.fhir.avro.models.Extension>) defaultValue(fields()[4]);
        record.modifierExtension = fieldSetFlags()[5] ? this.modifierExtension : (java.util.List<io.carrera.fhir.avro.models.Extension>) defaultValue(fields()[5]);
        record.instantiatesCanonical = fieldSetFlags()[6] ? this.instantiatesCanonical : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
        record.instantiatesUri = fieldSetFlags()[7] ? this.instantiatesUri : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.basedOn = fieldSetFlags()[8] ? this.basedOn : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[8]);
        record.partOf = fieldSetFlags()[9] ? this.partOf : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[9]);
        record.status = fieldSetFlags()[10] ? this.status :  defaultValue(fields()[10]);
        if (statusReasonBuilder != null) {
          try {
            record.statusReason = this.statusReasonBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("statusReason"));
            throw e;
          }
        } else {
          record.statusReason = fieldSetFlags()[11] ? this.statusReason : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[11]);
        }
        if (categoryBuilder != null) {
          try {
            record.category = this.categoryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("category"));
            throw e;
          }
        } else {
          record.category = fieldSetFlags()[12] ? this.category : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[12]);
        }
        if (codeBuilder != null) {
          try {
            record.code = this.codeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("code"));
            throw e;
          }
        } else {
          record.code = fieldSetFlags()[13] ? this.code : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[13]);
        }
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[14] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[14]);
        }
        if (encounterBuilder != null) {
          try {
            record.encounter = this.encounterBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("encounter"));
            throw e;
          }
        } else {
          record.encounter = fieldSetFlags()[15] ? this.encounter : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[15]);
        }
        record.performedDateTime = fieldSetFlags()[16] ? this.performedDateTime :  defaultValue(fields()[16]);
        if (performedPeriodBuilder != null) {
          try {
            record.performedPeriod = this.performedPeriodBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("performedPeriod"));
            throw e;
          }
        } else {
          record.performedPeriod = fieldSetFlags()[17] ? this.performedPeriod : (io.carrera.fhir.avro.models.Period) defaultValue(fields()[17]);
        }
        record.performedString = fieldSetFlags()[18] ? this.performedString : (java.lang.CharSequence) defaultValue(fields()[18]);
        if (performedRangeBuilder != null) {
          try {
            record.performedRange = this.performedRangeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("performedRange"));
            throw e;
          }
        } else {
          record.performedRange = fieldSetFlags()[19] ? this.performedRange : (io.carrera.fhir.avro.models.Range) defaultValue(fields()[19]);
        }
        if (recorderBuilder != null) {
          try {
            record.recorder = this.recorderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("recorder"));
            throw e;
          }
        } else {
          record.recorder = fieldSetFlags()[20] ? this.recorder : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[20]);
        }
        if (asserterBuilder != null) {
          try {
            record.asserter = this.asserterBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("asserter"));
            throw e;
          }
        } else {
          record.asserter = fieldSetFlags()[21] ? this.asserter : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[21]);
        }
        if (locationBuilder != null) {
          try {
            record.location = this.locationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("location"));
            throw e;
          }
        } else {
          record.location = fieldSetFlags()[22] ? this.location : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[22]);
        }
        record.reasonCode = fieldSetFlags()[23] ? this.reasonCode : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[23]);
        record.reasonReference = fieldSetFlags()[24] ? this.reasonReference : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[24]);
        record.bodySite = fieldSetFlags()[25] ? this.bodySite : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[25]);
        if (outcomeBuilder != null) {
          try {
            record.outcome = this.outcomeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("outcome"));
            throw e;
          }
        } else {
          record.outcome = fieldSetFlags()[26] ? this.outcome : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[26]);
        }
        record.report = fieldSetFlags()[27] ? this.report : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[27]);
        record.complication = fieldSetFlags()[28] ? this.complication : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[28]);
        record.complicationDetail = fieldSetFlags()[29] ? this.complicationDetail : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[29]);
        record.followUp = fieldSetFlags()[30] ? this.followUp : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[30]);
        record.usedReference = fieldSetFlags()[31] ? this.usedReference : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[31]);
        record.usedCode = fieldSetFlags()[32] ? this.usedCode : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[32]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Procedure>
    WRITER$ = (org.apache.avro.io.DatumWriter<Procedure>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Procedure>
    READER$ = (org.apache.avro.io.DatumReader<Procedure>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










