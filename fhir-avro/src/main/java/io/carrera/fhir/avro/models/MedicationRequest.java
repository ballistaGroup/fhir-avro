/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MedicationRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6649072465863584899L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MedicationRequest\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"intent\",\"type\":\"string\"},{\"name\":\"medicationCodeableConcept\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"subject\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"encounter\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"authoredOn\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"localDateTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"requester\",\"type\":[\"null\",\"Reference\"],\"default\":null},{\"name\":\"medicationReference\",\"type\":[\"null\",\"Reference\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<MedicationRequest> ENCODER =
      new BinaryMessageEncoder<MedicationRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MedicationRequest> DECODER =
      new BinaryMessageDecoder<MedicationRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MedicationRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MedicationRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MedicationRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MedicationRequest>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MedicationRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MedicationRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MedicationRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MedicationRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.lang.CharSequence status;
   private java.lang.CharSequence intent;
   private io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept;
   private io.carrera.fhir.avro.models.Reference subject;
   private io.carrera.fhir.avro.models.Reference encounter;
   private java.lang.Object authoredOn;
   private io.carrera.fhir.avro.models.Reference requester;
   private io.carrera.fhir.avro.models.Reference medicationReference;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MedicationRequest() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param status The new value for status
   * @param intent The new value for intent
   * @param medicationCodeableConcept The new value for medicationCodeableConcept
   * @param subject The new value for subject
   * @param encounter The new value for encounter
   * @param authoredOn The new value for authoredOn
   * @param requester The new value for requester
   * @param medicationReference The new value for medicationReference
   */
  public MedicationRequest(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.lang.CharSequence status, java.lang.CharSequence intent, io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept, io.carrera.fhir.avro.models.Reference subject, io.carrera.fhir.avro.models.Reference encounter, java.lang.Object authoredOn, io.carrera.fhir.avro.models.Reference requester, io.carrera.fhir.avro.models.Reference medicationReference) {
    this.resourceType = resourceType;
    this.id = id;
    this.status = status;
    this.intent = intent;
    this.medicationCodeableConcept = medicationCodeableConcept;
    this.subject = subject;
    this.encounter = encounter;
    this.authoredOn = authoredOn;
    this.requester = requester;
    this.medicationReference = medicationReference;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return status;
    case 3: return intent;
    case 4: return medicationCodeableConcept;
    case 5: return subject;
    case 6: return encounter;
    case 7: return authoredOn;
    case 8: return requester;
    case 9: return medicationReference;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: status = (java.lang.CharSequence)value$; break;
    case 3: intent = (java.lang.CharSequence)value$; break;
    case 4: medicationCodeableConcept = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 6: encounter = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 7: authoredOn = value$; break;
    case 8: requester = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 9: medicationReference = (io.carrera.fhir.avro.models.Reference)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'intent' field.
   * @return The value of the 'intent' field.
   */
  public java.lang.CharSequence getIntent() {
    return intent;
  }


  /**
   * Sets the value of the 'intent' field.
   * @param value the value to set.
   */
  public void setIntent(java.lang.CharSequence value) {
    this.intent = value;
  }

  /**
   * Gets the value of the 'medicationCodeableConcept' field.
   * @return The value of the 'medicationCodeableConcept' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getMedicationCodeableConcept() {
    return medicationCodeableConcept;
  }


  /**
   * Sets the value of the 'medicationCodeableConcept' field.
   * @param value the value to set.
   */
  public void setMedicationCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.medicationCodeableConcept = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'encounter' field.
   * @return The value of the 'encounter' field.
   */
  public io.carrera.fhir.avro.models.Reference getEncounter() {
    return encounter;
  }


  /**
   * Sets the value of the 'encounter' field.
   * @param value the value to set.
   */
  public void setEncounter(io.carrera.fhir.avro.models.Reference value) {
    this.encounter = value;
  }

  /**
   * Gets the value of the 'authoredOn' field.
   * @return The value of the 'authoredOn' field.
   */
  public java.lang.Object getAuthoredOn() {
    return authoredOn;
  }


  /**
   * Sets the value of the 'authoredOn' field.
   * @param value the value to set.
   */
  public void setAuthoredOn(java.lang.Object value) {
    this.authoredOn = value;
  }

  /**
   * Gets the value of the 'requester' field.
   * @return The value of the 'requester' field.
   */
  public io.carrera.fhir.avro.models.Reference getRequester() {
    return requester;
  }


  /**
   * Sets the value of the 'requester' field.
   * @param value the value to set.
   */
  public void setRequester(io.carrera.fhir.avro.models.Reference value) {
    this.requester = value;
  }

  /**
   * Gets the value of the 'medicationReference' field.
   * @return The value of the 'medicationReference' field.
   */
  public io.carrera.fhir.avro.models.Reference getMedicationReference() {
    return medicationReference;
  }


  /**
   * Sets the value of the 'medicationReference' field.
   * @param value the value to set.
   */
  public void setMedicationReference(io.carrera.fhir.avro.models.Reference value) {
    this.medicationReference = value;
  }

  /**
   * Creates a new MedicationRequest RecordBuilder.
   * @return A new MedicationRequest RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationRequest.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.MedicationRequest.Builder();
  }

  /**
   * Creates a new MedicationRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MedicationRequest RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationRequest.Builder newBuilder(io.carrera.fhir.avro.models.MedicationRequest.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder(other);
    }
  }

  /**
   * Creates a new MedicationRequest RecordBuilder by copying an existing MedicationRequest instance.
   * @param other The existing instance to copy.
   * @return A new MedicationRequest RecordBuilder
   */
  public static io.carrera.fhir.avro.models.MedicationRequest.Builder newBuilder(io.carrera.fhir.avro.models.MedicationRequest other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder();
    } else {
      return new io.carrera.fhir.avro.models.MedicationRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for MedicationRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MedicationRequest>
    implements org.apache.avro.data.RecordBuilder<MedicationRequest> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.lang.CharSequence status;
    private java.lang.CharSequence intent;
    private io.carrera.fhir.avro.models.CodeableConcept medicationCodeableConcept;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder medicationCodeableConceptBuilder;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;
    private io.carrera.fhir.avro.models.Reference encounter;
    private io.carrera.fhir.avro.models.Reference.Builder encounterBuilder;
    private java.lang.Object authoredOn;
    private io.carrera.fhir.avro.models.Reference requester;
    private io.carrera.fhir.avro.models.Reference.Builder requesterBuilder;
    private io.carrera.fhir.avro.models.Reference medicationReference;
    private io.carrera.fhir.avro.models.Reference.Builder medicationReferenceBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.intent)) {
        this.intent = data().deepCopy(fields()[3].schema(), other.intent);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.medicationCodeableConcept)) {
        this.medicationCodeableConcept = data().deepCopy(fields()[4].schema(), other.medicationCodeableConcept);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasMedicationCodeableConceptBuilder()) {
        this.medicationCodeableConceptBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getMedicationCodeableConceptBuilder());
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
      if (isValidValue(fields()[6], other.encounter)) {
        this.encounter = data().deepCopy(fields()[6].schema(), other.encounter);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasEncounterBuilder()) {
        this.encounterBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getEncounterBuilder());
      }
      if (isValidValue(fields()[7], other.authoredOn)) {
        this.authoredOn = data().deepCopy(fields()[7].schema(), other.authoredOn);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.requester)) {
        this.requester = data().deepCopy(fields()[8].schema(), other.requester);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasRequesterBuilder()) {
        this.requesterBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getRequesterBuilder());
      }
      if (isValidValue(fields()[9], other.medicationReference)) {
        this.medicationReference = data().deepCopy(fields()[9].schema(), other.medicationReference);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasMedicationReferenceBuilder()) {
        this.medicationReferenceBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getMedicationReferenceBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MedicationRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.MedicationRequest other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.intent)) {
        this.intent = data().deepCopy(fields()[3].schema(), other.intent);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.medicationCodeableConcept)) {
        this.medicationCodeableConcept = data().deepCopy(fields()[4].schema(), other.medicationCodeableConcept);
        fieldSetFlags()[4] = true;
      }
      this.medicationCodeableConceptBuilder = null;
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = true;
      }
      this.subjectBuilder = null;
      if (isValidValue(fields()[6], other.encounter)) {
        this.encounter = data().deepCopy(fields()[6].schema(), other.encounter);
        fieldSetFlags()[6] = true;
      }
      this.encounterBuilder = null;
      if (isValidValue(fields()[7], other.authoredOn)) {
        this.authoredOn = data().deepCopy(fields()[7].schema(), other.authoredOn);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.requester)) {
        this.requester = data().deepCopy(fields()[8].schema(), other.requester);
        fieldSetFlags()[8] = true;
      }
      this.requesterBuilder = null;
      if (isValidValue(fields()[9], other.medicationReference)) {
        this.medicationReference = data().deepCopy(fields()[9].schema(), other.medicationReference);
        fieldSetFlags()[9] = true;
      }
      this.medicationReferenceBuilder = null;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.status = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearStatus() {
      status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'intent' field.
      * @return The value.
      */
    public java.lang.CharSequence getIntent() {
      return intent;
    }


    /**
      * Sets the value of the 'intent' field.
      * @param value The value of 'intent'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setIntent(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.intent = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'intent' field has been set.
      * @return True if the 'intent' field has been set, false otherwise.
      */
    public boolean hasIntent() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'intent' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearIntent() {
      intent = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicationCodeableConcept' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getMedicationCodeableConcept() {
      return medicationCodeableConcept;
    }


    /**
      * Sets the value of the 'medicationCodeableConcept' field.
      * @param value The value of 'medicationCodeableConcept'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationCodeableConcept(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.medicationCodeableConceptBuilder = null;
      this.medicationCodeableConcept = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'medicationCodeableConcept' field has been set.
      * @return True if the 'medicationCodeableConcept' field has been set, false otherwise.
      */
    public boolean hasMedicationCodeableConcept() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'medicationCodeableConcept' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getMedicationCodeableConceptBuilder() {
      if (medicationCodeableConceptBuilder == null) {
        if (hasMedicationCodeableConcept()) {
          setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(medicationCodeableConcept));
        } else {
          setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return medicationCodeableConceptBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicationCodeableConcept' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationCodeableConceptBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearMedicationCodeableConcept();
      medicationCodeableConceptBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicationCodeableConcept' field has an active Builder instance
     * @return True if the 'medicationCodeableConcept' field has an active Builder instance
     */
    public boolean hasMedicationCodeableConceptBuilder() {
      return medicationCodeableConceptBuilder != null;
    }

    /**
      * Clears the value of the 'medicationCodeableConcept' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearMedicationCodeableConcept() {
      medicationCodeableConcept = null;
      medicationCodeableConceptBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[5], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationRequest.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'encounter' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getEncounter() {
      return encounter;
    }


    /**
      * Sets the value of the 'encounter' field.
      * @param value The value of 'encounter'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setEncounter(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[6], value);
      this.encounterBuilder = null;
      this.encounter = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'encounter' field has been set.
      * @return True if the 'encounter' field has been set, false otherwise.
      */
    public boolean hasEncounter() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'encounter' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getEncounterBuilder() {
      if (encounterBuilder == null) {
        if (hasEncounter()) {
          setEncounterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(encounter));
        } else {
          setEncounterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return encounterBuilder;
    }

    /**
     * Sets the Builder instance for the 'encounter' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationRequest.Builder setEncounterBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearEncounter();
      encounterBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'encounter' field has an active Builder instance
     * @return True if the 'encounter' field has an active Builder instance
     */
    public boolean hasEncounterBuilder() {
      return encounterBuilder != null;
    }

    /**
      * Clears the value of the 'encounter' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearEncounter() {
      encounter = null;
      encounterBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'authoredOn' field.
      * @return The value.
      */
    public java.lang.Object getAuthoredOn() {
      return authoredOn;
    }


    /**
      * Sets the value of the 'authoredOn' field.
      * @param value The value of 'authoredOn'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setAuthoredOn(java.lang.Object value) {
      validate(fields()[7], value);
      this.authoredOn = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'authoredOn' field has been set.
      * @return True if the 'authoredOn' field has been set, false otherwise.
      */
    public boolean hasAuthoredOn() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'authoredOn' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearAuthoredOn() {
      authoredOn = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'requester' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getRequester() {
      return requester;
    }


    /**
      * Sets the value of the 'requester' field.
      * @param value The value of 'requester'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setRequester(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[8], value);
      this.requesterBuilder = null;
      this.requester = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'requester' field has been set.
      * @return True if the 'requester' field has been set, false otherwise.
      */
    public boolean hasRequester() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'requester' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getRequesterBuilder() {
      if (requesterBuilder == null) {
        if (hasRequester()) {
          setRequesterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(requester));
        } else {
          setRequesterBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return requesterBuilder;
    }

    /**
     * Sets the Builder instance for the 'requester' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationRequest.Builder setRequesterBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearRequester();
      requesterBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'requester' field has an active Builder instance
     * @return True if the 'requester' field has an active Builder instance
     */
    public boolean hasRequesterBuilder() {
      return requesterBuilder != null;
    }

    /**
      * Clears the value of the 'requester' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearRequester() {
      requester = null;
      requesterBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'medicationReference' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getMedicationReference() {
      return medicationReference;
    }


    /**
      * Sets the value of the 'medicationReference' field.
      * @param value The value of 'medicationReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationReference(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[9], value);
      this.medicationReferenceBuilder = null;
      this.medicationReference = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'medicationReference' field has been set.
      * @return True if the 'medicationReference' field has been set, false otherwise.
      */
    public boolean hasMedicationReference() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'medicationReference' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getMedicationReferenceBuilder() {
      if (medicationReferenceBuilder == null) {
        if (hasMedicationReference()) {
          setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(medicationReference));
        } else {
          setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return medicationReferenceBuilder;
    }

    /**
     * Sets the Builder instance for the 'medicationReference' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.MedicationRequest.Builder setMedicationReferenceBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearMedicationReference();
      medicationReferenceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'medicationReference' field has an active Builder instance
     * @return True if the 'medicationReference' field has an active Builder instance
     */
    public boolean hasMedicationReferenceBuilder() {
      return medicationReferenceBuilder != null;
    }

    /**
      * Clears the value of the 'medicationReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.MedicationRequest.Builder clearMedicationReference() {
      medicationReference = null;
      medicationReferenceBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MedicationRequest build() {
      try {
        MedicationRequest record = new MedicationRequest();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.status = fieldSetFlags()[2] ? this.status : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.intent = fieldSetFlags()[3] ? this.intent : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (medicationCodeableConceptBuilder != null) {
          try {
            record.medicationCodeableConcept = this.medicationCodeableConceptBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("medicationCodeableConcept"));
            throw e;
          }
        } else {
          record.medicationCodeableConcept = fieldSetFlags()[4] ? this.medicationCodeableConcept : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[5] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[5]);
        }
        if (encounterBuilder != null) {
          try {
            record.encounter = this.encounterBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("encounter"));
            throw e;
          }
        } else {
          record.encounter = fieldSetFlags()[6] ? this.encounter : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[6]);
        }
        record.authoredOn = fieldSetFlags()[7] ? this.authoredOn :  defaultValue(fields()[7]);
        if (requesterBuilder != null) {
          try {
            record.requester = this.requesterBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("requester"));
            throw e;
          }
        } else {
          record.requester = fieldSetFlags()[8] ? this.requester : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[8]);
        }
        if (medicationReferenceBuilder != null) {
          try {
            record.medicationReference = this.medicationReferenceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("medicationReference"));
            throw e;
          }
        } else {
          record.medicationReference = fieldSetFlags()[9] ? this.medicationReference : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[9]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MedicationRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<MedicationRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MedicationRequest>
    READER$ = (org.apache.avro.io.DatumReader<MedicationRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










