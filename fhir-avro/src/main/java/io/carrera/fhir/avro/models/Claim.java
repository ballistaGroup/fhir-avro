/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Claim extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7539930036620524524L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Claim\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"identifier_record\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"subType\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"use\",\"type\":\"string\"},{\"name\":\"patient\",\"type\":{\"type\":\"record\",\"name\":\"Patient\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"identifier_record\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"name_record\",\"fields\":[{\"name\":\"use\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"family\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"given\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"prefix\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"gender\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"birthDate\",\"type\":[\"null\",\"string\",{\"type\":\"int\",\"logicalType\":\"date\"}],\"default\":null},{\"name\":\"maritalStatus\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null}]}},{\"name\":\"billablePeriod\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-micros\"}],\"default\":null}]}],\"default\":null},{\"name\":\"created\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"provider\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"priority\",\"type\":\"CodeableConcept\"},{\"name\":\"insurance\",\"type\":{\"type\":\"record\",\"name\":\"Insurance\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sequence\",\"type\":\"int\"},{\"name\":\"focal\",\"type\":\"boolean\"},{\"name\":\"coverage\",\"type\":\"boolean\"}]}},{\"name\":\"item\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"fields\":[{\"name\":\"sequence\",\"type\":\"int\"},{\"name\":\"productOrService\",\"type\":\"CodeableConcept\"}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMicrosConversion());
  }

  private static final BinaryMessageEncoder<Claim> ENCODER =
      new BinaryMessageEncoder<Claim>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Claim> DECODER =
      new BinaryMessageDecoder<Claim>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Claim> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Claim> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Claim> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Claim>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Claim to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Claim from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Claim instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Claim fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
   private java.lang.CharSequence status;
   private io.carrera.fhir.avro.models.CodeableConcept type;
   private io.carrera.fhir.avro.models.CodeableConcept subType;
   private java.lang.CharSequence use;
   private io.carrera.fhir.avro.models.Patient patient;
   private io.carrera.fhir.avro.models.Period billablePeriod;
   private int created;
   private io.carrera.fhir.avro.models.Reference provider;
   private io.carrera.fhir.avro.models.CodeableConcept priority;
   private io.carrera.fhir.avro.models.Insurance insurance;
   private java.util.List<io.carrera.fhir.avro.models.Item> item;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Claim() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param identifier The new value for identifier
   * @param status The new value for status
   * @param type The new value for type
   * @param subType The new value for subType
   * @param use The new value for use
   * @param patient The new value for patient
   * @param billablePeriod The new value for billablePeriod
   * @param created The new value for created
   * @param provider The new value for provider
   * @param priority The new value for priority
   * @param insurance The new value for insurance
   * @param item The new value for item
   */
  public Claim(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier, java.lang.CharSequence status, io.carrera.fhir.avro.models.CodeableConcept type, io.carrera.fhir.avro.models.CodeableConcept subType, java.lang.CharSequence use, io.carrera.fhir.avro.models.Patient patient, io.carrera.fhir.avro.models.Period billablePeriod, java.lang.Integer created, io.carrera.fhir.avro.models.Reference provider, io.carrera.fhir.avro.models.CodeableConcept priority, io.carrera.fhir.avro.models.Insurance insurance, java.util.List<io.carrera.fhir.avro.models.Item> item) {
    this.resourceType = resourceType;
    this.id = id;
    this.identifier = identifier;
    this.status = status;
    this.type = type;
    this.subType = subType;
    this.use = use;
    this.patient = patient;
    this.billablePeriod = billablePeriod;
    this.created = created;
    this.provider = provider;
    this.priority = priority;
    this.insurance = insurance;
    this.item = item;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return identifier;
    case 3: return status;
    case 4: return type;
    case 5: return subType;
    case 6: return use;
    case 7: return patient;
    case 8: return billablePeriod;
    case 9: return created;
    case 10: return provider;
    case 11: return priority;
    case 12: return insurance;
    case 13: return item;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: identifier = (java.util.List<io.carrera.fhir.avro.models.identifier_record>)value$; break;
    case 3: status = (java.lang.CharSequence)value$; break;
    case 4: type = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: subType = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 6: use = (java.lang.CharSequence)value$; break;
    case 7: patient = (io.carrera.fhir.avro.models.Patient)value$; break;
    case 8: billablePeriod = (io.carrera.fhir.avro.models.Period)value$; break;
    case 9: created = (java.lang.Integer)value$; break;
    case 10: provider = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 11: priority = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 12: insurance = (io.carrera.fhir.avro.models.Insurance)value$; break;
    case 13: item = (java.util.List<io.carrera.fhir.avro.models.Item>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'subType' field.
   * @return The value of the 'subType' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getSubType() {
    return subType;
  }


  /**
   * Sets the value of the 'subType' field.
   * @param value the value to set.
   */
  public void setSubType(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.subType = value;
  }

  /**
   * Gets the value of the 'use' field.
   * @return The value of the 'use' field.
   */
  public java.lang.CharSequence getUse() {
    return use;
  }


  /**
   * Sets the value of the 'use' field.
   * @param value the value to set.
   */
  public void setUse(java.lang.CharSequence value) {
    this.use = value;
  }

  /**
   * Gets the value of the 'patient' field.
   * @return The value of the 'patient' field.
   */
  public io.carrera.fhir.avro.models.Patient getPatient() {
    return patient;
  }


  /**
   * Sets the value of the 'patient' field.
   * @param value the value to set.
   */
  public void setPatient(io.carrera.fhir.avro.models.Patient value) {
    this.patient = value;
  }

  /**
   * Gets the value of the 'billablePeriod' field.
   * @return The value of the 'billablePeriod' field.
   */
  public io.carrera.fhir.avro.models.Period getBillablePeriod() {
    return billablePeriod;
  }


  /**
   * Sets the value of the 'billablePeriod' field.
   * @param value the value to set.
   */
  public void setBillablePeriod(io.carrera.fhir.avro.models.Period value) {
    this.billablePeriod = value;
  }

  /**
   * Gets the value of the 'created' field.
   * @return The value of the 'created' field.
   */
  public int getCreated() {
    return created;
  }


  /**
   * Sets the value of the 'created' field.
   * @param value the value to set.
   */
  public void setCreated(int value) {
    this.created = value;
  }

  /**
   * Gets the value of the 'provider' field.
   * @return The value of the 'provider' field.
   */
  public io.carrera.fhir.avro.models.Reference getProvider() {
    return provider;
  }


  /**
   * Sets the value of the 'provider' field.
   * @param value the value to set.
   */
  public void setProvider(io.carrera.fhir.avro.models.Reference value) {
    this.provider = value;
  }

  /**
   * Gets the value of the 'priority' field.
   * @return The value of the 'priority' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getPriority() {
    return priority;
  }


  /**
   * Sets the value of the 'priority' field.
   * @param value the value to set.
   */
  public void setPriority(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.priority = value;
  }

  /**
   * Gets the value of the 'insurance' field.
   * @return The value of the 'insurance' field.
   */
  public io.carrera.fhir.avro.models.Insurance getInsurance() {
    return insurance;
  }


  /**
   * Sets the value of the 'insurance' field.
   * @param value the value to set.
   */
  public void setInsurance(io.carrera.fhir.avro.models.Insurance value) {
    this.insurance = value;
  }

  /**
   * Gets the value of the 'item' field.
   * @return The value of the 'item' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Item> getItem() {
    return item;
  }


  /**
   * Sets the value of the 'item' field.
   * @param value the value to set.
   */
  public void setItem(java.util.List<io.carrera.fhir.avro.models.Item> value) {
    this.item = value;
  }

  /**
   * Creates a new Claim RecordBuilder.
   * @return A new Claim RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Claim.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Claim.Builder();
  }

  /**
   * Creates a new Claim RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Claim RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Claim.Builder newBuilder(io.carrera.fhir.avro.models.Claim.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Claim.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Claim.Builder(other);
    }
  }

  /**
   * Creates a new Claim RecordBuilder by copying an existing Claim instance.
   * @param other The existing instance to copy.
   * @return A new Claim RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Claim.Builder newBuilder(io.carrera.fhir.avro.models.Claim other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Claim.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Claim.Builder(other);
    }
  }

  /**
   * RecordBuilder for Claim instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Claim>
    implements org.apache.avro.data.RecordBuilder<Claim> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
    private java.lang.CharSequence status;
    private io.carrera.fhir.avro.models.CodeableConcept type;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder typeBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept subType;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder subTypeBuilder;
    private java.lang.CharSequence use;
    private io.carrera.fhir.avro.models.Patient patient;
    private io.carrera.fhir.avro.models.Patient.Builder patientBuilder;
    private io.carrera.fhir.avro.models.Period billablePeriod;
    private io.carrera.fhir.avro.models.Period.Builder billablePeriodBuilder;
    private int created;
    private io.carrera.fhir.avro.models.Reference provider;
    private io.carrera.fhir.avro.models.Reference.Builder providerBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept priority;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder priorityBuilder;
    private io.carrera.fhir.avro.models.Insurance insurance;
    private io.carrera.fhir.avro.models.Insurance.Builder insuranceBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Item> item;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Claim.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[5], other.subType)) {
        this.subType = data().deepCopy(fields()[5].schema(), other.subType);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasSubTypeBuilder()) {
        this.subTypeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getSubTypeBuilder());
      }
      if (isValidValue(fields()[6], other.use)) {
        this.use = data().deepCopy(fields()[6].schema(), other.use);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.patient)) {
        this.patient = data().deepCopy(fields()[7].schema(), other.patient);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasPatientBuilder()) {
        this.patientBuilder = io.carrera.fhir.avro.models.Patient.newBuilder(other.getPatientBuilder());
      }
      if (isValidValue(fields()[8], other.billablePeriod)) {
        this.billablePeriod = data().deepCopy(fields()[8].schema(), other.billablePeriod);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasBillablePeriodBuilder()) {
        this.billablePeriodBuilder = io.carrera.fhir.avro.models.Period.newBuilder(other.getBillablePeriodBuilder());
      }
      if (isValidValue(fields()[9], other.created)) {
        this.created = data().deepCopy(fields()[9].schema(), other.created);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.provider)) {
        this.provider = data().deepCopy(fields()[10].schema(), other.provider);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasProviderBuilder()) {
        this.providerBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getProviderBuilder());
      }
      if (isValidValue(fields()[11], other.priority)) {
        this.priority = data().deepCopy(fields()[11].schema(), other.priority);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasPriorityBuilder()) {
        this.priorityBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getPriorityBuilder());
      }
      if (isValidValue(fields()[12], other.insurance)) {
        this.insurance = data().deepCopy(fields()[12].schema(), other.insurance);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasInsuranceBuilder()) {
        this.insuranceBuilder = io.carrera.fhir.avro.models.Insurance.newBuilder(other.getInsuranceBuilder());
      }
      if (isValidValue(fields()[13], other.item)) {
        this.item = data().deepCopy(fields()[13].schema(), other.item);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing Claim instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Claim other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[5], other.subType)) {
        this.subType = data().deepCopy(fields()[5].schema(), other.subType);
        fieldSetFlags()[5] = true;
      }
      this.subTypeBuilder = null;
      if (isValidValue(fields()[6], other.use)) {
        this.use = data().deepCopy(fields()[6].schema(), other.use);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.patient)) {
        this.patient = data().deepCopy(fields()[7].schema(), other.patient);
        fieldSetFlags()[7] = true;
      }
      this.patientBuilder = null;
      if (isValidValue(fields()[8], other.billablePeriod)) {
        this.billablePeriod = data().deepCopy(fields()[8].schema(), other.billablePeriod);
        fieldSetFlags()[8] = true;
      }
      this.billablePeriodBuilder = null;
      if (isValidValue(fields()[9], other.created)) {
        this.created = data().deepCopy(fields()[9].schema(), other.created);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.provider)) {
        this.provider = data().deepCopy(fields()[10].schema(), other.provider);
        fieldSetFlags()[10] = true;
      }
      this.providerBuilder = null;
      if (isValidValue(fields()[11], other.priority)) {
        this.priority = data().deepCopy(fields()[11].schema(), other.priority);
        fieldSetFlags()[11] = true;
      }
      this.priorityBuilder = null;
      if (isValidValue(fields()[12], other.insurance)) {
        this.insurance = data().deepCopy(fields()[12].schema(), other.insurance);
        fieldSetFlags()[12] = true;
      }
      this.insuranceBuilder = null;
      if (isValidValue(fields()[13], other.item)) {
        this.item = data().deepCopy(fields()[13].schema(), other.item);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
      validate(fields()[2], value);
      this.identifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setType(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(type));
        } else {
          setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'subType' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getSubType() {
      return subType;
    }


    /**
      * Sets the value of the 'subType' field.
      * @param value The value of 'subType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setSubType(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[5], value);
      this.subTypeBuilder = null;
      this.subType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'subType' field has been set.
      * @return True if the 'subType' field has been set, false otherwise.
      */
    public boolean hasSubType() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'subType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getSubTypeBuilder() {
      if (subTypeBuilder == null) {
        if (hasSubType()) {
          setSubTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(subType));
        } else {
          setSubTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return subTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'subType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setSubTypeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearSubType();
      subTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subType' field has an active Builder instance
     * @return True if the 'subType' field has an active Builder instance
     */
    public boolean hasSubTypeBuilder() {
      return subTypeBuilder != null;
    }

    /**
      * Clears the value of the 'subType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearSubType() {
      subType = null;
      subTypeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'use' field.
      * @return The value.
      */
    public java.lang.CharSequence getUse() {
      return use;
    }


    /**
      * Sets the value of the 'use' field.
      * @param value The value of 'use'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setUse(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.use = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'use' field has been set.
      * @return True if the 'use' field has been set, false otherwise.
      */
    public boolean hasUse() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'use' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearUse() {
      use = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'patient' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Patient getPatient() {
      return patient;
    }


    /**
      * Sets the value of the 'patient' field.
      * @param value The value of 'patient'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setPatient(io.carrera.fhir.avro.models.Patient value) {
      validate(fields()[7], value);
      this.patientBuilder = null;
      this.patient = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'patient' field has been set.
      * @return True if the 'patient' field has been set, false otherwise.
      */
    public boolean hasPatient() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'patient' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Patient.Builder getPatientBuilder() {
      if (patientBuilder == null) {
        if (hasPatient()) {
          setPatientBuilder(io.carrera.fhir.avro.models.Patient.newBuilder(patient));
        } else {
          setPatientBuilder(io.carrera.fhir.avro.models.Patient.newBuilder());
        }
      }
      return patientBuilder;
    }

    /**
     * Sets the Builder instance for the 'patient' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setPatientBuilder(io.carrera.fhir.avro.models.Patient.Builder value) {
      clearPatient();
      patientBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'patient' field has an active Builder instance
     * @return True if the 'patient' field has an active Builder instance
     */
    public boolean hasPatientBuilder() {
      return patientBuilder != null;
    }

    /**
      * Clears the value of the 'patient' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearPatient() {
      patient = null;
      patientBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'billablePeriod' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Period getBillablePeriod() {
      return billablePeriod;
    }


    /**
      * Sets the value of the 'billablePeriod' field.
      * @param value The value of 'billablePeriod'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setBillablePeriod(io.carrera.fhir.avro.models.Period value) {
      validate(fields()[8], value);
      this.billablePeriodBuilder = null;
      this.billablePeriod = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'billablePeriod' field has been set.
      * @return True if the 'billablePeriod' field has been set, false otherwise.
      */
    public boolean hasBillablePeriod() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'billablePeriod' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Period.Builder getBillablePeriodBuilder() {
      if (billablePeriodBuilder == null) {
        if (hasBillablePeriod()) {
          setBillablePeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder(billablePeriod));
        } else {
          setBillablePeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder());
        }
      }
      return billablePeriodBuilder;
    }

    /**
     * Sets the Builder instance for the 'billablePeriod' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setBillablePeriodBuilder(io.carrera.fhir.avro.models.Period.Builder value) {
      clearBillablePeriod();
      billablePeriodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'billablePeriod' field has an active Builder instance
     * @return True if the 'billablePeriod' field has an active Builder instance
     */
    public boolean hasBillablePeriodBuilder() {
      return billablePeriodBuilder != null;
    }

    /**
      * Clears the value of the 'billablePeriod' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearBillablePeriod() {
      billablePeriod = null;
      billablePeriodBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'created' field.
      * @return The value.
      */
    public int getCreated() {
      return created;
    }


    /**
      * Sets the value of the 'created' field.
      * @param value The value of 'created'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setCreated(int value) {
      validate(fields()[9], value);
      this.created = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'created' field has been set.
      * @return True if the 'created' field has been set, false otherwise.
      */
    public boolean hasCreated() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'created' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearCreated() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'provider' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getProvider() {
      return provider;
    }


    /**
      * Sets the value of the 'provider' field.
      * @param value The value of 'provider'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setProvider(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[10], value);
      this.providerBuilder = null;
      this.provider = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'provider' field has been set.
      * @return True if the 'provider' field has been set, false otherwise.
      */
    public boolean hasProvider() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'provider' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getProviderBuilder() {
      if (providerBuilder == null) {
        if (hasProvider()) {
          setProviderBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(provider));
        } else {
          setProviderBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return providerBuilder;
    }

    /**
     * Sets the Builder instance for the 'provider' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setProviderBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearProvider();
      providerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'provider' field has an active Builder instance
     * @return True if the 'provider' field has an active Builder instance
     */
    public boolean hasProviderBuilder() {
      return providerBuilder != null;
    }

    /**
      * Clears the value of the 'provider' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearProvider() {
      provider = null;
      providerBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'priority' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getPriority() {
      return priority;
    }


    /**
      * Sets the value of the 'priority' field.
      * @param value The value of 'priority'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setPriority(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[11], value);
      this.priorityBuilder = null;
      this.priority = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'priority' field has been set.
      * @return True if the 'priority' field has been set, false otherwise.
      */
    public boolean hasPriority() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'priority' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getPriorityBuilder() {
      if (priorityBuilder == null) {
        if (hasPriority()) {
          setPriorityBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(priority));
        } else {
          setPriorityBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return priorityBuilder;
    }

    /**
     * Sets the Builder instance for the 'priority' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setPriorityBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearPriority();
      priorityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'priority' field has an active Builder instance
     * @return True if the 'priority' field has an active Builder instance
     */
    public boolean hasPriorityBuilder() {
      return priorityBuilder != null;
    }

    /**
      * Clears the value of the 'priority' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearPriority() {
      priority = null;
      priorityBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'insurance' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Insurance getInsurance() {
      return insurance;
    }


    /**
      * Sets the value of the 'insurance' field.
      * @param value The value of 'insurance'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setInsurance(io.carrera.fhir.avro.models.Insurance value) {
      validate(fields()[12], value);
      this.insuranceBuilder = null;
      this.insurance = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'insurance' field has been set.
      * @return True if the 'insurance' field has been set, false otherwise.
      */
    public boolean hasInsurance() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'insurance' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Insurance.Builder getInsuranceBuilder() {
      if (insuranceBuilder == null) {
        if (hasInsurance()) {
          setInsuranceBuilder(io.carrera.fhir.avro.models.Insurance.newBuilder(insurance));
        } else {
          setInsuranceBuilder(io.carrera.fhir.avro.models.Insurance.newBuilder());
        }
      }
      return insuranceBuilder;
    }

    /**
     * Sets the Builder instance for the 'insurance' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Claim.Builder setInsuranceBuilder(io.carrera.fhir.avro.models.Insurance.Builder value) {
      clearInsurance();
      insuranceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'insurance' field has an active Builder instance
     * @return True if the 'insurance' field has an active Builder instance
     */
    public boolean hasInsuranceBuilder() {
      return insuranceBuilder != null;
    }

    /**
      * Clears the value of the 'insurance' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearInsurance() {
      insurance = null;
      insuranceBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'item' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Item> getItem() {
      return item;
    }


    /**
      * Sets the value of the 'item' field.
      * @param value The value of 'item'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder setItem(java.util.List<io.carrera.fhir.avro.models.Item> value) {
      validate(fields()[13], value);
      this.item = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'item' field has been set.
      * @return True if the 'item' field has been set, false otherwise.
      */
    public boolean hasItem() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'item' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Claim.Builder clearItem() {
      item = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Claim build() {
      try {
        Claim record = new Claim();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.identifier = fieldSetFlags()[2] ? this.identifier : (java.util.List<io.carrera.fhir.avro.models.identifier_record>) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[4] ? this.type : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        if (subTypeBuilder != null) {
          try {
            record.subType = this.subTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subType"));
            throw e;
          }
        } else {
          record.subType = fieldSetFlags()[5] ? this.subType : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[5]);
        }
        record.use = fieldSetFlags()[6] ? this.use : (java.lang.CharSequence) defaultValue(fields()[6]);
        if (patientBuilder != null) {
          try {
            record.patient = this.patientBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("patient"));
            throw e;
          }
        } else {
          record.patient = fieldSetFlags()[7] ? this.patient : (io.carrera.fhir.avro.models.Patient) defaultValue(fields()[7]);
        }
        if (billablePeriodBuilder != null) {
          try {
            record.billablePeriod = this.billablePeriodBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("billablePeriod"));
            throw e;
          }
        } else {
          record.billablePeriod = fieldSetFlags()[8] ? this.billablePeriod : (io.carrera.fhir.avro.models.Period) defaultValue(fields()[8]);
        }
        record.created = fieldSetFlags()[9] ? this.created : (java.lang.Integer) defaultValue(fields()[9]);
        if (providerBuilder != null) {
          try {
            record.provider = this.providerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("provider"));
            throw e;
          }
        } else {
          record.provider = fieldSetFlags()[10] ? this.provider : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[10]);
        }
        if (priorityBuilder != null) {
          try {
            record.priority = this.priorityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("priority"));
            throw e;
          }
        } else {
          record.priority = fieldSetFlags()[11] ? this.priority : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[11]);
        }
        if (insuranceBuilder != null) {
          try {
            record.insurance = this.insuranceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("insurance"));
            throw e;
          }
        } else {
          record.insurance = fieldSetFlags()[12] ? this.insurance : (io.carrera.fhir.avro.models.Insurance) defaultValue(fields()[12]);
        }
        record.item = fieldSetFlags()[13] ? this.item : (java.util.List<io.carrera.fhir.avro.models.Item>) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Claim>
    WRITER$ = (org.apache.avro.io.DatumWriter<Claim>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Claim>
    READER$ = (org.apache.avro.io.DatumReader<Claim>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










