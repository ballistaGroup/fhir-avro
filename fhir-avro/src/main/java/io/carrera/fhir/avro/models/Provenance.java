/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Provenance extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8093971834506557073L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Provenance\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"target\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"occurred\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"record\",\"name\":\"XsDateTime\",\"fields\":[{\"name\":\"millis\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"XsDate\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"type\":\"record\",\"name\":\"XsYearMonth\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"}]},{\"type\":\"record\",\"name\":\"XsYear\",\"fields\":[{\"name\":\"value\",\"type\":\"int\"}]}]}]},{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",\"DateTime\"],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",\"DateTime\"],\"default\":null}]}],\"default\":null},{\"name\":\"recorded\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Instant\",\"fields\":[{\"name\":\"value\",\"type\":\"XsDateTime\"}]}],\"default\":null},{\"name\":\"agent\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Provenance_Agent\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"who\",\"type\":\"Reference\"},{\"name\":\"onBehalfOf\",\"type\":[\"null\",\"Reference\"],\"default\":null}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Provenance> ENCODER =
      new BinaryMessageEncoder<Provenance>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Provenance> DECODER =
      new BinaryMessageDecoder<Provenance>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Provenance> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Provenance> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Provenance> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Provenance>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Provenance to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Provenance from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Provenance instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Provenance fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private io.carrera.fhir.avro.models.Reference target;
   private java.lang.Object occurred;
   private io.carrera.fhir.avro.models.Instant recorded;
   private java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> agent;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Provenance() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param target The new value for target
   * @param occurred The new value for occurred
   * @param recorded The new value for recorded
   * @param agent The new value for agent
   */
  public Provenance(java.lang.CharSequence resourceType, java.lang.CharSequence id, io.carrera.fhir.avro.models.Reference target, java.lang.Object occurred, io.carrera.fhir.avro.models.Instant recorded, java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> agent) {
    this.resourceType = resourceType;
    this.id = id;
    this.target = target;
    this.occurred = occurred;
    this.recorded = recorded;
    this.agent = agent;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return target;
    case 3: return occurred;
    case 4: return recorded;
    case 5: return agent;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: target = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 3: occurred = value$; break;
    case 4: recorded = (io.carrera.fhir.avro.models.Instant)value$; break;
    case 5: agent = (java.util.List<io.carrera.fhir.avro.models.Provenance_Agent>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'target' field.
   * @return The value of the 'target' field.
   */
  public io.carrera.fhir.avro.models.Reference getTarget() {
    return target;
  }


  /**
   * Sets the value of the 'target' field.
   * @param value the value to set.
   */
  public void setTarget(io.carrera.fhir.avro.models.Reference value) {
    this.target = value;
  }

  /**
   * Gets the value of the 'occurred' field.
   * @return The value of the 'occurred' field.
   */
  public java.lang.Object getOccurred() {
    return occurred;
  }


  /**
   * Sets the value of the 'occurred' field.
   * @param value the value to set.
   */
  public void setOccurred(java.lang.Object value) {
    this.occurred = value;
  }

  /**
   * Gets the value of the 'recorded' field.
   * @return The value of the 'recorded' field.
   */
  public io.carrera.fhir.avro.models.Instant getRecorded() {
    return recorded;
  }


  /**
   * Sets the value of the 'recorded' field.
   * @param value the value to set.
   */
  public void setRecorded(io.carrera.fhir.avro.models.Instant value) {
    this.recorded = value;
  }

  /**
   * Gets the value of the 'agent' field.
   * @return The value of the 'agent' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> getAgent() {
    return agent;
  }


  /**
   * Sets the value of the 'agent' field.
   * @param value the value to set.
   */
  public void setAgent(java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> value) {
    this.agent = value;
  }

  /**
   * Creates a new Provenance RecordBuilder.
   * @return A new Provenance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Provenance.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Provenance.Builder();
  }

  /**
   * Creates a new Provenance RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Provenance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Provenance.Builder newBuilder(io.carrera.fhir.avro.models.Provenance.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Provenance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Provenance.Builder(other);
    }
  }

  /**
   * Creates a new Provenance RecordBuilder by copying an existing Provenance instance.
   * @param other The existing instance to copy.
   * @return A new Provenance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Provenance.Builder newBuilder(io.carrera.fhir.avro.models.Provenance other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Provenance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Provenance.Builder(other);
    }
  }

  /**
   * RecordBuilder for Provenance instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Provenance>
    implements org.apache.avro.data.RecordBuilder<Provenance> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private io.carrera.fhir.avro.models.Reference target;
    private io.carrera.fhir.avro.models.Reference.Builder targetBuilder;
    private java.lang.Object occurred;
    private io.carrera.fhir.avro.models.Instant recorded;
    private io.carrera.fhir.avro.models.Instant.Builder recordedBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> agent;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Provenance.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasTargetBuilder()) {
        this.targetBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getTargetBuilder());
      }
      if (isValidValue(fields()[3], other.occurred)) {
        this.occurred = data().deepCopy(fields()[3].schema(), other.occurred);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.recorded)) {
        this.recorded = data().deepCopy(fields()[4].schema(), other.recorded);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasRecordedBuilder()) {
        this.recordedBuilder = io.carrera.fhir.avro.models.Instant.newBuilder(other.getRecordedBuilder());
      }
      if (isValidValue(fields()[5], other.agent)) {
        this.agent = data().deepCopy(fields()[5].schema(), other.agent);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing Provenance instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Provenance other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = true;
      }
      this.targetBuilder = null;
      if (isValidValue(fields()[3], other.occurred)) {
        this.occurred = data().deepCopy(fields()[3].schema(), other.occurred);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.recorded)) {
        this.recorded = data().deepCopy(fields()[4].schema(), other.recorded);
        fieldSetFlags()[4] = true;
      }
      this.recordedBuilder = null;
      if (isValidValue(fields()[5], other.agent)) {
        this.agent = data().deepCopy(fields()[5].schema(), other.agent);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'target' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getTarget() {
      return target;
    }


    /**
      * Sets the value of the 'target' field.
      * @param value The value of 'target'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder setTarget(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[2], value);
      this.targetBuilder = null;
      this.target = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'target' field has been set.
      * @return True if the 'target' field has been set, false otherwise.
      */
    public boolean hasTarget() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'target' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getTargetBuilder() {
      if (targetBuilder == null) {
        if (hasTarget()) {
          setTargetBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(target));
        } else {
          setTargetBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return targetBuilder;
    }

    /**
     * Sets the Builder instance for the 'target' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Provenance.Builder setTargetBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearTarget();
      targetBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'target' field has an active Builder instance
     * @return True if the 'target' field has an active Builder instance
     */
    public boolean hasTargetBuilder() {
      return targetBuilder != null;
    }

    /**
      * Clears the value of the 'target' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder clearTarget() {
      target = null;
      targetBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'occurred' field.
      * @return The value.
      */
    public java.lang.Object getOccurred() {
      return occurred;
    }


    /**
      * Sets the value of the 'occurred' field.
      * @param value The value of 'occurred'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder setOccurred(java.lang.Object value) {
      validate(fields()[3], value);
      this.occurred = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'occurred' field has been set.
      * @return True if the 'occurred' field has been set, false otherwise.
      */
    public boolean hasOccurred() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'occurred' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder clearOccurred() {
      occurred = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'recorded' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Instant getRecorded() {
      return recorded;
    }


    /**
      * Sets the value of the 'recorded' field.
      * @param value The value of 'recorded'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder setRecorded(io.carrera.fhir.avro.models.Instant value) {
      validate(fields()[4], value);
      this.recordedBuilder = null;
      this.recorded = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'recorded' field has been set.
      * @return True if the 'recorded' field has been set, false otherwise.
      */
    public boolean hasRecorded() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'recorded' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Instant.Builder getRecordedBuilder() {
      if (recordedBuilder == null) {
        if (hasRecorded()) {
          setRecordedBuilder(io.carrera.fhir.avro.models.Instant.newBuilder(recorded));
        } else {
          setRecordedBuilder(io.carrera.fhir.avro.models.Instant.newBuilder());
        }
      }
      return recordedBuilder;
    }

    /**
     * Sets the Builder instance for the 'recorded' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Provenance.Builder setRecordedBuilder(io.carrera.fhir.avro.models.Instant.Builder value) {
      clearRecorded();
      recordedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'recorded' field has an active Builder instance
     * @return True if the 'recorded' field has an active Builder instance
     */
    public boolean hasRecordedBuilder() {
      return recordedBuilder != null;
    }

    /**
      * Clears the value of the 'recorded' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder clearRecorded() {
      recorded = null;
      recordedBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'agent' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> getAgent() {
      return agent;
    }


    /**
      * Sets the value of the 'agent' field.
      * @param value The value of 'agent'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder setAgent(java.util.List<io.carrera.fhir.avro.models.Provenance_Agent> value) {
      validate(fields()[5], value);
      this.agent = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'agent' field has been set.
      * @return True if the 'agent' field has been set, false otherwise.
      */
    public boolean hasAgent() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'agent' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Provenance.Builder clearAgent() {
      agent = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Provenance build() {
      try {
        Provenance record = new Provenance();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (targetBuilder != null) {
          try {
            record.target = this.targetBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("target"));
            throw e;
          }
        } else {
          record.target = fieldSetFlags()[2] ? this.target : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[2]);
        }
        record.occurred = fieldSetFlags()[3] ? this.occurred :  defaultValue(fields()[3]);
        if (recordedBuilder != null) {
          try {
            record.recorded = this.recordedBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("recorded"));
            throw e;
          }
        } else {
          record.recorded = fieldSetFlags()[4] ? this.recorded : (io.carrera.fhir.avro.models.Instant) defaultValue(fields()[4]);
        }
        record.agent = fieldSetFlags()[5] ? this.agent : (java.util.List<io.carrera.fhir.avro.models.Provenance_Agent>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Provenance>
    WRITER$ = (org.apache.avro.io.DatumWriter<Provenance>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Provenance>
    READER$ = (org.apache.avro.io.DatumReader<Provenance>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










