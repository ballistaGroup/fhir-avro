/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Item extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5091359817315548728L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Item\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"sequence\",\"type\":\"int\"},{\"name\":\"productOrService\",\"type\":{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Item> ENCODER =
      new BinaryMessageEncoder<Item>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Item> DECODER =
      new BinaryMessageDecoder<Item>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Item> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Item> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Item> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Item>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Item to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Item from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Item instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Item fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int sequence;
   private io.carrera.fhir.avro.models.CodeableConcept productOrService;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Item() {}

  /**
   * All-args constructor.
   * @param sequence The new value for sequence
   * @param productOrService The new value for productOrService
   */
  public Item(java.lang.Integer sequence, io.carrera.fhir.avro.models.CodeableConcept productOrService) {
    this.sequence = sequence;
    this.productOrService = productOrService;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sequence;
    case 1: return productOrService;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sequence = (java.lang.Integer)value$; break;
    case 1: productOrService = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'sequence' field.
   * @return The value of the 'sequence' field.
   */
  public int getSequence() {
    return sequence;
  }


  /**
   * Sets the value of the 'sequence' field.
   * @param value the value to set.
   */
  public void setSequence(int value) {
    this.sequence = value;
  }

  /**
   * Gets the value of the 'productOrService' field.
   * @return The value of the 'productOrService' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getProductOrService() {
    return productOrService;
  }


  /**
   * Sets the value of the 'productOrService' field.
   * @param value the value to set.
   */
  public void setProductOrService(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.productOrService = value;
  }

  /**
   * Creates a new Item RecordBuilder.
   * @return A new Item RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Item.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Item.Builder();
  }

  /**
   * Creates a new Item RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Item RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Item.Builder newBuilder(io.carrera.fhir.avro.models.Item.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Item.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Item.Builder(other);
    }
  }

  /**
   * Creates a new Item RecordBuilder by copying an existing Item instance.
   * @param other The existing instance to copy.
   * @return A new Item RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Item.Builder newBuilder(io.carrera.fhir.avro.models.Item other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Item.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Item.Builder(other);
    }
  }

  /**
   * RecordBuilder for Item instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Item>
    implements org.apache.avro.data.RecordBuilder<Item> {

    private int sequence;
    private io.carrera.fhir.avro.models.CodeableConcept productOrService;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder productOrServiceBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Item.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sequence)) {
        this.sequence = data().deepCopy(fields()[0].schema(), other.sequence);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.productOrService)) {
        this.productOrService = data().deepCopy(fields()[1].schema(), other.productOrService);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasProductOrServiceBuilder()) {
        this.productOrServiceBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getProductOrServiceBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Item instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Item other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.sequence)) {
        this.sequence = data().deepCopy(fields()[0].schema(), other.sequence);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productOrService)) {
        this.productOrService = data().deepCopy(fields()[1].schema(), other.productOrService);
        fieldSetFlags()[1] = true;
      }
      this.productOrServiceBuilder = null;
    }

    /**
      * Gets the value of the 'sequence' field.
      * @return The value.
      */
    public int getSequence() {
      return sequence;
    }


    /**
      * Sets the value of the 'sequence' field.
      * @param value The value of 'sequence'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Item.Builder setSequence(int value) {
      validate(fields()[0], value);
      this.sequence = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sequence' field has been set.
      * @return True if the 'sequence' field has been set, false otherwise.
      */
    public boolean hasSequence() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sequence' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Item.Builder clearSequence() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productOrService' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getProductOrService() {
      return productOrService;
    }


    /**
      * Sets the value of the 'productOrService' field.
      * @param value The value of 'productOrService'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Item.Builder setProductOrService(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[1], value);
      this.productOrServiceBuilder = null;
      this.productOrService = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productOrService' field has been set.
      * @return True if the 'productOrService' field has been set, false otherwise.
      */
    public boolean hasProductOrService() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'productOrService' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getProductOrServiceBuilder() {
      if (productOrServiceBuilder == null) {
        if (hasProductOrService()) {
          setProductOrServiceBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(productOrService));
        } else {
          setProductOrServiceBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return productOrServiceBuilder;
    }

    /**
     * Sets the Builder instance for the 'productOrService' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Item.Builder setProductOrServiceBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearProductOrService();
      productOrServiceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'productOrService' field has an active Builder instance
     * @return True if the 'productOrService' field has an active Builder instance
     */
    public boolean hasProductOrServiceBuilder() {
      return productOrServiceBuilder != null;
    }

    /**
      * Clears the value of the 'productOrService' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Item.Builder clearProductOrService() {
      productOrService = null;
      productOrServiceBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Item build() {
      try {
        Item record = new Item();
        record.sequence = fieldSetFlags()[0] ? this.sequence : (java.lang.Integer) defaultValue(fields()[0]);
        if (productOrServiceBuilder != null) {
          try {
            record.productOrService = this.productOrServiceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("productOrService"));
            throw e;
          }
        } else {
          record.productOrService = fieldSetFlags()[1] ? this.productOrService : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Item>
    WRITER$ = (org.apache.avro.io.DatumWriter<Item>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Item>
    READER$ = (org.apache.avro.io.DatumReader<Item>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.sequence);

    this.productOrService.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.sequence = in.readInt();

      if (this.productOrService == null) {
        this.productOrService = new io.carrera.fhir.avro.models.CodeableConcept();
      }
      this.productOrService.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.sequence = in.readInt();
          break;

        case 1:
          if (this.productOrService == null) {
            this.productOrService = new io.carrera.fhir.avro.models.CodeableConcept();
          }
          this.productOrService.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










