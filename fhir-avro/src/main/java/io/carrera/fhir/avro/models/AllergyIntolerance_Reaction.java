/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AllergyIntolerance_Reaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6635893383058747102L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AllergyIntolerance_Reaction\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"substance\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"manifestation\",\"type\":{\"type\":\"array\",\"items\":\"CodeableConcept\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AllergyIntolerance_Reaction> ENCODER =
      new BinaryMessageEncoder<AllergyIntolerance_Reaction>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AllergyIntolerance_Reaction> DECODER =
      new BinaryMessageDecoder<AllergyIntolerance_Reaction>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AllergyIntolerance_Reaction> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AllergyIntolerance_Reaction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AllergyIntolerance_Reaction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AllergyIntolerance_Reaction>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AllergyIntolerance_Reaction to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AllergyIntolerance_Reaction from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AllergyIntolerance_Reaction instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AllergyIntolerance_Reaction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private io.carrera.fhir.avro.models.CodeableConcept substance;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> manifestation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AllergyIntolerance_Reaction() {}

  /**
   * All-args constructor.
   * @param substance The new value for substance
   * @param manifestation The new value for manifestation
   */
  public AllergyIntolerance_Reaction(io.carrera.fhir.avro.models.CodeableConcept substance, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> manifestation) {
    this.substance = substance;
    this.manifestation = manifestation;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return substance;
    case 1: return manifestation;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: substance = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 1: manifestation = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'substance' field.
   * @return The value of the 'substance' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getSubstance() {
    return substance;
  }


  /**
   * Sets the value of the 'substance' field.
   * @param value the value to set.
   */
  public void setSubstance(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.substance = value;
  }

  /**
   * Gets the value of the 'manifestation' field.
   * @return The value of the 'manifestation' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getManifestation() {
    return manifestation;
  }


  /**
   * Sets the value of the 'manifestation' field.
   * @param value the value to set.
   */
  public void setManifestation(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.manifestation = value;
  }

  /**
   * Creates a new AllergyIntolerance_Reaction RecordBuilder.
   * @return A new AllergyIntolerance_Reaction RecordBuilder
   */
  public static io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder();
  }

  /**
   * Creates a new AllergyIntolerance_Reaction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AllergyIntolerance_Reaction RecordBuilder
   */
  public static io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder newBuilder(io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder();
    } else {
      return new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder(other);
    }
  }

  /**
   * Creates a new AllergyIntolerance_Reaction RecordBuilder by copying an existing AllergyIntolerance_Reaction instance.
   * @param other The existing instance to copy.
   * @return A new AllergyIntolerance_Reaction RecordBuilder
   */
  public static io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder newBuilder(io.carrera.fhir.avro.models.AllergyIntolerance_Reaction other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder();
    } else {
      return new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder(other);
    }
  }

  /**
   * RecordBuilder for AllergyIntolerance_Reaction instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AllergyIntolerance_Reaction>
    implements org.apache.avro.data.RecordBuilder<AllergyIntolerance_Reaction> {

    private io.carrera.fhir.avro.models.CodeableConcept substance;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder substanceBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> manifestation;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.substance)) {
        this.substance = data().deepCopy(fields()[0].schema(), other.substance);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasSubstanceBuilder()) {
        this.substanceBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getSubstanceBuilder());
      }
      if (isValidValue(fields()[1], other.manifestation)) {
        this.manifestation = data().deepCopy(fields()[1].schema(), other.manifestation);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing AllergyIntolerance_Reaction instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.AllergyIntolerance_Reaction other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.substance)) {
        this.substance = data().deepCopy(fields()[0].schema(), other.substance);
        fieldSetFlags()[0] = true;
      }
      this.substanceBuilder = null;
      if (isValidValue(fields()[1], other.manifestation)) {
        this.manifestation = data().deepCopy(fields()[1].schema(), other.manifestation);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'substance' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getSubstance() {
      return substance;
    }


    /**
      * Sets the value of the 'substance' field.
      * @param value The value of 'substance'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder setSubstance(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[0], value);
      this.substanceBuilder = null;
      this.substance = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'substance' field has been set.
      * @return True if the 'substance' field has been set, false otherwise.
      */
    public boolean hasSubstance() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'substance' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getSubstanceBuilder() {
      if (substanceBuilder == null) {
        if (hasSubstance()) {
          setSubstanceBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(substance));
        } else {
          setSubstanceBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return substanceBuilder;
    }

    /**
     * Sets the Builder instance for the 'substance' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder setSubstanceBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearSubstance();
      substanceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'substance' field has an active Builder instance
     * @return True if the 'substance' field has an active Builder instance
     */
    public boolean hasSubstanceBuilder() {
      return substanceBuilder != null;
    }

    /**
      * Clears the value of the 'substance' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder clearSubstance() {
      substance = null;
      substanceBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'manifestation' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getManifestation() {
      return manifestation;
    }


    /**
      * Sets the value of the 'manifestation' field.
      * @param value The value of 'manifestation'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder setManifestation(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[1], value);
      this.manifestation = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'manifestation' field has been set.
      * @return True if the 'manifestation' field has been set, false otherwise.
      */
    public boolean hasManifestation() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'manifestation' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance_Reaction.Builder clearManifestation() {
      manifestation = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AllergyIntolerance_Reaction build() {
      try {
        AllergyIntolerance_Reaction record = new AllergyIntolerance_Reaction();
        if (substanceBuilder != null) {
          try {
            record.substance = this.substanceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("substance"));
            throw e;
          }
        } else {
          record.substance = fieldSetFlags()[0] ? this.substance : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[0]);
        }
        record.manifestation = fieldSetFlags()[1] ? this.manifestation : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AllergyIntolerance_Reaction>
    WRITER$ = (org.apache.avro.io.DatumWriter<AllergyIntolerance_Reaction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AllergyIntolerance_Reaction>
    READER$ = (org.apache.avro.io.DatumReader<AllergyIntolerance_Reaction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.substance == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.substance.customEncode(out);
    }

    long size0 = this.manifestation.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (io.carrera.fhir.avro.models.CodeableConcept e0: this.manifestation) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.substance = null;
      } else {
        if (this.substance == null) {
          this.substance = new io.carrera.fhir.avro.models.CodeableConcept();
        }
        this.substance.customDecode(in);
      }

      long size0 = in.readArrayStart();
      java.util.List<io.carrera.fhir.avro.models.CodeableConcept> a0 = this.manifestation;
      if (a0 == null) {
        a0 = new SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>((int)size0, SCHEMA$.getField("manifestation").schema());
        this.manifestation = a0;
      } else a0.clear();
      SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          io.carrera.fhir.avro.models.CodeableConcept e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new io.carrera.fhir.avro.models.CodeableConcept();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.substance = null;
          } else {
            if (this.substance == null) {
              this.substance = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            this.substance.customDecode(in);
          }
          break;

        case 1:
          long size0 = in.readArrayStart();
          java.util.List<io.carrera.fhir.avro.models.CodeableConcept> a0 = this.manifestation;
          if (a0 == null) {
            a0 = new SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>((int)size0, SCHEMA$.getField("manifestation").schema());
            this.manifestation = a0;
          } else a0.clear();
          SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.CodeableConcept>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              io.carrera.fhir.avro.models.CodeableConcept e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new io.carrera.fhir.avro.models.CodeableConcept();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










