/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AllergyIntolerance extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 421598972086410918L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AllergyIntolerance\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"clinicalStatus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"verificationStatus\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"patient\",\"type\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"reaction\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AllergyIntolerance_Reaction\",\"fields\":[{\"name\":\"substance\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"manifestation\",\"type\":{\"type\":\"array\",\"items\":\"CodeableConcept\"}}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AllergyIntolerance> ENCODER =
      new BinaryMessageEncoder<AllergyIntolerance>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AllergyIntolerance> DECODER =
      new BinaryMessageDecoder<AllergyIntolerance>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AllergyIntolerance> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AllergyIntolerance> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AllergyIntolerance> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AllergyIntolerance>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AllergyIntolerance to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AllergyIntolerance from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AllergyIntolerance instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AllergyIntolerance fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.lang.CharSequence type;
   private io.carrera.fhir.avro.models.CodeableConcept clinicalStatus;
   private io.carrera.fhir.avro.models.CodeableConcept verificationStatus;
   private java.util.List<java.lang.CharSequence> category;
   private io.carrera.fhir.avro.models.CodeableConcept code;
   private io.carrera.fhir.avro.models.Reference patient;
   private java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> reaction;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AllergyIntolerance() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param type The new value for type
   * @param clinicalStatus The new value for clinicalStatus
   * @param verificationStatus The new value for verificationStatus
   * @param category The new value for category
   * @param code The new value for code
   * @param patient The new value for patient
   * @param reaction The new value for reaction
   */
  public AllergyIntolerance(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.lang.CharSequence type, io.carrera.fhir.avro.models.CodeableConcept clinicalStatus, io.carrera.fhir.avro.models.CodeableConcept verificationStatus, java.util.List<java.lang.CharSequence> category, io.carrera.fhir.avro.models.CodeableConcept code, io.carrera.fhir.avro.models.Reference patient, java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> reaction) {
    this.resourceType = resourceType;
    this.id = id;
    this.type = type;
    this.clinicalStatus = clinicalStatus;
    this.verificationStatus = verificationStatus;
    this.category = category;
    this.code = code;
    this.patient = patient;
    this.reaction = reaction;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return type;
    case 3: return clinicalStatus;
    case 4: return verificationStatus;
    case 5: return category;
    case 6: return code;
    case 7: return patient;
    case 8: return reaction;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    case 3: clinicalStatus = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 4: verificationStatus = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 5: category = (java.util.List<java.lang.CharSequence>)value$; break;
    case 6: code = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 7: patient = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 8: reaction = (java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'clinicalStatus' field.
   * @return The value of the 'clinicalStatus' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getClinicalStatus() {
    return clinicalStatus;
  }


  /**
   * Sets the value of the 'clinicalStatus' field.
   * @param value the value to set.
   */
  public void setClinicalStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.clinicalStatus = value;
  }

  /**
   * Gets the value of the 'verificationStatus' field.
   * @return The value of the 'verificationStatus' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getVerificationStatus() {
    return verificationStatus;
  }


  /**
   * Sets the value of the 'verificationStatus' field.
   * @param value the value to set.
   */
  public void setVerificationStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.verificationStatus = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.util.List<java.lang.CharSequence> getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.util.List<java.lang.CharSequence> value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'patient' field.
   * @return The value of the 'patient' field.
   */
  public io.carrera.fhir.avro.models.Reference getPatient() {
    return patient;
  }


  /**
   * Sets the value of the 'patient' field.
   * @param value the value to set.
   */
  public void setPatient(io.carrera.fhir.avro.models.Reference value) {
    this.patient = value;
  }

  /**
   * Gets the value of the 'reaction' field.
   * @return The value of the 'reaction' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> getReaction() {
    return reaction;
  }


  /**
   * Sets the value of the 'reaction' field.
   * @param value the value to set.
   */
  public void setReaction(java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> value) {
    this.reaction = value;
  }

  /**
   * Creates a new AllergyIntolerance RecordBuilder.
   * @return A new AllergyIntolerance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.AllergyIntolerance.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.AllergyIntolerance.Builder();
  }

  /**
   * Creates a new AllergyIntolerance RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AllergyIntolerance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.AllergyIntolerance.Builder newBuilder(io.carrera.fhir.avro.models.AllergyIntolerance.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.AllergyIntolerance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.AllergyIntolerance.Builder(other);
    }
  }

  /**
   * Creates a new AllergyIntolerance RecordBuilder by copying an existing AllergyIntolerance instance.
   * @param other The existing instance to copy.
   * @return A new AllergyIntolerance RecordBuilder
   */
  public static io.carrera.fhir.avro.models.AllergyIntolerance.Builder newBuilder(io.carrera.fhir.avro.models.AllergyIntolerance other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.AllergyIntolerance.Builder();
    } else {
      return new io.carrera.fhir.avro.models.AllergyIntolerance.Builder(other);
    }
  }

  /**
   * RecordBuilder for AllergyIntolerance instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AllergyIntolerance>
    implements org.apache.avro.data.RecordBuilder<AllergyIntolerance> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.lang.CharSequence type;
    private io.carrera.fhir.avro.models.CodeableConcept clinicalStatus;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder clinicalStatusBuilder;
    private io.carrera.fhir.avro.models.CodeableConcept verificationStatus;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder verificationStatusBuilder;
    private java.util.List<java.lang.CharSequence> category;
    private io.carrera.fhir.avro.models.CodeableConcept code;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder codeBuilder;
    private io.carrera.fhir.avro.models.Reference patient;
    private io.carrera.fhir.avro.models.Reference.Builder patientBuilder;
    private java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> reaction;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.AllergyIntolerance.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.clinicalStatus)) {
        this.clinicalStatus = data().deepCopy(fields()[3].schema(), other.clinicalStatus);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasClinicalStatusBuilder()) {
        this.clinicalStatusBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getClinicalStatusBuilder());
      }
      if (isValidValue(fields()[4], other.verificationStatus)) {
        this.verificationStatus = data().deepCopy(fields()[4].schema(), other.verificationStatus);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasVerificationStatusBuilder()) {
        this.verificationStatusBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getVerificationStatusBuilder());
      }
      if (isValidValue(fields()[5], other.category)) {
        this.category = data().deepCopy(fields()[5].schema(), other.category);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.code)) {
        this.code = data().deepCopy(fields()[6].schema(), other.code);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasCodeBuilder()) {
        this.codeBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getCodeBuilder());
      }
      if (isValidValue(fields()[7], other.patient)) {
        this.patient = data().deepCopy(fields()[7].schema(), other.patient);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasPatientBuilder()) {
        this.patientBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getPatientBuilder());
      }
      if (isValidValue(fields()[8], other.reaction)) {
        this.reaction = data().deepCopy(fields()[8].schema(), other.reaction);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing AllergyIntolerance instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.AllergyIntolerance other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.clinicalStatus)) {
        this.clinicalStatus = data().deepCopy(fields()[3].schema(), other.clinicalStatus);
        fieldSetFlags()[3] = true;
      }
      this.clinicalStatusBuilder = null;
      if (isValidValue(fields()[4], other.verificationStatus)) {
        this.verificationStatus = data().deepCopy(fields()[4].schema(), other.verificationStatus);
        fieldSetFlags()[4] = true;
      }
      this.verificationStatusBuilder = null;
      if (isValidValue(fields()[5], other.category)) {
        this.category = data().deepCopy(fields()[5].schema(), other.category);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.code)) {
        this.code = data().deepCopy(fields()[6].schema(), other.code);
        fieldSetFlags()[6] = true;
      }
      this.codeBuilder = null;
      if (isValidValue(fields()[7], other.patient)) {
        this.patient = data().deepCopy(fields()[7].schema(), other.patient);
        fieldSetFlags()[7] = true;
      }
      this.patientBuilder = null;
      if (isValidValue(fields()[8], other.reaction)) {
        this.reaction = data().deepCopy(fields()[8].schema(), other.reaction);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'clinicalStatus' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getClinicalStatus() {
      return clinicalStatus;
    }


    /**
      * Sets the value of the 'clinicalStatus' field.
      * @param value The value of 'clinicalStatus'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setClinicalStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[3], value);
      this.clinicalStatusBuilder = null;
      this.clinicalStatus = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'clinicalStatus' field has been set.
      * @return True if the 'clinicalStatus' field has been set, false otherwise.
      */
    public boolean hasClinicalStatus() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'clinicalStatus' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getClinicalStatusBuilder() {
      if (clinicalStatusBuilder == null) {
        if (hasClinicalStatus()) {
          setClinicalStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(clinicalStatus));
        } else {
          setClinicalStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return clinicalStatusBuilder;
    }

    /**
     * Sets the Builder instance for the 'clinicalStatus' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setClinicalStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearClinicalStatus();
      clinicalStatusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'clinicalStatus' field has an active Builder instance
     * @return True if the 'clinicalStatus' field has an active Builder instance
     */
    public boolean hasClinicalStatusBuilder() {
      return clinicalStatusBuilder != null;
    }

    /**
      * Clears the value of the 'clinicalStatus' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearClinicalStatus() {
      clinicalStatus = null;
      clinicalStatusBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'verificationStatus' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getVerificationStatus() {
      return verificationStatus;
    }


    /**
      * Sets the value of the 'verificationStatus' field.
      * @param value The value of 'verificationStatus'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setVerificationStatus(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[4], value);
      this.verificationStatusBuilder = null;
      this.verificationStatus = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'verificationStatus' field has been set.
      * @return True if the 'verificationStatus' field has been set, false otherwise.
      */
    public boolean hasVerificationStatus() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'verificationStatus' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getVerificationStatusBuilder() {
      if (verificationStatusBuilder == null) {
        if (hasVerificationStatus()) {
          setVerificationStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(verificationStatus));
        } else {
          setVerificationStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return verificationStatusBuilder;
    }

    /**
     * Sets the Builder instance for the 'verificationStatus' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setVerificationStatusBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearVerificationStatus();
      verificationStatusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'verificationStatus' field has an active Builder instance
     * @return True if the 'verificationStatus' field has an active Builder instance
     */
    public boolean hasVerificationStatusBuilder() {
      return verificationStatusBuilder != null;
    }

    /**
      * Clears the value of the 'verificationStatus' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearVerificationStatus() {
      verificationStatus = null;
      verificationStatusBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setCategory(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.category = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearCategory() {
      category = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setCode(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[6], value);
      this.codeBuilder = null;
      this.code = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'code' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getCodeBuilder() {
      if (codeBuilder == null) {
        if (hasCode()) {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(code));
        } else {
          setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return codeBuilder;
    }

    /**
     * Sets the Builder instance for the 'code' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setCodeBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearCode();
      codeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'code' field has an active Builder instance
     * @return True if the 'code' field has an active Builder instance
     */
    public boolean hasCodeBuilder() {
      return codeBuilder != null;
    }

    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearCode() {
      code = null;
      codeBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'patient' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getPatient() {
      return patient;
    }


    /**
      * Sets the value of the 'patient' field.
      * @param value The value of 'patient'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setPatient(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[7], value);
      this.patientBuilder = null;
      this.patient = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'patient' field has been set.
      * @return True if the 'patient' field has been set, false otherwise.
      */
    public boolean hasPatient() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'patient' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getPatientBuilder() {
      if (patientBuilder == null) {
        if (hasPatient()) {
          setPatientBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(patient));
        } else {
          setPatientBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return patientBuilder;
    }

    /**
     * Sets the Builder instance for the 'patient' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setPatientBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearPatient();
      patientBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'patient' field has an active Builder instance
     * @return True if the 'patient' field has an active Builder instance
     */
    public boolean hasPatientBuilder() {
      return patientBuilder != null;
    }

    /**
      * Clears the value of the 'patient' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearPatient() {
      patient = null;
      patientBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'reaction' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> getReaction() {
      return reaction;
    }


    /**
      * Sets the value of the 'reaction' field.
      * @param value The value of 'reaction'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder setReaction(java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> value) {
      validate(fields()[8], value);
      this.reaction = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'reaction' field has been set.
      * @return True if the 'reaction' field has been set, false otherwise.
      */
    public boolean hasReaction() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'reaction' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.AllergyIntolerance.Builder clearReaction() {
      reaction = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AllergyIntolerance build() {
      try {
        AllergyIntolerance record = new AllergyIntolerance();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (clinicalStatusBuilder != null) {
          try {
            record.clinicalStatus = this.clinicalStatusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("clinicalStatus"));
            throw e;
          }
        } else {
          record.clinicalStatus = fieldSetFlags()[3] ? this.clinicalStatus : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[3]);
        }
        if (verificationStatusBuilder != null) {
          try {
            record.verificationStatus = this.verificationStatusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("verificationStatus"));
            throw e;
          }
        } else {
          record.verificationStatus = fieldSetFlags()[4] ? this.verificationStatus : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[4]);
        }
        record.category = fieldSetFlags()[5] ? this.category : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[5]);
        if (codeBuilder != null) {
          try {
            record.code = this.codeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("code"));
            throw e;
          }
        } else {
          record.code = fieldSetFlags()[6] ? this.code : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[6]);
        }
        if (patientBuilder != null) {
          try {
            record.patient = this.patientBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("patient"));
            throw e;
          }
        } else {
          record.patient = fieldSetFlags()[7] ? this.patient : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[7]);
        }
        record.reaction = fieldSetFlags()[8] ? this.reaction : (java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AllergyIntolerance>
    WRITER$ = (org.apache.avro.io.DatumWriter<AllergyIntolerance>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AllergyIntolerance>
    READER$ = (org.apache.avro.io.DatumReader<AllergyIntolerance>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.resourceType);

    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.type);
    }

    if (this.clinicalStatus == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.clinicalStatus.customEncode(out);
    }

    if (this.verificationStatus == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.verificationStatus.customEncode(out);
    }

    if (this.category == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.category.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.lang.CharSequence e0: this.category) {
        actualSize0++;
        out.startItem();
        out.writeString(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.code == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.code.customEncode(out);
    }

    this.patient.customEncode(out);

    if (this.reaction == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.reaction.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (io.carrera.fhir.avro.models.AllergyIntolerance_Reaction e1: this.reaction) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.resourceType = in.readString(this.resourceType instanceof Utf8 ? (Utf8)this.resourceType : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.clinicalStatus = null;
      } else {
        if (this.clinicalStatus == null) {
          this.clinicalStatus = new io.carrera.fhir.avro.models.CodeableConcept();
        }
        this.clinicalStatus.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.verificationStatus = null;
      } else {
        if (this.verificationStatus == null) {
          this.verificationStatus = new io.carrera.fhir.avro.models.CodeableConcept();
        }
        this.verificationStatus.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.category = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a0 = this.category;
        if (a0 == null) {
          a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("category").schema().getTypes().get(1));
          this.category = a0;
        } else a0.clear();
        SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.code = null;
      } else {
        if (this.code == null) {
          this.code = new io.carrera.fhir.avro.models.CodeableConcept();
        }
        this.code.customDecode(in);
      }

      if (this.patient == null) {
        this.patient = new io.carrera.fhir.avro.models.Reference();
      }
      this.patient.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.reaction = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> a1 = this.reaction;
        if (a1 == null) {
          a1 = new SpecificData.Array<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction>((int)size1, SCHEMA$.getField("reaction").schema().getTypes().get(1));
          this.reaction = a1;
        } else a1.clear();
        SpecificData.Array<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            io.carrera.fhir.avro.models.AllergyIntolerance_Reaction e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.resourceType = in.readString(this.resourceType instanceof Utf8 ? (Utf8)this.resourceType : null);
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.clinicalStatus = null;
          } else {
            if (this.clinicalStatus == null) {
              this.clinicalStatus = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            this.clinicalStatus.customDecode(in);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.verificationStatus = null;
          } else {
            if (this.verificationStatus == null) {
              this.verificationStatus = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            this.verificationStatus.customDecode(in);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.category = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a0 = this.category;
            if (a0 == null) {
              a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("category").schema().getTypes().get(1));
              this.category = a0;
            } else a0.clear();
            SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
                a0.add(e0);
              }
            }
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.code = null;
          } else {
            if (this.code == null) {
              this.code = new io.carrera.fhir.avro.models.CodeableConcept();
            }
            this.code.customDecode(in);
          }
          break;

        case 7:
          if (this.patient == null) {
            this.patient = new io.carrera.fhir.avro.models.Reference();
          }
          this.patient.customDecode(in);
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.reaction = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> a1 = this.reaction;
            if (a1 == null) {
              a1 = new SpecificData.Array<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction>((int)size1, SCHEMA$.getField("reaction").schema().getTypes().get(1));
              this.reaction = a1;
            } else a1.clear();
            SpecificData.Array<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<io.carrera.fhir.avro.models.AllergyIntolerance_Reaction>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                io.carrera.fhir.avro.models.AllergyIntolerance_Reaction e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new io.carrera.fhir.avro.models.AllergyIntolerance_Reaction();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










