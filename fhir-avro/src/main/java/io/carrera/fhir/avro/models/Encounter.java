/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.carrera.fhir.avro.models;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Encounter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7696955270610075434L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Encounter\",\"namespace\":\"io.carrera.fhir.avro.models\",\"fields\":[{\"name\":\"resourceType\",\"type\":\"string\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"identifier\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"identifier_record\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"class\",\"type\":{\"type\":\"record\",\"name\":\"Coding\",\"fields\":[{\"name\":\"system\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userSelected\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CodeableConcept\",\"fields\":[{\"name\":\"coding\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Coding\"}],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}}],\"default\":null},{\"name\":\"priority\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"subject\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"reference\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"display\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"basedOn\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"diagnosis\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EncounterDiagnosis\",\"fields\":[{\"name\":\"condition\",\"type\":\"Reference\"},{\"name\":\"use\",\"type\":[\"null\",\"CodeableConcept\"],\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null},{\"name\":\"period\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Period\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DateTime\",\"fields\":[{\"name\":\"value\",\"type\":[{\"type\":\"record\",\"name\":\"XsDateTime\",\"fields\":[{\"name\":\"millis\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"zoneId\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"XsDate\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"type\":\"record\",\"name\":\"XsYearMonth\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"}]},{\"type\":\"record\",\"name\":\"XsYear\",\"fields\":[{\"name\":\"value\",\"type\":\"int\"}]}]}]}],\"default\":null},{\"name\":\"end\",\"type\":[\"null\",\"DateTime\"],\"default\":null}]}],\"default\":null},{\"name\":\"reasonCode\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"CodeableConcept\"}],\"default\":null},{\"name\":\"reasonReference\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Reference\"}],\"default\":null},{\"name\":\"partOf\",\"type\":[\"null\",\"Reference\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Encounter> ENCODER =
      new BinaryMessageEncoder<Encounter>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Encounter> DECODER =
      new BinaryMessageDecoder<Encounter>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Encounter> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Encounter> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Encounter> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Encounter>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Encounter to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Encounter from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Encounter instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Encounter fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence resourceType;
   private java.lang.CharSequence id;
   private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
   private java.lang.CharSequence status;
   private io.carrera.fhir.avro.models.Coding class$;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> type;
   private io.carrera.fhir.avro.models.CodeableConcept priority;
   private io.carrera.fhir.avro.models.Reference subject;
   private java.util.List<io.carrera.fhir.avro.models.Reference> basedOn;
   private java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> diagnosis;
   private io.carrera.fhir.avro.models.Period period;
   private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode;
   private java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference;
   private io.carrera.fhir.avro.models.Reference partOf;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Encounter() {}

  /**
   * All-args constructor.
   * @param resourceType The new value for resourceType
   * @param id The new value for id
   * @param identifier The new value for identifier
   * @param status The new value for status
   * @param class$ The new value for class
   * @param type The new value for type
   * @param priority The new value for priority
   * @param subject The new value for subject
   * @param basedOn The new value for basedOn
   * @param diagnosis The new value for diagnosis
   * @param period The new value for period
   * @param reasonCode The new value for reasonCode
   * @param reasonReference The new value for reasonReference
   * @param partOf The new value for partOf
   */
  public Encounter(java.lang.CharSequence resourceType, java.lang.CharSequence id, java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier, java.lang.CharSequence status, io.carrera.fhir.avro.models.Coding class$, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> type, io.carrera.fhir.avro.models.CodeableConcept priority, io.carrera.fhir.avro.models.Reference subject, java.util.List<io.carrera.fhir.avro.models.Reference> basedOn, java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> diagnosis, io.carrera.fhir.avro.models.Period period, java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode, java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference, io.carrera.fhir.avro.models.Reference partOf) {
    this.resourceType = resourceType;
    this.id = id;
    this.identifier = identifier;
    this.status = status;
    this.class$ = class$;
    this.type = type;
    this.priority = priority;
    this.subject = subject;
    this.basedOn = basedOn;
    this.diagnosis = diagnosis;
    this.period = period;
    this.reasonCode = reasonCode;
    this.reasonReference = reasonReference;
    this.partOf = partOf;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceType;
    case 1: return id;
    case 2: return identifier;
    case 3: return status;
    case 4: return class$;
    case 5: return type;
    case 6: return priority;
    case 7: return subject;
    case 8: return basedOn;
    case 9: return diagnosis;
    case 10: return period;
    case 11: return reasonCode;
    case 12: return reasonReference;
    case 13: return partOf;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceType = (java.lang.CharSequence)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: identifier = (java.util.List<io.carrera.fhir.avro.models.identifier_record>)value$; break;
    case 3: status = (java.lang.CharSequence)value$; break;
    case 4: class$ = (io.carrera.fhir.avro.models.Coding)value$; break;
    case 5: type = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 6: priority = (io.carrera.fhir.avro.models.CodeableConcept)value$; break;
    case 7: subject = (io.carrera.fhir.avro.models.Reference)value$; break;
    case 8: basedOn = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 9: diagnosis = (java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis>)value$; break;
    case 10: period = (io.carrera.fhir.avro.models.Period)value$; break;
    case 11: reasonCode = (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>)value$; break;
    case 12: reasonReference = (java.util.List<io.carrera.fhir.avro.models.Reference>)value$; break;
    case 13: partOf = (io.carrera.fhir.avro.models.Reference)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'resourceType' field.
   * @return The value of the 'resourceType' field.
   */
  public java.lang.CharSequence getResourceType() {
    return resourceType;
  }


  /**
   * Sets the value of the 'resourceType' field.
   * @param value the value to set.
   */
  public void setResourceType(java.lang.CharSequence value) {
    this.resourceType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
    return identifier;
  }


  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'class$' field.
   * @return The value of the 'class$' field.
   */
  public io.carrera.fhir.avro.models.Coding getClass$() {
    return class$;
  }


  /**
   * Sets the value of the 'class$' field.
   * @param value the value to set.
   */
  public void setClass$(io.carrera.fhir.avro.models.Coding value) {
    this.class$ = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'priority' field.
   * @return The value of the 'priority' field.
   */
  public io.carrera.fhir.avro.models.CodeableConcept getPriority() {
    return priority;
  }


  /**
   * Sets the value of the 'priority' field.
   * @param value the value to set.
   */
  public void setPriority(io.carrera.fhir.avro.models.CodeableConcept value) {
    this.priority = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public io.carrera.fhir.avro.models.Reference getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(io.carrera.fhir.avro.models.Reference value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'basedOn' field.
   * @return The value of the 'basedOn' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getBasedOn() {
    return basedOn;
  }


  /**
   * Sets the value of the 'basedOn' field.
   * @param value the value to set.
   */
  public void setBasedOn(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.basedOn = value;
  }

  /**
   * Gets the value of the 'diagnosis' field.
   * @return The value of the 'diagnosis' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> getDiagnosis() {
    return diagnosis;
  }


  /**
   * Sets the value of the 'diagnosis' field.
   * @param value the value to set.
   */
  public void setDiagnosis(java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> value) {
    this.diagnosis = value;
  }

  /**
   * Gets the value of the 'period' field.
   * @return The value of the 'period' field.
   */
  public io.carrera.fhir.avro.models.Period getPeriod() {
    return period;
  }


  /**
   * Sets the value of the 'period' field.
   * @param value the value to set.
   */
  public void setPeriod(io.carrera.fhir.avro.models.Period value) {
    this.period = value;
  }

  /**
   * Gets the value of the 'reasonCode' field.
   * @return The value of the 'reasonCode' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getReasonCode() {
    return reasonCode;
  }


  /**
   * Sets the value of the 'reasonCode' field.
   * @param value the value to set.
   */
  public void setReasonCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
    this.reasonCode = value;
  }

  /**
   * Gets the value of the 'reasonReference' field.
   * @return The value of the 'reasonReference' field.
   */
  public java.util.List<io.carrera.fhir.avro.models.Reference> getReasonReference() {
    return reasonReference;
  }


  /**
   * Sets the value of the 'reasonReference' field.
   * @param value the value to set.
   */
  public void setReasonReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
    this.reasonReference = value;
  }

  /**
   * Gets the value of the 'partOf' field.
   * @return The value of the 'partOf' field.
   */
  public io.carrera.fhir.avro.models.Reference getPartOf() {
    return partOf;
  }


  /**
   * Sets the value of the 'partOf' field.
   * @param value the value to set.
   */
  public void setPartOf(io.carrera.fhir.avro.models.Reference value) {
    this.partOf = value;
  }

  /**
   * Creates a new Encounter RecordBuilder.
   * @return A new Encounter RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Encounter.Builder newBuilder() {
    return new io.carrera.fhir.avro.models.Encounter.Builder();
  }

  /**
   * Creates a new Encounter RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Encounter RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Encounter.Builder newBuilder(io.carrera.fhir.avro.models.Encounter.Builder other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Encounter.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Encounter.Builder(other);
    }
  }

  /**
   * Creates a new Encounter RecordBuilder by copying an existing Encounter instance.
   * @param other The existing instance to copy.
   * @return A new Encounter RecordBuilder
   */
  public static io.carrera.fhir.avro.models.Encounter.Builder newBuilder(io.carrera.fhir.avro.models.Encounter other) {
    if (other == null) {
      return new io.carrera.fhir.avro.models.Encounter.Builder();
    } else {
      return new io.carrera.fhir.avro.models.Encounter.Builder(other);
    }
  }

  /**
   * RecordBuilder for Encounter instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Encounter>
    implements org.apache.avro.data.RecordBuilder<Encounter> {

    private java.lang.CharSequence resourceType;
    private java.lang.CharSequence id;
    private java.util.List<io.carrera.fhir.avro.models.identifier_record> identifier;
    private java.lang.CharSequence status;
    private io.carrera.fhir.avro.models.Coding class$;
    private io.carrera.fhir.avro.models.Coding.Builder class$Builder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> type;
    private io.carrera.fhir.avro.models.CodeableConcept priority;
    private io.carrera.fhir.avro.models.CodeableConcept.Builder priorityBuilder;
    private io.carrera.fhir.avro.models.Reference subject;
    private io.carrera.fhir.avro.models.Reference.Builder subjectBuilder;
    private java.util.List<io.carrera.fhir.avro.models.Reference> basedOn;
    private java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> diagnosis;
    private io.carrera.fhir.avro.models.Period period;
    private io.carrera.fhir.avro.models.Period.Builder periodBuilder;
    private java.util.List<io.carrera.fhir.avro.models.CodeableConcept> reasonCode;
    private java.util.List<io.carrera.fhir.avro.models.Reference> reasonReference;
    private io.carrera.fhir.avro.models.Reference partOf;
    private io.carrera.fhir.avro.models.Reference.Builder partOfBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Encounter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.class$)) {
        this.class$ = data().deepCopy(fields()[4].schema(), other.class$);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasClass$Builder()) {
        this.class$Builder = io.carrera.fhir.avro.models.Coding.newBuilder(other.getClass$Builder());
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.priority)) {
        this.priority = data().deepCopy(fields()[6].schema(), other.priority);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasPriorityBuilder()) {
        this.priorityBuilder = io.carrera.fhir.avro.models.CodeableConcept.newBuilder(other.getPriorityBuilder());
      }
      if (isValidValue(fields()[7], other.subject)) {
        this.subject = data().deepCopy(fields()[7].schema(), other.subject);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasSubjectBuilder()) {
        this.subjectBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getSubjectBuilder());
      }
      if (isValidValue(fields()[8], other.basedOn)) {
        this.basedOn = data().deepCopy(fields()[8].schema(), other.basedOn);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.diagnosis)) {
        this.diagnosis = data().deepCopy(fields()[9].schema(), other.diagnosis);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.period)) {
        this.period = data().deepCopy(fields()[10].schema(), other.period);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasPeriodBuilder()) {
        this.periodBuilder = io.carrera.fhir.avro.models.Period.newBuilder(other.getPeriodBuilder());
      }
      if (isValidValue(fields()[11], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[11].schema(), other.reasonCode);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[12].schema(), other.reasonReference);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.partOf)) {
        this.partOf = data().deepCopy(fields()[13].schema(), other.partOf);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasPartOfBuilder()) {
        this.partOfBuilder = io.carrera.fhir.avro.models.Reference.newBuilder(other.getPartOfBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Encounter instance
     * @param other The existing instance to copy.
     */
    private Builder(io.carrera.fhir.avro.models.Encounter other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.resourceType)) {
        this.resourceType = data().deepCopy(fields()[0].schema(), other.resourceType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.identifier)) {
        this.identifier = data().deepCopy(fields()[2].schema(), other.identifier);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.class$)) {
        this.class$ = data().deepCopy(fields()[4].schema(), other.class$);
        fieldSetFlags()[4] = true;
      }
      this.class$Builder = null;
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.priority)) {
        this.priority = data().deepCopy(fields()[6].schema(), other.priority);
        fieldSetFlags()[6] = true;
      }
      this.priorityBuilder = null;
      if (isValidValue(fields()[7], other.subject)) {
        this.subject = data().deepCopy(fields()[7].schema(), other.subject);
        fieldSetFlags()[7] = true;
      }
      this.subjectBuilder = null;
      if (isValidValue(fields()[8], other.basedOn)) {
        this.basedOn = data().deepCopy(fields()[8].schema(), other.basedOn);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.diagnosis)) {
        this.diagnosis = data().deepCopy(fields()[9].schema(), other.diagnosis);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.period)) {
        this.period = data().deepCopy(fields()[10].schema(), other.period);
        fieldSetFlags()[10] = true;
      }
      this.periodBuilder = null;
      if (isValidValue(fields()[11], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[11].schema(), other.reasonCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.reasonReference)) {
        this.reasonReference = data().deepCopy(fields()[12].schema(), other.reasonReference);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.partOf)) {
        this.partOf = data().deepCopy(fields()[13].schema(), other.partOf);
        fieldSetFlags()[13] = true;
      }
      this.partOfBuilder = null;
    }

    /**
      * Gets the value of the 'resourceType' field.
      * @return The value.
      */
    public java.lang.CharSequence getResourceType() {
      return resourceType;
    }


    /**
      * Sets the value of the 'resourceType' field.
      * @param value The value of 'resourceType'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setResourceType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.resourceType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'resourceType' field has been set.
      * @return True if the 'resourceType' field has been set, false otherwise.
      */
    public boolean hasResourceType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'resourceType' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearResourceType() {
      resourceType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.identifier_record> getIdentifier() {
      return identifier;
    }


    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setIdentifier(java.util.List<io.carrera.fhir.avro.models.identifier_record> value) {
      validate(fields()[2], value);
      this.identifier = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'class$' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Coding getClass$() {
      return class$;
    }


    /**
      * Sets the value of the 'class$' field.
      * @param value The value of 'class$'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setClass$(io.carrera.fhir.avro.models.Coding value) {
      validate(fields()[4], value);
      this.class$Builder = null;
      this.class$ = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'class$' field has been set.
      * @return True if the 'class$' field has been set, false otherwise.
      */
    public boolean hasClass$() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'class$' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Coding.Builder getClass$Builder() {
      if (class$Builder == null) {
        if (hasClass$()) {
          setClass$Builder(io.carrera.fhir.avro.models.Coding.newBuilder(class$));
        } else {
          setClass$Builder(io.carrera.fhir.avro.models.Coding.newBuilder());
        }
      }
      return class$Builder;
    }

    /**
     * Sets the Builder instance for the 'class$' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Encounter.Builder setClass$Builder(io.carrera.fhir.avro.models.Coding.Builder value) {
      clearClass$();
      class$Builder = value;
      return this;
    }

    /**
     * Checks whether the 'class$' field has an active Builder instance
     * @return True if the 'class$' field has an active Builder instance
     */
    public boolean hasClass$Builder() {
      return class$Builder != null;
    }

    /**
      * Clears the value of the 'class$' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearClass$() {
      class$ = null;
      class$Builder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setType(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[5], value);
      this.type = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearType() {
      type = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'priority' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.CodeableConcept getPriority() {
      return priority;
    }


    /**
      * Sets the value of the 'priority' field.
      * @param value The value of 'priority'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setPriority(io.carrera.fhir.avro.models.CodeableConcept value) {
      validate(fields()[6], value);
      this.priorityBuilder = null;
      this.priority = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'priority' field has been set.
      * @return True if the 'priority' field has been set, false otherwise.
      */
    public boolean hasPriority() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'priority' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.CodeableConcept.Builder getPriorityBuilder() {
      if (priorityBuilder == null) {
        if (hasPriority()) {
          setPriorityBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder(priority));
        } else {
          setPriorityBuilder(io.carrera.fhir.avro.models.CodeableConcept.newBuilder());
        }
      }
      return priorityBuilder;
    }

    /**
     * Sets the Builder instance for the 'priority' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Encounter.Builder setPriorityBuilder(io.carrera.fhir.avro.models.CodeableConcept.Builder value) {
      clearPriority();
      priorityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'priority' field has an active Builder instance
     * @return True if the 'priority' field has an active Builder instance
     */
    public boolean hasPriorityBuilder() {
      return priorityBuilder != null;
    }

    /**
      * Clears the value of the 'priority' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearPriority() {
      priority = null;
      priorityBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setSubject(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[7], value);
      this.subjectBuilder = null;
      this.subject = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'subject' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getSubjectBuilder() {
      if (subjectBuilder == null) {
        if (hasSubject()) {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(subject));
        } else {
          setSubjectBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return subjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'subject' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Encounter.Builder setSubjectBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearSubject();
      subjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subject' field has an active Builder instance
     * @return True if the 'subject' field has an active Builder instance
     */
    public boolean hasSubjectBuilder() {
      return subjectBuilder != null;
    }

    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearSubject() {
      subject = null;
      subjectBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'basedOn' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getBasedOn() {
      return basedOn;
    }


    /**
      * Sets the value of the 'basedOn' field.
      * @param value The value of 'basedOn'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setBasedOn(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[8], value);
      this.basedOn = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'basedOn' field has been set.
      * @return True if the 'basedOn' field has been set, false otherwise.
      */
    public boolean hasBasedOn() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'basedOn' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearBasedOn() {
      basedOn = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'diagnosis' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> getDiagnosis() {
      return diagnosis;
    }


    /**
      * Sets the value of the 'diagnosis' field.
      * @param value The value of 'diagnosis'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setDiagnosis(java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis> value) {
      validate(fields()[9], value);
      this.diagnosis = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'diagnosis' field has been set.
      * @return True if the 'diagnosis' field has been set, false otherwise.
      */
    public boolean hasDiagnosis() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'diagnosis' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearDiagnosis() {
      diagnosis = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'period' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Period getPeriod() {
      return period;
    }


    /**
      * Sets the value of the 'period' field.
      * @param value The value of 'period'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setPeriod(io.carrera.fhir.avro.models.Period value) {
      validate(fields()[10], value);
      this.periodBuilder = null;
      this.period = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'period' field has been set.
      * @return True if the 'period' field has been set, false otherwise.
      */
    public boolean hasPeriod() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'period' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Period.Builder getPeriodBuilder() {
      if (periodBuilder == null) {
        if (hasPeriod()) {
          setPeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder(period));
        } else {
          setPeriodBuilder(io.carrera.fhir.avro.models.Period.newBuilder());
        }
      }
      return periodBuilder;
    }

    /**
     * Sets the Builder instance for the 'period' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Encounter.Builder setPeriodBuilder(io.carrera.fhir.avro.models.Period.Builder value) {
      clearPeriod();
      periodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'period' field has an active Builder instance
     * @return True if the 'period' field has an active Builder instance
     */
    public boolean hasPeriodBuilder() {
      return periodBuilder != null;
    }

    /**
      * Clears the value of the 'period' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearPeriod() {
      period = null;
      periodBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonCode' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.CodeableConcept> getReasonCode() {
      return reasonCode;
    }


    /**
      * Sets the value of the 'reasonCode' field.
      * @param value The value of 'reasonCode'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setReasonCode(java.util.List<io.carrera.fhir.avro.models.CodeableConcept> value) {
      validate(fields()[11], value);
      this.reasonCode = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonCode' field has been set.
      * @return True if the 'reasonCode' field has been set, false otherwise.
      */
    public boolean hasReasonCode() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'reasonCode' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearReasonCode() {
      reasonCode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonReference' field.
      * @return The value.
      */
    public java.util.List<io.carrera.fhir.avro.models.Reference> getReasonReference() {
      return reasonReference;
    }


    /**
      * Sets the value of the 'reasonReference' field.
      * @param value The value of 'reasonReference'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setReasonReference(java.util.List<io.carrera.fhir.avro.models.Reference> value) {
      validate(fields()[12], value);
      this.reasonReference = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonReference' field has been set.
      * @return True if the 'reasonReference' field has been set, false otherwise.
      */
    public boolean hasReasonReference() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'reasonReference' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearReasonReference() {
      reasonReference = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'partOf' field.
      * @return The value.
      */
    public io.carrera.fhir.avro.models.Reference getPartOf() {
      return partOf;
    }


    /**
      * Sets the value of the 'partOf' field.
      * @param value The value of 'partOf'.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder setPartOf(io.carrera.fhir.avro.models.Reference value) {
      validate(fields()[13], value);
      this.partOfBuilder = null;
      this.partOf = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'partOf' field has been set.
      * @return True if the 'partOf' field has been set, false otherwise.
      */
    public boolean hasPartOf() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'partOf' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.carrera.fhir.avro.models.Reference.Builder getPartOfBuilder() {
      if (partOfBuilder == null) {
        if (hasPartOf()) {
          setPartOfBuilder(io.carrera.fhir.avro.models.Reference.newBuilder(partOf));
        } else {
          setPartOfBuilder(io.carrera.fhir.avro.models.Reference.newBuilder());
        }
      }
      return partOfBuilder;
    }

    /**
     * Sets the Builder instance for the 'partOf' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.carrera.fhir.avro.models.Encounter.Builder setPartOfBuilder(io.carrera.fhir.avro.models.Reference.Builder value) {
      clearPartOf();
      partOfBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'partOf' field has an active Builder instance
     * @return True if the 'partOf' field has an active Builder instance
     */
    public boolean hasPartOfBuilder() {
      return partOfBuilder != null;
    }

    /**
      * Clears the value of the 'partOf' field.
      * @return This builder.
      */
    public io.carrera.fhir.avro.models.Encounter.Builder clearPartOf() {
      partOf = null;
      partOfBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Encounter build() {
      try {
        Encounter record = new Encounter();
        record.resourceType = fieldSetFlags()[0] ? this.resourceType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.identifier = fieldSetFlags()[2] ? this.identifier : (java.util.List<io.carrera.fhir.avro.models.identifier_record>) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (class$Builder != null) {
          try {
            record.class$ = this.class$Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("class$"));
            throw e;
          }
        } else {
          record.class$ = fieldSetFlags()[4] ? this.class$ : (io.carrera.fhir.avro.models.Coding) defaultValue(fields()[4]);
        }
        record.type = fieldSetFlags()[5] ? this.type : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[5]);
        if (priorityBuilder != null) {
          try {
            record.priority = this.priorityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("priority"));
            throw e;
          }
        } else {
          record.priority = fieldSetFlags()[6] ? this.priority : (io.carrera.fhir.avro.models.CodeableConcept) defaultValue(fields()[6]);
        }
        if (subjectBuilder != null) {
          try {
            record.subject = this.subjectBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("subject"));
            throw e;
          }
        } else {
          record.subject = fieldSetFlags()[7] ? this.subject : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[7]);
        }
        record.basedOn = fieldSetFlags()[8] ? this.basedOn : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[8]);
        record.diagnosis = fieldSetFlags()[9] ? this.diagnosis : (java.util.List<io.carrera.fhir.avro.models.EncounterDiagnosis>) defaultValue(fields()[9]);
        if (periodBuilder != null) {
          try {
            record.period = this.periodBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("period"));
            throw e;
          }
        } else {
          record.period = fieldSetFlags()[10] ? this.period : (io.carrera.fhir.avro.models.Period) defaultValue(fields()[10]);
        }
        record.reasonCode = fieldSetFlags()[11] ? this.reasonCode : (java.util.List<io.carrera.fhir.avro.models.CodeableConcept>) defaultValue(fields()[11]);
        record.reasonReference = fieldSetFlags()[12] ? this.reasonReference : (java.util.List<io.carrera.fhir.avro.models.Reference>) defaultValue(fields()[12]);
        if (partOfBuilder != null) {
          try {
            record.partOf = this.partOfBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("partOf"));
            throw e;
          }
        } else {
          record.partOf = fieldSetFlags()[13] ? this.partOf : (io.carrera.fhir.avro.models.Reference) defaultValue(fields()[13]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Encounter>
    WRITER$ = (org.apache.avro.io.DatumWriter<Encounter>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Encounter>
    READER$ = (org.apache.avro.io.DatumReader<Encounter>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










